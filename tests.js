// Generated by Haxe 4.0.0-rc.5+4a745347f
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var DateTools = function() { };
DateTools.__name__ = "DateTools";
DateTools.getMonthDays = function(d) {
	var month = d.getMonth();
	var year = d.getFullYear();
	if(month != 1) {
		return DateTools.DAYS_OF_MONTH[month];
	}
	var isB = year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
	if(isB) {
		return 29;
	} else {
		return 28;
	}
};
var _$Debug_LogLevel_$Impl_$ = {};
_$Debug_LogLevel_$Impl_$.__name__ = "_Debug.LogLevel_Impl_";
_$Debug_LogLevel_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 20:
		return "INF";
	case 30:
		return "WRN";
	case 40:
		return "ERR";
	case 50:
		return "!!!";
	default:
		return "DBG";
	}
};
_$Debug_LogLevel_$Impl_$.format = function(this1,s,color,pos) {
	if(color == null) {
		color = true;
	}
	HxOverrides.dateStr(new Date());
	var p = StringTools.lpad(pos.fileName," ",_$Debug_LogLevel_$Impl_$.longest) + ":" + StringTools.lpad(pos.lineNumber == null ? "null" : "" + pos.lineNumber," ",4) + ":";
	var l;
	switch(this1) {
	case 20:
		l = "INF";
		break;
	case 30:
		l = "WRN";
		break;
	case 40:
		l = "ERR";
		break;
	case 50:
		l = "!!!";
		break;
	default:
		l = "DBG";
	}
	return "" + p + " " + l + ":" + s;
};
var Debug = function() { };
Debug.__name__ = "Debug";
Debug.Log = function(msg,level,pos) {
	if(level == null) {
		level = 20;
	}
	var tmp = haxe_Log.trace;
	var s = Std.string(msg);
	HxOverrides.dateStr(new Date());
	var p = StringTools.lpad(pos.fileName," ",_$Debug_LogLevel_$Impl_$.longest) + ":" + StringTools.lpad(pos.lineNumber == null ? "null" : "" + pos.lineNumber," ",4) + ":";
	var l;
	switch(level) {
	case 20:
		l = "INF";
		break;
	case 30:
		l = "WRN";
		break;
	case 40:
		l = "ERR";
		break;
	case 50:
		l = "!!!";
		break;
	default:
		l = "DBG";
	}
	tmp("" + p + " " + l + ":" + s,pos);
	return msg;
};
Debug.warn = function(msg,level,pos) {
	if(level == null) {
		level = 20;
	}
	return Debug.Log(msg,30,pos);
};
Debug.error = function(msg,level,pos) {
	if(level == null) {
		level = 20;
	}
	return Debug.Log(msg,40,pos);
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = "EReg";
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,split: function(s) {
		return s.replace(this.r,"#__delim__#").split("#__delim__#");
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = "HxOverrides";
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = "Lambda";
Lambda.array = function(it) {
	var a = [];
	var i = $getIterator(it);
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
Lambda.has = function(it,elt) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.fold = function(it,f,first) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		first = f(x1,first);
	}
	return first;
};
Math.__name__ = "Math";
var Reflect = function() { };
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var RunAll = function() { };
RunAll.__name__ = "RunAll";
RunAll.main = function() {
	utest_UTest.run([new TestDelayMs()]);
};
var Std = function() { };
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = "StringTools";
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	buf_b = "" + (s == null ? "null" : "" + s);
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	return buf_b;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var utest_ITest = function() { };
utest_ITest.__name__ = "utest.ITest";
utest_ITest.__isInterface__ = true;
var utest_Test = function() {
};
utest_Test.__name__ = "utest.Test";
utest_Test.__interfaces__ = [utest_ITest];
utest_Test.prototype = {
	__initializeUtest__: function() {
		var init = { tests : [], accessories : { }};
		return init;
	}
	,__class__: utest_Test
};
var TestDelayMs = function() {
	this.done = false;
	this.fps = 60;
	utest_Test.call(this);
};
TestDelayMs.__name__ = "TestDelayMs";
TestDelayMs.__super__ = utest_Test;
TestDelayMs.prototype = $extend(utest_Test.prototype,{
	cancel: null
	,d: null
	,delta: null
	,fps: null
	,done: null
	,setup: function() {
		var _gthis = this;
		this.d = new TimeTask(this.fps,function() {
			_gthis.done = Debug.Log(true,null,{ fileName : "tests/TestDelayMs.hx", lineNumber : 16, className : "TestDelayMs", methodName : "setup"});
		});
		this.delta = 0;
		this.cancel = thx_Timer.frame(function(_delta) {
			_gthis.delta += 1;
			_gthis.d.update(1);
		});
	}
	,teardown: function() {
		this.cancel();
		this.d.destroy();
	}
	,toDeltaMS: function() {
		return this.delta / this.fps * 1000 | 0;
	}
	,toDeltaS: function() {
		return this.delta / this.fps;
	}
	,testtest: function() {
		utest_Assert.isTrue(true,null,{ fileName : "tests/TestDelayMs.hx", lineNumber : 38, className : "TestDelayMs", methodName : "testtest"});
	}
	,testAddMS: function(asy) {
		var _gthis = this;
		this.d.addMs(null,function() {
			utest_Assert.floatEquals(40,_gthis.delta / _gthis.fps * 1000 | 0,10,null,{ fileName : "tests/TestDelayMs.hx", lineNumber : 48, className : "TestDelayMs", methodName : "testAddMS"});
			asy.done({ fileName : "tests/TestDelayMs.hx", lineNumber : 50, className : "TestDelayMs", methodName : "testAddMS"});
		},40);
	}
	,testmoreaddS: function(asy) {
		var _gthis = this;
		this.d.addMs(null,function() {
			return;
		},40);
		this.d.addMs(null,function() {
			utest_Assert.floatEquals(120,_gthis.delta / _gthis.fps * 1000 | 0,10,null,{ fileName : "tests/TestDelayMs.hx", lineNumber : 60, className : "TestDelayMs", methodName : "testmoreaddS"});
			asy.done({ fileName : "tests/TestDelayMs.hx", lineNumber : 61, className : "TestDelayMs", methodName : "testmoreaddS"});
		},80);
	}
	,testthreeaddS: function(asy) {
		var _gthis = this;
		this.d.addMs(null,function() {
			return;
		},40);
		this.d.addMs(null,function() {
			return;
		},80);
		this.d.addMs(null,function() {
			utest_Assert.floatEquals(140,_gthis.delta / _gthis.fps * 1000 | 0,10,null,{ fileName : "tests/TestDelayMs.hx", lineNumber : 70, className : "TestDelayMs", methodName : "testthreeaddS"});
			asy.done({ fileName : "tests/TestDelayMs.hx", lineNumber : 71, className : "TestDelayMs", methodName : "testthreeaddS"});
		},20);
	}
	,testcancelIdddS: function(asy) {
		var _gthis = this;
		this.d.addMs(null,function() {
			return;
		},40);
		this.d.addMs("huit",function() {
			return;
		},80);
		this.d.addMs(null,function() {
			utest_Assert.floatEquals(60,_gthis.delta / _gthis.fps * 1000 | 0,10,null,{ fileName : "tests/TestDelayMs.hx", lineNumber : 82, className : "TestDelayMs", methodName : "testcancelIdddS"});
			asy.done({ fileName : "tests/TestDelayMs.hx", lineNumber : 83, className : "TestDelayMs", methodName : "testcancelIdddS"});
		},20);
		this.d.cancelById("huit");
	}
	,testrunimmediately: function(asy) {
		var _gthis = this;
		this.d.addMs(null,function() {
			return;
		},40);
		this.d.addMs("huit",function() {
			return;
		},80);
		this.d.addMs(null,function() {
			utest_Assert.floatEquals(60,_gthis.delta / _gthis.fps * 1000 | 0,10,null,{ fileName : "tests/TestDelayMs.hx", lineNumber : 95, className : "TestDelayMs", methodName : "testrunimmediately"});
			asy.done({ fileName : "tests/TestDelayMs.hx", lineNumber : 96, className : "TestDelayMs", methodName : "testrunimmediately"});
		},20);
		this.d.runImmediatly("huit");
	}
	,testPause: function(asy) {
		var _gthis = this;
		this.d.addMs(null,function() {
			return;
		},40);
		this.d.addMs("huit",function() {
			_gthis.d.pause();
			haxe_Timer.delay(function() {
				_gthis.d.wakeup();
				return;
			},100);
		},80);
		this.d.addMs(null,function() {
			utest_Assert.floatEquals(240,_gthis.delta / _gthis.fps * 1000 | 0,20,null,{ fileName : "tests/TestDelayMs.hx", lineNumber : 115, className : "TestDelayMs", methodName : "testPause"});
			asy.done({ fileName : "tests/TestDelayMs.hx", lineNumber : 116, className : "TestDelayMs", methodName : "testPause"});
		},20);
	}
	,testSkip: function(asy) {
		var _gthis = this;
		this.d.addMs(null,function() {
			return;
		},40);
		this.d.addMs("huit",function() {
			return;
		},80);
		this.d.addMs(null,function() {
			utest_Assert.floatEquals(0,_gthis.delta / _gthis.fps * 1000 | 0,20,null,{ fileName : "tests/TestDelayMs.hx", lineNumber : 127, className : "TestDelayMs", methodName : "testSkip"});
			asy.done({ fileName : "tests/TestDelayMs.hx", lineNumber : 128, className : "TestDelayMs", methodName : "testSkip"});
		},20);
		this.d.skip();
	}
	,testCancelEverything: function() {
		var _gthis = this;
		this.d.addMs(null,function() {
			return;
		},40);
		this.d.addMs("huit",function() {
			return;
		},80);
		this.d.addMs(null,function() {
			utest_Assert.floatEquals(0,_gthis.delta / _gthis.fps * 1000 | 0,10,null,{ fileName : "tests/TestDelayMs.hx", lineNumber : 139, className : "TestDelayMs", methodName : "testCancelEverything"});
		},20);
		this.d.cancelEverything();
		utest_Assert.isFalse(this.d.hasId("huit"),null,{ fileName : "tests/TestDelayMs.hx", lineNumber : 143, className : "TestDelayMs", methodName : "testCancelEverything"});
	}
	,testDone: function(asy) {
		var _gthis = this;
		this.d.addMs(null,function() {
			return;
		},40);
		this.d.addMs("huit",function() {
			return;
		},80);
		this.d.addMs(null,function() {
			utest_Assert.floatEquals(140,_gthis.delta / _gthis.fps * 1000 | 0,10,null,{ fileName : "tests/TestDelayMs.hx", lineNumber : 152, className : "TestDelayMs", methodName : "testDone"});
			haxe_Timer.delay(function() {
				utest_Assert.isTrue(_gthis.done,null,{ fileName : "tests/TestDelayMs.hx", lineNumber : 155, className : "TestDelayMs", methodName : "testDone"});
				asy.done({ fileName : "tests/TestDelayMs.hx", lineNumber : 156, className : "TestDelayMs", methodName : "testDone"});
				return;
			},10);
		},20);
	}
	,__initializeUtest__: function() {
		var _gthis = this;
		var init = utest_Test.prototype.__initializeUtest__.call(this);
		init.accessories.setup = function() {
			_gthis.setup();
			return utest_Async.getResolved();
		};
		init.accessories.teardown = function() {
			_gthis.teardown();
			return utest_Async.getResolved();
		};
		init.tests.push({ name : "testtest", execute : function() {
			_gthis.testtest();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testAddMS", execute : function() {
			var async = new utest_Async(110);
			_gthis.testAddMS(async);
			return async;
		}});
		init.tests.push({ name : "testmoreaddS", execute : function() {
			var async1 = new utest_Async(130);
			_gthis.testmoreaddS(async1);
			return async1;
		}});
		init.tests.push({ name : "testthreeaddS", execute : function() {
			var async2 = new utest_Async(400);
			_gthis.testthreeaddS(async2);
			return async2;
		}});
		init.tests.push({ name : "testcancelIdddS", execute : function() {
			var async3 = new utest_Async(500);
			_gthis.testcancelIdddS(async3);
			return async3;
		}});
		init.tests.push({ name : "testrunimmediately", execute : function() {
			var async4 = new utest_Async(600);
			_gthis.testrunimmediately(async4);
			return async4;
		}});
		init.tests.push({ name : "testPause", execute : function() {
			var async5 = new utest_Async(600);
			_gthis.testPause(async5);
			return async5;
		}});
		init.tests.push({ name : "testSkip", execute : function() {
			var async6 = new utest_Async(700);
			_gthis.testSkip(async6);
			return async6;
		}});
		init.tests.push({ name : "testCancelEverything", execute : function() {
			_gthis.testCancelEverything();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testDone", execute : function() {
			var async7 = new utest_Async(1000);
			_gthis.testDone(async7);
			return async7;
		}});
		return init;
	}
	,__class__: TestDelayMs
});
var _$TimeTask_Task = function(id,cb,secs) {
	this.cb = cb;
	this.id = id;
	this.secs = secs;
};
_$TimeTask_Task.__name__ = "_TimeTask.Task";
_$TimeTask_Task.prototype = {
	id: null
	,cb: null
	,secs: null
	,dby: null
	,toString: function() {
		return this.secs + " " + Std.string(this.cb);
	}
	,__class__: _$TimeTask_Task
};
var TimeTask = function(fps,_done) {
	this.paused = false;
	this.now = 0;
	this.fps = fps;
	this.delays = [];
	if(_done != null) {
		this.done = _done;
	} else {
		this.done = function() {
		};
	}
};
TimeTask.__name__ = "TimeTask";
TimeTask.prototype = {
	delays: null
	,now: null
	,fps: null
	,delayTime: null
	,done: null
	,toString: function() {
		var tmp = "Delayer(now=" + this.now + ",timers=";
		var _this = this.delays;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _this[i].secs;
		}
		return tmp + result.join(",") + ")";
	}
	,isDestroyed: function() {
		return this.delays == null;
	}
	,destroy: function() {
		this.delays = null;
	}
	,skip: function() {
		var limit = this.delays.length + 100;
		while(this.delays.length > 0 && limit-- > 0) {
			var d = this.delays.shift();
			d.cb();
			d.cb = null;
		}
	}
	,cancelEverything: function() {
		this.delays = [];
	}
	,hasId: function(id) {
		var _g = 0;
		var _g1 = this.delays;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.id == id) {
				return true;
			}
		}
		return false;
	}
	,cancelById: function(id) {
		var i = 0;
		while(i < this.delays.length) if(this.delays[i].id == id) {
			this.delays.splice(i,1);
		} else {
			++i;
		}
		this.calcdelayTime();
	}
	,runImmediatly: function(id) {
		var i = 0;
		while(i < this.delays.length) if(this.delays[i].id == id) {
			var cb = this.delays[i].cb;
			this.delays.splice(i,1);
			cb();
		} else {
			++i;
		}
		this.calcdelayTime();
	}
	,cmp: function(a,b) {
		if(a.secs < b.secs) {
			return -1;
		} else if(a.secs > b.secs) {
			return 1;
		} else {
			return 0;
		}
	}
	,paused: null
	,pause: function() {
		this.paused = true;
	}
	,wakeup: function() {
		this.paused = false;
	}
	,addMs: function(id,cb,msecs) {
		this.delays.push(new _$TimeTask_Task(id,cb,msecs / 1000 * this.fps | 0));
		this.calcdelayTime();
	}
	,addS: function(id,cb,secs) {
		this.delays.push(new _$TimeTask_Task(id,cb,secs * this.fps | 0));
		this.calcdelayTime();
	}
	,calcdelayTime: function() {
		var _gthis = this;
		this.delayTime = 0;
		Lambda.fold(this.delays,function(a,b) {
			_gthis.delayTime += a.secs;
			a.dby = _gthis.delayTime;
			return a;
		},this.delays[0]);
	}
	,update: function(dt) {
		if(this.paused) {
			return;
		}
		if(this.delays.length > 0 && this.delays[0].dby <= this.now) {
			var last = this.delays.length == 1;
			var d = this.delays.shift();
			d.cb();
			if(last) {
				this.done();
			}
			d.cb = null;
		}
		this.now += dt;
	}
	,__class__: TimeTask
};
var ValueType = $hxEnums["ValueType"] = { __ename__ : "ValueType", __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"]
	,TNull: {_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_index:8,__enum__:"ValueType",toString:$estr}
};
var Type = function() { };
Type.__name__ = "Type";
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return $hxEnums[o.__enum__];
};
Type.getClassName = function(c) {
	return c.__name__;
};
Type.createInstance = function(cl,args) {
	return new (Function.prototype.bind.apply(cl,[null].concat(args)));
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var ctorName = enm.__constructs__[e._hx_index];
	var params = enm[ctorName].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__ : "haxe.StackItem", __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"]
	,CFunction: {_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = "haxe.CallStack";
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			var fileName = site.getFileName();
			var fileAddr = fileName == null ? -1 : fileName.indexOf("file:");
			if(haxe_CallStack.wrapCallSite != null && fileAddr > 0) {
				fileName = HxOverrides.substr(fileName,fileAddr + 6,null);
			}
			stack.push(haxe_StackItem.FilePos(method,fileName,site.getLineNumber(),site.getColumnNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s._hx_index) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var _g = s.m;
		b.b = (b.b += "module ") + (_g == null ? "null" : "" + _g);
		break;
	case 2:
		var _g4 = s.column;
		var _g3 = s.line;
		var _g2 = s.file;
		var _g1 = s.s;
		if(_g1 != null) {
			haxe_CallStack.itemToString(b,_g1);
			b.b += " (";
		}
		b.b = (b.b += _g2 == null ? "null" : "" + _g2) + " line ";
		b.b += _g3 == null ? "null" : "" + _g3;
		if(_g4 != null) {
			b.b = (b.b += " column ") + (_g4 == null ? "null" : "" + _g4);
		}
		if(_g1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var _g7 = s.method;
		var _g6 = s.classname;
		b.b = (b.b += Std.string(_g6 == null ? "<unknown>" : _g6)) + ".";
		b.b += _g7 == null ? "null" : "" + _g7;
		break;
	case 4:
		var _g5 = s.v;
		b.b = (b.b += "local function #") + (_g5 == null ? "null" : "" + _g5);
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				var column = Std.parseInt(rie10.matched(4));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1,column));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,remove: null
	,keys: null
	,iterator: null
	,__class__: haxe_IMap
};
var haxe__$Int32_Int32_$Impl_$ = {};
haxe__$Int32_Int32_$Impl_$.__name__ = "haxe._Int32.Int32_Impl_";
haxe__$Int32_Int32_$Impl_$.ucompare = function(a,b) {
	if(a < 0) {
		if(b < 0) {
			return ~b - ~a | 0;
		} else {
			return 1;
		}
	}
	if(b < 0) {
		return -1;
	} else {
		return a - b | 0;
	}
};
var haxe__$Int64_Int64_$Impl_$ = {};
haxe__$Int64_Int64_$Impl_$.__name__ = "haxe._Int64.Int64_Impl_";
haxe__$Int64_Int64_$Impl_$.is = function(val) {
	return ((val) instanceof haxe__$Int64__$_$_$Int64);
};
haxe__$Int64_Int64_$Impl_$.toString = function(this1) {
	var i = this1;
	var b_high = 0;
	var b_low = 0;
	if(i.high == b_high && i.low == b_low) {
		return "0";
	}
	var str = "";
	var neg = false;
	if(i.high < 0) {
		neg = true;
	}
	var ten = new haxe__$Int64__$_$_$Int64(0,10);
	while(true) {
		var b_high1 = 0;
		var b_low1 = 0;
		if(!(i.high != b_high1 || i.low != b_low1)) {
			break;
		}
		var r = haxe__$Int64_Int64_$Impl_$.divMod(i,ten);
		if(r.modulus.high < 0) {
			var x = r.modulus;
			var low = ~x.low + 1 | 0;
			str = low + str;
			var x1 = r.quotient;
			var high = ~x1.high;
			var low1 = ~x1.low + 1 | 0;
			if(low1 == 0) {
				++high;
				high = high | 0;
			}
			i = new haxe__$Int64__$_$_$Int64(high,low1);
		} else {
			str = r.modulus.low + str;
			i = r.quotient;
		}
	}
	if(neg) {
		str = "-" + str;
	}
	return str;
};
haxe__$Int64_Int64_$Impl_$.divMod = function(dividend,divisor) {
	if(divisor.high == 0) {
		switch(divisor.low) {
		case 0:
			throw new js__$Boot_HaxeError("divide by zero");
		case 1:
			return { quotient : new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low), modulus : new haxe__$Int64__$_$_$Int64(0,0)};
		}
	}
	var divSign = dividend.high < 0 != divisor.high < 0;
	var modulus;
	if(dividend.high < 0) {
		var high = ~dividend.high;
		var low = ~dividend.low + 1 | 0;
		if(low == 0) {
			++high;
			high = high | 0;
		}
		modulus = new haxe__$Int64__$_$_$Int64(high,low);
	} else {
		modulus = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
	}
	if(divisor.high < 0) {
		var high1 = ~divisor.high;
		var low1 = ~divisor.low + 1 | 0;
		if(low1 == 0) {
			++high1;
			high1 = high1 | 0;
		}
		divisor = new haxe__$Int64__$_$_$Int64(high1,low1);
	} else {
		divisor = divisor;
	}
	var quotient = new haxe__$Int64__$_$_$Int64(0,0);
	var mask = new haxe__$Int64__$_$_$Int64(0,1);
	while(!(divisor.high < 0)) {
		var v = haxe__$Int32_Int32_$Impl_$.ucompare(divisor.high,modulus.high);
		var cmp = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(divisor.low,modulus.low);
		divisor = new haxe__$Int64__$_$_$Int64(divisor.high << 1 | divisor.low >>> 31,divisor.low << 1);
		mask = new haxe__$Int64__$_$_$Int64(mask.high << 1 | mask.low >>> 31,mask.low << 1);
		if(cmp >= 0) {
			break;
		}
	}
	while(true) {
		var b_high = 0;
		var b_low = 0;
		if(!(mask.high != b_high || mask.low != b_low)) {
			break;
		}
		var v1 = haxe__$Int32_Int32_$Impl_$.ucompare(modulus.high,divisor.high);
		if((v1 != 0 ? v1 : haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low,divisor.low)) >= 0) {
			quotient = new haxe__$Int64__$_$_$Int64(quotient.high | mask.high,quotient.low | mask.low);
			var high2 = modulus.high - divisor.high | 0;
			var low2 = modulus.low - divisor.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low,divisor.low) < 0) {
				--high2;
				high2 = high2 | 0;
			}
			modulus = new haxe__$Int64__$_$_$Int64(high2,low2);
		}
		mask = new haxe__$Int64__$_$_$Int64(mask.high >>> 1,mask.high << 31 | mask.low >>> 1);
		divisor = new haxe__$Int64__$_$_$Int64(divisor.high >>> 1,divisor.high << 31 | divisor.low >>> 1);
	}
	if(divSign) {
		var high3 = ~quotient.high;
		var low3 = ~quotient.low + 1 | 0;
		if(low3 == 0) {
			++high3;
			high3 = high3 | 0;
		}
		quotient = new haxe__$Int64__$_$_$Int64(high3,low3);
	}
	if(dividend.high < 0) {
		var high4 = ~modulus.high;
		var low4 = ~modulus.low + 1 | 0;
		if(low4 == 0) {
			++high4;
			high4 = high4 | 0;
		}
		modulus = new haxe__$Int64__$_$_$Int64(high4,low4);
	}
	return { quotient : quotient, modulus : modulus};
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
haxe__$Int64__$_$_$Int64.__name__ = "haxe._Int64.___Int64";
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			str += ", " + Std.string(v1);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_Utf8 = function() { };
haxe_Utf8.__name__ = "haxe.Utf8";
haxe_Utf8.compare = function(a,b) {
	if(a > b) {
		return 1;
	} else if(a == b) {
		return 0;
	} else {
		return -1;
	}
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
var haxe_ds_BalancedTree = function() {
};
haxe_ds_BalancedTree.__name__ = "haxe.ds.BalancedTree";
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if(typeof(((e) instanceof js__$Boot_HaxeError) ? e.val : e) == "string") {
				return false;
			} else {
				throw e;
			}
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,iterator: function() {
		var ret = [];
		this.iteratorLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,removeLoop: function(k,node) {
		if(node == null) {
			throw new js__$Boot_HaxeError("Not_found");
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return this.merge(node.left,node.right);
		} else if(c < 0) {
			return this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
		}
	}
	,iteratorLoop: function(node,acc) {
		if(node != null) {
			this.iteratorLoop(node.left,acc);
			acc.push(node.value);
			this.iteratorLoop(node.right,acc);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) {
			return t2;
		}
		if(t2 == null) {
			return t1;
		}
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		if(t == null) {
			throw new js__$Boot_HaxeError("Not_found");
		} else if(t.left == null) {
			return t;
		} else {
			return this.minBinding(t.left);
		}
	}
	,removeMinBinding: function(t) {
		if(t.left == null) {
			return t.right;
		} else {
			return this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var _this3 = r.left;
			if((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this2 = this.left;
			tmp = _this2 == null ? 0 : _this2._height;
		} else {
			var _this3 = this.right;
			tmp = _this3 == null ? 0 : _this3._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
haxe_ds_TreeNode.__name__ = "haxe.ds.TreeNode";
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
haxe_ds_EnumValueMap.__name__ = "haxe.ds.EnumValueMap";
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && v1.__enum__ == null && (((v2) instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) this.h.hasOwnProperty(key) ? a.push(key | 0) : null;
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new haxe_ds__$List_ListIterator(this.h);
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds__$List_ListIterator = function(head) {
	this.head = head;
};
haxe_ds__$List_ListIterator.__name__ = "haxe.ds._List.ListIterator";
haxe_ds__$List_ListIterator.prototype = {
	head: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: haxe_ds__$List_ListIterator
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__ || (key.__id__ = $global.$haxeUID++);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = $hxEnums["haxe.ds.Option"] = { __ename__ : "haxe.ds.Option", __constructs__ : ["Some","None"]
	,Some: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Option",toString:$estr}; },$_.__params__ = ["v"],$_)
	,None: {_hx_index:1,__enum__:"haxe.ds.Option",toString:$estr}
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
haxe_ds__$StringMap_StringMapIterator.__name__ = "haxe.ds._StringMap.StringMapIterator";
haxe_ds__$StringMap_StringMapIterator.prototype = {
	map: null
	,keys: null
	,index: null
	,count: null
	,hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var haxe_rtti_Meta = function() { };
haxe_rtti_Meta.__name__ = "haxe.rtti.Meta";
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
haxe_rtti_Meta.getFields = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.fields == null) {
		return { };
	} else {
		return meta.fields;
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = "js._Boot.HaxeError";
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	if(Object.prototype.hasOwnProperty.call(cc,"__interfaces__")) {
		var intf = cc.__interfaces__;
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var thx_Arrays = function() { };
thx_Arrays.__name__ = "thx.Arrays";
thx_Arrays.append = function(array,element) {
	array.push(element);
	return array;
};
thx_Arrays.appendIf = function(array,cond,element) {
	if(cond) {
		array.push(element);
	}
	return array;
};
thx_Arrays.applyIndexes = function(array,indexes,incrementDuplicates) {
	if(incrementDuplicates == null) {
		incrementDuplicates = false;
	}
	if(indexes.length != array.length) {
		throw new thx_Error("`Arrays.applyIndexes` can only be applied to two arrays with the same length",null,{ fileName : "thx/Arrays.hx", lineNumber : 55, className : "thx.Arrays", methodName : "applyIndexes"});
	}
	var result = [];
	if(incrementDuplicates) {
		var usedIndexes = thx__$Set_Set_$Impl_$.createInt();
		var _g = 0;
		var _g1 = array.length;
		while(_g < _g1) {
			var i = _g++;
			var index = indexes[i];
			while(usedIndexes.h.hasOwnProperty(index)) ++index;
			thx__$Set_Set_$Impl_$.add(usedIndexes,index);
			result[index] = array[i];
		}
	} else {
		var _g2 = 0;
		var _g11 = array.length;
		while(_g2 < _g11) {
			var i1 = _g2++;
			result[indexes[i1]] = array[i1];
		}
	}
	return result;
};
thx_Arrays.monoid = function() {
	return { zero : [], append : function(a,b) {
		return a.concat(b);
	}};
};
thx_Arrays.after = function(array,element) {
	return array.slice(thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) + 1);
};
thx_Arrays.atIndex = function(array,i) {
	if(i >= 0 && i < array.length) {
		return haxe_ds_Option.Some(array[i]);
	} else {
		return haxe_ds_Option.None;
	}
};
thx_Arrays.getOption = function(array,i) {
	var value = array[i];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.each = function(arr,effect) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		effect(arr[i]);
	}
};
thx_Arrays.eachi = function(arr,effect) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		effect(arr[i],i);
	}
};
thx_Arrays.all = function(arr,predicate) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		if(!predicate(arr[i])) {
			return false;
		}
	}
	return true;
};
thx_Arrays.any = function(arr,predicate) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(arr[i])) {
			return true;
		}
	}
	return false;
};
thx_Arrays.at = function(arr,indexes) {
	var result = new Array(indexes.length);
	var _g = 0;
	var _g1 = indexes.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = arr[indexes[i]];
	}
	return result;
};
thx_Arrays.before = function(array,element) {
	return array.slice(0,thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element));
};
thx_Arrays.commonsFromStart = function(self,other,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var count = 0;
	var _g = 0;
	var _g1 = thx_Arrays.zip(self,other);
	while(_g < _g1.length) {
		var pair = _g1[_g];
		++_g;
		if(equality(pair._0,pair._1)) {
			++count;
		} else {
			break;
		}
	}
	return self.slice(0,count);
};
thx_Arrays.compact = function(arr) {
	var _g = [];
	var _g1 = 0;
	var _g2 = arr;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(null != v) {
			_g.push(v);
		}
	}
	return _g;
};
thx_Arrays.compare = function(a,b) {
	var v = thx_Ints.compare(a.length,b.length);
	if(v != 0) {
		return v;
	}
	var _g = 0;
	var _g1 = a.length;
	while(_g < _g1) {
		var i = _g++;
		v = thx_Dynamics.compare(a[i],b[i]);
		if(v != 0) {
			return v;
		}
	}
	return 0;
};
thx_Arrays.contains = function(array,element,eq) {
	if(null == eq) {
		return thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) >= 0;
	} else {
		var _g = 0;
		var _g1 = array.length;
		while(_g < _g1) {
			var i = _g++;
			if(eq(array[i],element)) {
				return true;
			}
		}
		return false;
	}
};
thx_Arrays.containsAll = function(array,elements,eq) {
	var el = $getIterator(elements);
	while(el.hasNext()) {
		var el1 = el.next();
		if(!thx_Arrays.contains(array,el1,eq)) {
			return false;
		}
	}
	return true;
};
thx_Arrays.containsAny = function(array,elements,eq) {
	var el = $getIterator(elements);
	while(el.hasNext()) {
		var el1 = el.next();
		if(thx_Arrays.contains(array,el1,eq)) {
			return true;
		}
	}
	return false;
};
thx_Arrays.create = function(length,fillWith) {
	var arr = length > 0 ? new Array(length) : [];
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		arr[i] = fillWith;
	}
	return arr;
};
thx_Arrays.fromItem = function(t) {
	return [t];
};
thx_Arrays.cross = function(a,b) {
	var r = [];
	var va = HxOverrides.iter(a);
	while(va.hasNext()) {
		var va1 = va.next();
		var vb = HxOverrides.iter(b);
		while(vb.hasNext()) {
			var vb1 = vb.next();
			r.push([va1,vb1]);
		}
	}
	return r;
};
thx_Arrays.crossMulti = function(array) {
	var acopy = array.slice();
	var _this = acopy.shift();
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = [_this[i]];
	}
	var result1 = result;
	while(acopy.length > 0) {
		var array1 = acopy.shift();
		var tresult = result1;
		result1 = [];
		var v = HxOverrides.iter(array1);
		while(v.hasNext()) {
			var v1 = v.next();
			var _g11 = 0;
			while(_g11 < tresult.length) {
				var ar = tresult[_g11];
				++_g11;
				var t = ar.slice();
				t.push(v1);
				result1.push(t);
			}
		}
	}
	return result1;
};
thx_Arrays.distinct = function(array,predicate) {
	var result = [];
	if(array.length <= 1) {
		return array.slice();
	}
	if(null == predicate) {
		predicate = thx_Functions.equality;
	}
	var v = HxOverrides.iter(array);
	while(v.hasNext()) {
		var v1 = v.next();
		var v2 = [v1];
		var keep = !thx_Arrays.any(result,(function(v3) {
			return function(r) {
				return predicate(r,v3[0]);
			};
		})(v2));
		if(keep) {
			result.push(v2[0]);
		}
	}
	return result;
};
thx_Arrays.eachPair = function(array,callback) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var _g2 = i;
		var _g11 = array.length;
		while(_g2 < _g11) {
			var j = _g2++;
			if(!callback(array[i],array[j])) {
				return;
			}
		}
	}
};
thx_Arrays.equals = function(a,b,equality) {
	if(a == null || b == null || a.length != b.length) {
		return false;
	}
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var _g = 0;
	var _g1 = a.length;
	while(_g < _g1) {
		var i = _g++;
		if(!equality(a[i],b[i])) {
			return false;
		}
	}
	return true;
};
thx_Arrays.extract = function(a,predicate) {
	var _g = 0;
	var _g1 = a.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(a[i])) {
			return a.splice(i,1)[0];
		}
	}
	return null;
};
thx_Arrays.filterNull = function(a) {
	var arr = [];
	var v = HxOverrides.iter(a);
	while(v.hasNext()) {
		var v1 = v.next();
		if(null != v1) {
			arr.push(v1);
		}
	}
	return arr;
};
thx_Arrays.filterOption = function(a) {
	return thx_Arrays.reduce(a,function(acc,maybeV) {
		switch(maybeV._hx_index) {
		case 0:
			acc.push(maybeV.v);
			break;
		case 1:
			break;
		}
		return acc;
	},[]);
};
thx_Arrays.flattenOptions = function(a) {
	var acc = [];
	var e = HxOverrides.iter(a);
	while(e.hasNext()) {
		var e1 = e.next();
		switch(e1._hx_index) {
		case 0:
			acc.push(e1.v);
			break;
		case 1:
			return haxe_ds_Option.None;
		}
	}
	return haxe_ds_Option.Some(acc);
};
thx_Arrays.find = function(array,predicate) {
	var element = HxOverrides.iter(array);
	while(element.hasNext()) {
		var element1 = element.next();
		if(predicate(element1)) {
			return element1;
		}
	}
	return null;
};
thx_Arrays.findi = function(array,predicate) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(array[i],i)) {
			return array[i];
		}
	}
	return null;
};
thx_Arrays.findiOption = function(array,predicate) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(array[i],i)) {
			return haxe_ds_Option.Some(array[i]);
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findOption = function(array,predicate) {
	var element = HxOverrides.iter(array);
	while(element.hasNext()) {
		var element1 = element.next();
		if(predicate(element1)) {
			return haxe_ds_Option.Some(element1);
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findMap = function(values,f) {
	var value = HxOverrides.iter(values);
	while(value.hasNext()) {
		var value1 = value.next();
		var opt = f(value1);
		if(!thx_Options.isNone(opt)) {
			return opt;
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.filterMap = function(values,f) {
	var acc = [];
	var value = HxOverrides.iter(values);
	while(value.hasNext()) {
		var value1 = value.next();
		var _g1 = f(value1);
		switch(_g1._hx_index) {
		case 0:
			acc.push(_g1.v);
			break;
		case 1:
			break;
		}
	}
	return acc;
};
thx_Arrays.findSome = function(options) {
	var option = HxOverrides.iter(options);
	while(option.hasNext()) {
		var option1 = option.next();
		if(!thx_Options.isNone(option1)) {
			return option1;
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findIndex = function(array,predicate) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(array[i])) {
			return i;
		}
	}
	return -1;
};
thx_Arrays.findLast = function(array,predicate) {
	var len = array.length;
	var j;
	var _g = 0;
	while(_g < len) {
		var i = _g++;
		j = len - i - 1;
		if(predicate(array[j])) {
			return array[j];
		}
	}
	return null;
};
thx_Arrays.first = function(array) {
	return array[0];
};
thx_Arrays.firstOption = function(array) {
	var value = array[0];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.flatMap = function(array,callback) {
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = callback(array[i]);
	}
	return Array.prototype.concat.apply([],result);
};
thx_Arrays.flatten = function(array) {
	return Array.prototype.concat.apply([],array);
};
thx_Arrays.from = function(array,element) {
	return array.slice(thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element));
};
thx_Arrays.groupByAppend = function(arr,resolver,map) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		var v = arr[i];
		var key = resolver(v);
		var acc = map.get(key);
		if(null == acc) {
			map.set(key,[v]);
		} else {
			acc.push(v);
		}
	}
	return map;
};
thx_Arrays.spanByIndex = function(arr,spanKey) {
	var acc = [];
	var cur = null;
	var j = -1;
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		var k = spanKey(i);
		if(k == null) {
			throw new thx_Error("spanKey function returned null for index " + i,null,{ fileName : "thx/Arrays.hx", lineNumber : 633, className : "thx.Arrays", methodName : "spanByIndex"});
		}
		if(cur == k) {
			acc[j].push(arr[i]);
		} else {
			cur = k;
			++j;
			acc.push([arr[i]]);
		}
	}
	return acc;
};
thx_Arrays.hasElements = function(array) {
	if(null != array) {
		return array.length > 0;
	} else {
		return false;
	}
};
thx_Arrays.head = function(array) {
	return array[0];
};
thx_Arrays.ifEmpty = function(array,alt) {
	if(null != array && 0 != array.length) {
		return array;
	} else {
		return alt;
	}
};
thx_Arrays.initial = function(array) {
	return array.slice(0,array.length - 1);
};
thx_Arrays.intersperse = function(array,value) {
	return thx_Arrays.reducei(array,function(acc,v,i) {
		acc[i * 2] = v;
		return acc;
	},thx_Arrays.create(array.length * 2 - 1,value));
};
thx_Arrays.interspersef = function(array,f) {
	if(array.length == 0) {
		return [];
	}
	var acc = [array[0]];
	var _g = 1;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		acc.push(f());
		acc.push(array[i]);
	}
	return acc;
};
thx_Arrays.isEmpty = function(array) {
	if(null != array) {
		return array.length == 0;
	} else {
		return true;
	}
};
thx_Arrays.last = function(array) {
	return array[array.length - 1];
};
thx_Arrays.lastOption = function(array) {
	var value = array[array.length - 1];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.map = function(array,callback) {
	var r = [];
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		r.push(callback(array[i]));
	}
	return r;
};
thx_Arrays.mapi = function(array,callback) {
	var r = [];
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		r.push(callback(array[i],i));
	}
	return r;
};
thx_Arrays.mapRight = function(array,callback) {
	var i = array.length;
	var result = [];
	while(--i >= 0) result.push(callback(array[i]));
	return result;
};
thx_Arrays.order = function(array,sort) {
	var n = array.slice();
	n.sort(sort);
	return n;
};
thx_Arrays.pull = function(array,toRemove,equality) {
	var element = HxOverrides.iter(toRemove);
	while(element.hasNext()) {
		var element1 = element.next();
		thx_Arrays.removeAll(array,element1,equality);
	}
};
thx_Arrays.pushIf = function(array,condition,value) {
	if(condition) {
		array.push(value);
	}
	return array;
};
thx_Arrays.rank = function(array,compare,incrementDuplicates) {
	if(incrementDuplicates == null) {
		incrementDuplicates = true;
	}
	var r = [];
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = { _0 : array[i], _1 : i};
		r.push(this1);
	}
	var arr = r;
	arr.sort(function(a,b) {
		return compare(a._0,b._0);
	});
	if(incrementDuplicates) {
		var usedIndexes = thx__$Set_Set_$Impl_$.createInt();
		return thx_Arrays.reducei(arr,function(acc,x,i1) {
			var index = i1 > 0 && compare(arr[i1 - 1]._0,x._0) == 0 ? acc[arr[i1 - 1]._1] : i1;
			while(usedIndexes.h.hasOwnProperty(index)) ++index;
			thx__$Set_Set_$Impl_$.add(usedIndexes,index);
			acc[x._1] = index;
			return acc;
		},[]);
	} else {
		return thx_Arrays.reducei(arr,function(acc1,x1,i2) {
			acc1[x1._1] = i2 > 0 && compare(arr[i2 - 1]._0,x1._0) == 0 ? acc1[arr[i2 - 1]._1] : i2;
			return acc1;
		},[]);
	}
};
thx_Arrays.reduce = function(array,f,initial) {
	var v = HxOverrides.iter(array);
	while(v.hasNext()) {
		var v1 = v.next();
		initial = f(initial,v1);
	}
	return initial;
};
thx_Arrays.foldLeft = function(array,init,f) {
	return thx_Arrays.reduce(array,f,init);
};
thx_Arrays.foldLeft1 = function(array,f) {
	var tail = thx_Arrays.dropLeft(array,1);
	var head = array[0];
	if(head == null) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(thx_Arrays.reduce(tail,f,head));
	}
};
thx_Arrays.foldLeftEither = function(array,init,f) {
	var acc = thx_Either.Right(init);
	var a = HxOverrides.iter(array);
	while(a.hasNext()) {
		var a1 = a.next();
		switch(acc._hx_index) {
		case 0:
			return acc;
		case 1:
			acc = f(acc.value,a1);
			break;
		}
	}
	return acc;
};
thx_Arrays.foldMap = function(array,f,m) {
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f(array[i]);
	}
	var _e = m;
	return thx_Arrays.reduce(result,function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	},thx__$Monoid_Monoid_$Impl_$.get_zero(m));
};
thx_Arrays.fold = function(array,m) {
	return thx_Arrays.foldMap(array,thx_Functions.identity,m);
};
thx_Arrays.nel = function(array) {
	return thx__$Nel_Nel_$Impl_$.fromArray(array);
};
thx_Arrays.foldS = function(array,s) {
	return thx_Options.map(thx_Arrays.nel(array),function(x) {
		return thx__$Nel_Nel_$Impl_$.fold(x,s);
	});
};
thx_Arrays.resize = function(array,length,fill) {
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_Arrays.resized = function(array,length,fill) {
	array = array.slice();
	return thx_Arrays.resize(array,length,fill);
};
thx_Arrays.reducei = function(array,f,initial) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		initial = f(initial,array[i],i);
	}
	return initial;
};
thx_Arrays.reduceRight = function(array,f,initial) {
	var i = array.length;
	while(--i >= 0) initial = f(initial,array[i]);
	return initial;
};
thx_Arrays.removeAll = function(array,element,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var i = array.length;
	while(--i >= 0) if(equality(array[i],element)) {
		array.splice(i,1);
	}
};
thx_Arrays.rest = function(array) {
	return array.slice(1);
};
thx_Arrays.reversed = function(array) {
	var result = array.slice();
	result.reverse();
	return result;
};
thx_Arrays.sample = function(array,n) {
	var b = array.length;
	n = n < b ? n : b;
	var copy = array.slice();
	var result = [];
	var _g = 0;
	var _g1 = n;
	while(_g < _g1) {
		++_g;
		result.push(copy.splice(Std.random(copy.length),1)[0]);
	}
	return result;
};
thx_Arrays.sampleOne = function(array) {
	return array[Std.random(array.length)];
};
thx_Arrays.string = function(arr) {
	var f = thx_Dynamics.string;
	var result = new Array(arr.length);
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f(arr[i]);
	}
	return "[" + result.join(", ") + "]";
};
thx_Arrays.shuffle = function(a) {
	var t = thx_Ints.range(a.length);
	var array = [];
	while(t.length > 0) {
		var pos = Std.random(t.length);
		var index = t[pos];
		t.splice(pos,1);
		array.push(a[index]);
	}
	return array;
};
thx_Arrays.split = function(array,parts) {
	var len = Math.ceil(array.length / parts);
	return thx_Arrays.splitBy(array,len);
};
thx_Arrays.splitBy = function(array,len) {
	var res = [];
	var b = array.length;
	len = len < b ? len : b;
	var _g = 0;
	var _g1 = Math.ceil(array.length / len);
	while(_g < _g1) {
		var p = _g++;
		res.push(array.slice(p * len,(p + 1) * len));
	}
	return res;
};
thx_Arrays.splitByPad = function(arr,len,pad) {
	var res = thx_Arrays.splitBy(arr,len);
	while(res[res.length - 1].length < len) res[res.length - 1].push(pad);
	return res;
};
thx_Arrays.tail = function(array) {
	return array.slice(1);
};
thx_Arrays.take = function(arr,n) {
	return arr.slice(0,n);
};
thx_Arrays.takeLast = function(arr,n) {
	return arr.slice(arr.length - n);
};
thx_Arrays.traverseOption = function(arr,f) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx_Options.ap(f(t),thx_Options.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}));
	},haxe_ds_Option.Some([]));
};
thx_Arrays.traverseEither = function(arr,f) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx_Eithers.ap(f(t),thx_Eithers.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}));
	},thx_Either.Right([]));
};
thx_Arrays.traverseValidation = function(arr,f,s) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx__$Validation_Validation_$Impl_$.ap(f(t),thx__$Validation_Validation_$Impl_$.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}),s);
	},thx_Either.Right([]));
};
thx_Arrays.traverseValidationIndexed = function(arr,f,s) {
	return thx_Arrays.reducei(arr,function(acc,t,i) {
		return thx__$Validation_Validation_$Impl_$.ap(f(t,i),thx__$Validation_Validation_$Impl_$.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}),s);
	},thx_Either.Right([]));
};
thx_Arrays.rotate = function(arr) {
	var result = [];
	var _g = 0;
	var _g1 = arr[0].length;
	while(_g < _g1) {
		var i = _g++;
		var row = [];
		result.push(row);
		var _g2 = 0;
		var _g11 = arr.length;
		while(_g2 < _g11) {
			var j = _g2++;
			row.push(arr[j][i]);
		}
	}
	return result;
};
thx_Arrays.sliding2 = function(arr,f) {
	if(arr.length < 2) {
		return [];
	} else {
		var result = [];
		var _g = 0;
		var _g1 = arr.length - 1;
		while(_g < _g1) {
			var i = _g++;
			result.push(f(arr[i],arr[i + 1]));
		}
		return result;
	}
};
thx_Arrays.unzip = function(array) {
	var a1 = [];
	var a2 = [];
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var t = array[i];
		a1.push(t._0);
		a2.push(t._1);
		result[i] = null;
	}
	var this1 = { _0 : a1, _1 : a2};
	return this1;
};
thx_Arrays.unzip3 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var t = array[i];
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		result[i] = null;
	}
	var this1 = { _0 : a1, _1 : a2, _2 : a3};
	return this1;
};
thx_Arrays.unzip4 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var t = array[i];
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		result[i] = null;
	}
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4};
	return this1;
};
thx_Arrays.unzip5 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var a5 = [];
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var t = array[i];
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		a5.push(t._4);
		result[i] = null;
	}
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4, _4 : a5};
	return this1;
};
thx_Arrays.zip = function(array1,array2) {
	var a = array1.length;
	var b = array2.length;
	var length = a < b ? a : b;
	var array = [];
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = { _0 : array1[i], _1 : array2[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip3 = function(array1,array2,array3) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length]);
	var array = [];
	var _g = 0;
	while(_g < length) {
		var i = _g++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip4 = function(array1,array2,array3,array4) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length,array4.length]);
	var array = [];
	var _g = 0;
	while(_g < length) {
		var i = _g++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i], _3 : array4[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip5 = function(array1,array2,array3,array4,array5) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length,array4.length,array5.length]);
	var array = [];
	var _g = 0;
	while(_g < length) {
		var i = _g++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i], _3 : array4[i], _4 : array5[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zipAp = function(ax,fx) {
	var result = [];
	var _g = 0;
	var a = ax.length;
	var b = fx.length;
	var _g1 = a < b ? a : b;
	while(_g < _g1) {
		var i = _g++;
		result.push(fx[i](ax[i]));
	}
	return result;
};
thx_Arrays.zip2Ap = function(f,ax,bx) {
	var f1 = thx_Functions2.curry(f);
	var result = new Array(ax.length);
	var _g = 0;
	var _g1 = ax.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f1(ax[i]);
	}
	return thx_Arrays.zipAp(bx,result);
};
thx_Arrays.zip3Ap = function(f,ax,bx,cx) {
	var f1 = f;
	return thx_Arrays.zipAp(cx,thx_Arrays.zip2Ap(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	},ax,bx));
};
thx_Arrays.zip4Ap = function(f,ax,bx,cx,dx) {
	var f1 = f;
	return thx_Arrays.zipAp(dx,thx_Arrays.zip3Ap(function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	},ax,bx,cx));
};
thx_Arrays.zip5Ap = function(f,ax,bx,cx,dx,ex) {
	var f1 = f;
	return thx_Arrays.zipAp(ex,thx_Arrays.zip4Ap(function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	},ax,bx,cx,dx));
};
thx_Arrays.withPrepend = function(arr,el) {
	return [el].concat(arr);
};
thx_Arrays.with = function(arr,el) {
	return arr.concat([el]);
};
thx_Arrays.withSlice = function(arr,other,start,length) {
	if(length == null) {
		length = 0;
	}
	return arr.slice(0,start).concat(other).concat(arr.slice(start + length));
};
thx_Arrays.withInsert = function(arr,el,pos) {
	return arr.slice(0,pos).concat([el]).concat(arr.slice(pos));
};
thx_Arrays.maxBy = function(arr,ord) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var _e = ord;
		return haxe_ds_Option.Some(thx_Arrays.reduce(arr,function(a0,a1) {
			return thx__$Ord_Ord_$Impl_$.max(_e,a0,a1);
		},arr[0]));
	}
};
thx_Arrays.minBy = function(arr,ord) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var _e = ord;
		return haxe_ds_Option.Some(thx_Arrays.reduce(arr,function(a0,a1) {
			return thx__$Ord_Ord_$Impl_$.min(_e,a0,a1);
		},arr[0]));
	}
};
thx_Arrays.toMap = function(arr,keyOrder) {
	var m = thx_fp_MapImpl.Tip;
	var collisions = [];
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		var tuple = arr[i];
		if(thx_Options.isNone(thx_fp__$Map_Map_$Impl_$.lookup(m,tuple._0,keyOrder))) {
			m = thx_fp__$Map_Map_$Impl_$.insert(m,tuple._0,tuple._1,keyOrder);
		} else {
			collisions.push(tuple._0);
		}
	}
	return thx_Options.toFailure(thx__$Nel_Nel_$Impl_$.fromArray(collisions),m);
};
thx_Arrays.toStringMap = function(arr) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		var key = t._0;
		var value = t._1;
		if(__map_reserved[key] != null) {
			acc.setReserved(key,value);
		} else {
			acc.h[key] = value;
		}
		return acc;
	},new haxe_ds_StringMap());
};
thx_Arrays.partition = function(arr,f) {
	var this1 = { _0 : [], _1 : []};
	return thx_Arrays.reduce(arr,function(a,b) {
		if(f(b)) {
			a._0.push(b);
		} else {
			a._1.push(b);
		}
		return a;
	},this1);
};
thx_Arrays.partitionWhile = function(arr,f) {
	var partitioning = true;
	var this1 = { _0 : [], _1 : []};
	return thx_Arrays.reduce(arr,function(a,b) {
		if(partitioning) {
			if(f(b)) {
				a._0.push(b);
			} else {
				partitioning = false;
				a._1.push(b);
			}
		} else {
			a._1.push(b);
		}
		return a;
	},this1);
};
thx_Arrays.dropLeft = function(a,n) {
	if(n >= a.length) {
		return [];
	} else {
		return a.slice(n);
	}
};
thx_Arrays.dropRight = function(a,n) {
	if(n >= a.length) {
		return [];
	} else {
		return a.slice(0,a.length - n);
	}
};
thx_Arrays.dropWhile = function(a,p) {
	var r = [].concat(a);
	var e = HxOverrides.iter(a);
	while(e.hasNext()) {
		var e1 = e.next();
		if(p(e1)) {
			r.shift();
		} else {
			break;
		}
	}
	return r;
};
thx_Arrays.pad = function(arr,len,def) {
	var len0 = len - arr.length;
	var arr0 = [];
	var _g = 0;
	while(_g < len0) {
		++_g;
		arr0.push(def);
	}
	return arr.concat(arr0);
};
thx_Arrays.fill = function(arr,def) {
	var result = new Array(arr.length);
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		var x = arr[i];
		result[i] = x == null ? def : x;
	}
	return result;
};
var thx_ArrayFloats = function() { };
thx_ArrayFloats.__name__ = "thx.ArrayFloats";
thx_ArrayFloats.average = function(arr) {
	return thx_ArrayFloats.sum(arr) / arr.length;
};
thx_ArrayFloats.compact = function(arr) {
	var _g = [];
	var _g1 = 0;
	var _g2 = arr;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(null != v && isFinite(v)) {
			_g.push(v);
		}
	}
	return _g;
};
thx_ArrayFloats.max = function(arr) {
	return thx_Options.get(thx_Arrays.maxBy(arr,thx_Floats.order));
};
thx_ArrayFloats.min = function(arr) {
	return thx_Options.get(thx_Arrays.minBy(arr,thx_Floats.order));
};
thx_ArrayFloats.resize = function(array,length,fill) {
	if(fill == null) {
		fill = 0.0;
	}
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_ArrayFloats.resized = function(array,length,fill) {
	if(fill == null) {
		fill = 0.0;
	}
	array = array.slice();
	return thx_ArrayFloats.resize(array,length,fill);
};
thx_ArrayFloats.standardDeviation = function(array) {
	if(array.length < 2) {
		return 0.0;
	}
	var mean = thx_ArrayFloats.average(array);
	var variance = thx_Arrays.reduce(array,function(acc,val) {
		return acc + Math.pow(val - mean,2);
	},0) / (array.length - 1);
	return Math.sqrt(variance);
};
thx_ArrayFloats.sum = function(arr) {
	return thx_Arrays.reduce(arr,function(tot,v) {
		return tot + v;
	},0.0);
};
var thx_ArrayInts = function() { };
thx_ArrayInts.__name__ = "thx.ArrayInts";
thx_ArrayInts.average = function(arr) {
	return thx_ArrayInts.sum(arr) / arr.length;
};
thx_ArrayInts.max = function(arr) {
	return thx_Options.get(thx_Arrays.maxBy(arr,thx_Ints.order));
};
thx_ArrayInts.min = function(arr) {
	return thx_Options.get(thx_Arrays.minBy(arr,thx_Ints.order));
};
thx_ArrayInts.resize = function(array,length,fill) {
	if(fill == null) {
		fill = 0;
	}
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_ArrayInts.resized = function(array,length,fill) {
	if(fill == null) {
		fill = 0;
	}
	array = array.slice();
	return thx_ArrayInts.resize(array,length,fill);
};
thx_ArrayInts.sum = function(arr) {
	return thx_Arrays.reduce(arr,function(tot,v) {
		return tot + v;
	},0);
};
var thx_ArrayStrings = function() { };
thx_ArrayStrings.__name__ = "thx.ArrayStrings";
thx_ArrayStrings.compact = function(arr) {
	var _g = [];
	var _g1 = 0;
	var _g2 = arr;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(!thx_Strings.isEmpty(v)) {
			_g.push(v);
		}
	}
	return _g;
};
thx_ArrayStrings.max = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.maxBy(arr,thx_Strings.order),null);
};
thx_ArrayStrings.min = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.minBy(arr,thx_Strings.order),null);
};
var thx_Bools = function() { };
thx_Bools.__name__ = "thx.Bools";
thx_Bools.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a) {
		return -1;
	} else {
		return 1;
	}
};
thx_Bools.toInt = function(v) {
	if(v) {
		return 1;
	} else {
		return 0;
	}
};
thx_Bools.canParse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return true;
	} else {
		switch(_g) {
		case "0":case "1":case "false":case "off":case "on":case "true":
			return true;
		default:
			return false;
		}
	}
};
thx_Bools.parse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return false;
	} else {
		switch(_g) {
		case "1":case "on":case "true":
			return true;
		case "0":case "false":case "off":
			return false;
		default:
			throw new js__$Boot_HaxeError("unable to parse \"" + _g + "\"");
		}
	}
};
thx_Bools.xor = function(a,b) {
	return a != b;
};
thx_Bools.option = function(cond,a) {
	if(cond) {
		return haxe_ds_Option.Some(a);
	} else {
		return haxe_ds_Option.None;
	}
};
var thx__$DateTime_DateTime_$Impl_$ = {};
thx__$DateTime_DateTime_$Impl_$.__name__ = "thx._DateTime.DateTime_Impl_";
thx__$DateTime_DateTime_$Impl_$.__properties__ = {get_timeOfDay:"get_timeOfDay",get_dayOfYear:"get_dayOfYear",get_dayOfWeek:"get_dayOfWeek",get_monthDays:"get_monthDays",get_isInLeapYear:"get_isInLeapYear",get_tickInSecond:"get_tickInSecond",get_microsecond:"get_microsecond",get_millisecond:"get_millisecond",get_second:"get_second",get_minute:"get_minute",get_hour:"get_hour",get_day:"get_day",get_month:"get_month",get_year:"get_year",get_offset:"get_offset",get_utc:"get_utc"};
thx__$DateTime_DateTime_$Impl_$.localOffset = function() {
	var now = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.now();
	var local = new Date(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(now,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(now,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH) - 1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(now,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(now),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(now),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(now));
	var a = now;
	var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.unixEpochTicks;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		--high;
		high = high | 0;
	}
	var delta = Math.floor(thx_Int64s.toFloat(haxe__$Int64_Int64_$Impl_$.divMod(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient) / 1000) * 1000 - local.getTime();
	var a1 = thx_Int64s.fromFloat(delta);
	var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64;
	var al = a1.low & 65535;
	var ah = a1.low >>> 16;
	var bl = b1.low & 65535;
	var bh = b1.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low1 = p00;
	var high1 = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low1 = p00 + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p01) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	p10 = p10 << 16;
	low1 = low1 + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p10) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b1.low) | 0) | 0;
	return new haxe__$Int64__$_$_$Int64(high1,low1);
};
thx__$DateTime_DateTime_$Impl_$.now = function() {
	var this1 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.now(),thx__$DateTime_DateTime_$Impl_$.localOffset()];
	return this1;
};
thx__$DateTime_DateTime_$Impl_$.nowUtc = function() {
	var this1 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.now(),thx__$Time_Time_$Impl_$.zero];
	return this1;
};
thx__$DateTime_DateTime_$Impl_$.fromDate = function(date) {
	var this1 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromTime(date.getTime()),thx__$DateTime_DateTime_$Impl_$.localOffset()];
	return this1;
};
thx__$DateTime_DateTime_$Impl_$.fromDateWithOffset = function(date,offset) {
	var this1 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromTime(date.getTime()),offset];
	return this1;
};
thx__$DateTime_DateTime_$Impl_$.fromTime = function(timestamp) {
	var this1 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromTime(timestamp),thx__$Time_Time_$Impl_$.zero];
	return this1;
};
thx__$DateTime_DateTime_$Impl_$.fromString = function(s) {
	if(s == null) {
		throw new thx_Error("null String cannot be parsed to DateTime",null,{ fileName : "thx/DateTime.hx", lineNumber : 97, className : "thx._DateTime.DateTime_Impl_", methodName : "fromString"});
	}
	var pattern = new EReg("^([-])?(\\d+)[-](\\d{2})[-](\\d{2})(?:[T ](\\d{2})[:](\\d{2})[:](\\d{2})(?:\\.(\\d+))?(Z|([+-]\\d{2})[:](\\d{2}))?)?$","");
	if(!pattern.match(s)) {
		throw new thx_Error("unable to parse DateTime string: \"" + s + "\"",null,{ fileName : "thx/DateTime.hx", lineNumber : 100, className : "thx._DateTime.DateTime_Impl_", methodName : "fromString"});
	}
	var smticks = pattern.matched(8);
	var mticks = 0;
	if(null != smticks) {
		smticks = "1" + thx_Strings.rpad(smticks,"0",7).substring(0,7);
		mticks = Std.parseInt(smticks) - 10000000;
	}
	var time = thx__$Time_Time_$Impl_$.zero;
	var timepart = pattern.matched(9);
	if(null != timepart && "Z" != timepart) {
		var hours = pattern.matched(10);
		if(hours.substring(0,1) == "+") {
			hours = hours.substring(1);
		}
		time = thx__$Time_Time_$Impl_$.create(Std.parseInt(hours),Std.parseInt(pattern.matched(11)),0);
	}
	var year = Std.parseInt(pattern.matched(2));
	var month = Std.parseInt(pattern.matched(3));
	var day = Std.parseInt(pattern.matched(4));
	var hour = Std.parseInt(pattern.matched(5));
	var minute = Std.parseInt(pattern.matched(6));
	var second = Std.parseInt(pattern.matched(7));
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second,0);
	var this_1 = time;
	var b = time;
	var high = this_0.high - b.high | 0;
	var low = this_0.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this_0.low,b.low) < 0) {
		--high;
		high = high | 0;
	}
	var this_01 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high,low));
	var this_11 = this_1;
	var ticks_high = mticks >> 31;
	var ticks_low = mticks;
	var high1 = this_01.high + ticks_high | 0;
	var low1 = this_01.low + ticks_low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this_01.low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	var this1 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high1,low1)),this_11];
	var date = this1;
	if(pattern.matched(1) == "-") {
		var this2 = date[0];
		var high2 = ~this2.high;
		var low2 = ~this2.low + 1 | 0;
		if(low2 == 0) {
			++high2;
			high2 = high2 | 0;
		}
		var this3 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high2,low2)),time];
		return this3;
	}
	return date;
};
thx__$DateTime_DateTime_$Impl_$.is = function(v) {
	if(v == null) {
		return false;
	}
	if(!(((v) instanceof Array) && v.__enum__ == null)) {
		return false;
	}
	var vs = v;
	if(vs.length != 2) {
		return false;
	}
	return thx_Arrays.all(vs,haxe__$Int64_Int64_$Impl_$.is);
};
thx__$DateTime_DateTime_$Impl_$.parse = function(s) {
	try {
		return thx_Either.Right(thx__$DateTime_DateTime_$Impl_$.fromString(s));
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return thx_Either.Left(thx_Error.fromDynamic(((e) instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "thx/DateTime.hx", lineNumber : 157, className : "thx._DateTime.DateTime_Impl_", methodName : "parse"}).message);
	}
};
thx__$DateTime_DateTime_$Impl_$.daysRange = function(start,end) {
	if(thx__$DateTime_DateTime_$Impl_$.compareTo(end,start) < 0) {
		return [];
	}
	var days = [];
	while(!thx__$DateTime_DateTime_$Impl_$.sameDay(start,end)) {
		days.push(start);
		start = thx__$DateTime_DateTime_$Impl_$.jump(start,thx_TimePeriod.Day,1);
	}
	days.push(end);
	return days;
};
thx__$DateTime_DateTime_$Impl_$.compare = function(a,b) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(a,b);
};
thx__$DateTime_DateTime_$Impl_$.ord = function() {
	return thx__$Ord_Ord_$Impl_$.fromIntComparison(thx__$DateTime_DateTime_$Impl_$.compare);
};
thx__$DateTime_DateTime_$Impl_$.create = function(year,month,day,hour,minute,second,millisecond,offset) {
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second,millisecond);
	var this_1 = offset;
	var b = offset;
	var high = this_0.high - b.high | 0;
	var low = this_0.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this_0.low,b.low) < 0) {
		--high;
		high = high | 0;
	}
	var this1 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high,low)),this_1];
	return this1;
};
thx__$DateTime_DateTime_$Impl_$._new = function(dateTime,offset) {
	var this1 = [dateTime,offset];
	return this1;
};
thx__$DateTime_DateTime_$Impl_$.min = function(this1,other) {
	var this2 = this1[0];
	var this3 = other[0];
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.compareTo(this2,this3) <= 0) {
		return this1;
	} else {
		return other;
	}
};
thx__$DateTime_DateTime_$Impl_$.max = function(this1,other) {
	var this2 = this1[0];
	var this3 = other[0];
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.compareTo(this2,this3) >= 0) {
		return this1;
	} else {
		return other;
	}
};
thx__$DateTime_DateTime_$Impl_$.jump = function(this1,period,amount) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var sec = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(new haxe__$Int64__$_$_$Int64(high,low));
	var this4 = this1[0];
	var this5 = this1[1];
	var high1 = this4.high + this5.high | 0;
	var low1 = this4.low + this5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	var min = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(new haxe__$Int64__$_$_$Int64(high1,low1));
	var this6 = this1[0];
	var this7 = this1[1];
	var high2 = this6.high + this7.high | 0;
	var low2 = this6.low + this7.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,this6.low) < 0) {
		++high2;
		high2 = high2 | 0;
	}
	var hr = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(new haxe__$Int64__$_$_$Int64(high2,low2));
	var this8 = this1[0];
	var this9 = this1[1];
	var high3 = this8.high + this9.high | 0;
	var low3 = this8.low + this9.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,this8.low) < 0) {
		++high3;
		high3 = high3 | 0;
	}
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high3,low3),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var this10 = this1[0];
	var this11 = this1[1];
	var high4 = this10.high + this11.high | 0;
	var low4 = this10.low + this11.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,this10.low) < 0) {
		++high4;
		high4 = high4 | 0;
	}
	var mon = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high4,low4),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var this12 = this1[0];
	var this13 = this1[1];
	var high5 = this12.high + this13.high | 0;
	var low5 = this12.low + this13.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,this12.low) < 0) {
		++high5;
		high5 = high5 | 0;
	}
	var yr = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high5,low5),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	switch(period._hx_index) {
	case 0:
		sec += amount;
		break;
	case 1:
		min += amount;
		break;
	case 2:
		hr += amount;
		break;
	case 3:
		day += amount;
		break;
	case 4:
		day += amount * 7;
		break;
	case 5:
		mon += amount;
		break;
	case 6:
		yr += amount;
		break;
	}
	var hour = hr;
	var minute = min;
	var second = sec;
	var this14 = this1[0];
	var this15 = this1[1];
	var high6 = this14.high + this15.high | 0;
	var low6 = this14.low + this15.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low6,this14.low) < 0) {
		++high6;
		high6 = high6 | 0;
	}
	var millisecond = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(new haxe__$Int64__$_$_$Int64(high6,low6));
	var this16 = this1[1];
	var offset = this16;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(yr,mon,day,hour,minute,second,millisecond);
	var this_1 = offset;
	var b = offset;
	var high7 = this_0.high - b.high | 0;
	var low7 = this_0.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this_0.low,b.low) < 0) {
		--high7;
		high7 = high7 | 0;
	}
	var this17 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high7,low7)),this_1];
	return this17;
};
thx__$DateTime_DateTime_$Impl_$.daysInThisMonth = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this4 = this1[0];
	var this5 = this1[1];
	var high1 = this4.high + this5.high | 0;
	var low1 = this4.low + this5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(tmp,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high1,low1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH));
};
thx__$DateTime_DateTime_$Impl_$.prevYear = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Year,-1);
};
thx__$DateTime_DateTime_$Impl_$.nextYear = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Year,1);
};
thx__$DateTime_DateTime_$Impl_$.prevMonth = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Month,-1);
};
thx__$DateTime_DateTime_$Impl_$.nextMonth = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Month,1);
};
thx__$DateTime_DateTime_$Impl_$.prevWeek = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Week,-1);
};
thx__$DateTime_DateTime_$Impl_$.nextWeek = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Week,1);
};
thx__$DateTime_DateTime_$Impl_$.prevDay = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Day,-1);
};
thx__$DateTime_DateTime_$Impl_$.nextDay = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Day,1);
};
thx__$DateTime_DateTime_$Impl_$.prevHour = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Hour,-1);
};
thx__$DateTime_DateTime_$Impl_$.nextHour = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Hour,1);
};
thx__$DateTime_DateTime_$Impl_$.prevMinute = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Minute,-1);
};
thx__$DateTime_DateTime_$Impl_$.nextMinute = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Minute,1);
};
thx__$DateTime_DateTime_$Impl_$.prevSecond = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Second,-1);
};
thx__$DateTime_DateTime_$Impl_$.nextSecond = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Second,1);
};
thx__$DateTime_DateTime_$Impl_$.snapToWeekDay = function(this1,weekday,firstDayOfWk) {
	if(firstDayOfWk == null) {
		firstDayOfWk = 0;
	}
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var d = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(new haxe__$Int64__$_$_$Int64(high,low));
	var s = weekday;
	if(s < firstDayOfWk) {
		s += 7;
	}
	if(d < firstDayOfWk) {
		d += 7;
	}
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$DateTime_DateTime_$Impl_$.snapNextWeekDay = function(this1,weekday) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var d = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(new haxe__$Int64__$_$_$Int64(high,low));
	var s = weekday;
	if(s < d) {
		s += 7;
	}
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$DateTime_DateTime_$Impl_$.snapPrevWeekDay = function(this1,weekday) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var d = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(new haxe__$Int64__$_$_$Int64(high,low));
	var s = weekday;
	if(s > d) {
		s -= 7;
	}
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$DateTime_DateTime_$Impl_$.snapNext = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		var this2 = this1[0];
		var a = thx_Int64s.divCeil(this2,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64);
		var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
		var al = a.low & 65535;
		var ah = a.low >>> 16;
		var bl = b.low & 65535;
		var bh = b.low >>> 16;
		var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
		var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
		var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
		var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 = p01 << 16;
		low = p00 + p01 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
			++high;
			high = high | 0;
		}
		p10 = p10 << 16;
		low = low + p10 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
			++high;
			high = high | 0;
		}
		high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
		var this3 = this1[1];
		var this4 = [new haxe__$Int64__$_$_$Int64(high,low),this3];
		return this4;
	case 1:
		var this5 = this1[0];
		var a1 = thx_Int64s.divCeil(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64);
		var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64;
		var al1 = a1.low & 65535;
		var ah1 = a1.low >>> 16;
		var bl1 = b1.low & 65535;
		var bh1 = b1.low >>> 16;
		var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
		var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
		var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
		var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
		var low1 = p001;
		var high1 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
		p011 = p011 << 16;
		low1 = p001 + p011 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p011) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		p101 = p101 << 16;
		low1 = low1 + p101 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p101) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b1.low) | 0) | 0;
		var this6 = this1[1];
		var this7 = [new haxe__$Int64__$_$_$Int64(high1,low1),this6];
		return this7;
	case 2:
		var this8 = this1[0];
		var a2 = thx_Int64s.divCeil(this8,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64);
		var b2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64;
		var al2 = a2.low & 65535;
		var ah2 = a2.low >>> 16;
		var bl2 = b2.low & 65535;
		var bh2 = b2.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low2 = p002;
		var high2 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low2 = p002 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p012) < 0) {
			++high2;
			high2 = high2 | 0;
		}
		p102 = p102 << 16;
		low2 = low2 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p102) < 0) {
			++high2;
			high2 = high2 | 0;
		}
		high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(a2.low,b2.high) + haxe__$Int32_Int32_$Impl_$._mul(a2.high,b2.low) | 0) | 0;
		var this9 = this1[1];
		var this10 = [new haxe__$Int64__$_$_$Int64(high2,low2),this9];
		return this10;
	case 3:
		var this11 = this1[0];
		var this12 = this1[1];
		var high3 = this11.high + this12.high | 0;
		var low3 = this11.low + this12.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,this11.low) < 0) {
			++high3;
			high3 = high3 | 0;
		}
		var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high3,low3),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this13 = this1[0];
		var this14 = this1[1];
		var high4 = this13.high + this14.high | 0;
		var low4 = this13.low + this14.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,this13.low) < 0) {
			++high4;
			high4 = high4 | 0;
		}
		var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high4,low4),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this15 = this1[0];
		var this16 = this1[1];
		var high5 = this15.high + this16.high | 0;
		var low5 = this15.low + this16.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,this15.low) < 0) {
			++high5;
			high5 = high5 | 0;
		}
		var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high5,low5),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + 1;
		var this17 = this1[1];
		var offset = this17;
		var this_0 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,0,0,0,0);
		var this_1 = offset;
		var b3 = offset;
		var high6 = this_0.high - b3.high | 0;
		var low6 = this_0.low - b3.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(this_0.low,b3.low) < 0) {
			--high6;
			high6 = high6 | 0;
		}
		var this18 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high6,low6)),this_1];
		return this18;
	case 4:
		var this19 = this1[0];
		var this20 = this1[1];
		var high7 = this19.high + this20.high | 0;
		var low7 = this19.low + this20.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low7,this19.low) < 0) {
			++high7;
			high7 = high7 | 0;
		}
		var wd = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(new haxe__$Int64__$_$_$Int64(high7,low7));
		var this21 = this1[0];
		var this22 = this1[1];
		var high8 = this21.high + this22.high | 0;
		var low8 = this21.low + this22.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low8,this21.low) < 0) {
			++high8;
			high8 = high8 | 0;
		}
		var year1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high8,low8),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this23 = this1[0];
		var this24 = this1[1];
		var high9 = this23.high + this24.high | 0;
		var low9 = this23.low + this24.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low9,this23.low) < 0) {
			++high9;
			high9 = high9 | 0;
		}
		var month1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high9,low9),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this25 = this1[0];
		var this26 = this1[1];
		var high10 = this25.high + this26.high | 0;
		var low10 = this25.low + this26.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low10,this25.low) < 0) {
			++high10;
			high10 = high10 | 0;
		}
		var day1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high10,low10),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + 7 - wd;
		var this27 = this1[1];
		var offset1 = this27;
		var this_01 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year1,month1,day1,0,0,0,0);
		var this_11 = offset1;
		var b4 = offset1;
		var high11 = this_01.high - b4.high | 0;
		var low11 = this_01.low - b4.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(this_01.low,b4.low) < 0) {
			--high11;
			high11 = high11 | 0;
		}
		var this28 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high11,low11)),this_11];
		return this28;
	case 5:
		var this29 = this1[0];
		var this30 = this1[1];
		var high12 = this29.high + this30.high | 0;
		var low12 = this29.low + this30.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low12,this29.low) < 0) {
			++high12;
			high12 = high12 | 0;
		}
		var year2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high12,low12),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this31 = this1[0];
		var this32 = this1[1];
		var high13 = this31.high + this32.high | 0;
		var low13 = this31.low + this32.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low13,this31.low) < 0) {
			++high13;
			high13 = high13 | 0;
		}
		var month2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high13,low13),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH) + 1;
		var this33 = this1[1];
		var offset2 = this33;
		var this_02 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year2,month2,1,0,0,0,0);
		var this_12 = offset2;
		var b5 = offset2;
		var high14 = this_02.high - b5.high | 0;
		var low14 = this_02.low - b5.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(this_02.low,b5.low) < 0) {
			--high14;
			high14 = high14 | 0;
		}
		var this34 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high14,low14)),this_12];
		return this34;
	case 6:
		var this35 = this1[0];
		var this36 = this1[1];
		var high15 = this35.high + this36.high | 0;
		var low15 = this35.low + this36.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low15,this35.low) < 0) {
			++high15;
			high15 = high15 | 0;
		}
		var year3 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high15,low15),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) + 1;
		var this37 = this1[1];
		var offset3 = this37;
		var this_03 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year3,1,1,0,0,0,0);
		var this_13 = offset3;
		var b6 = offset3;
		var high16 = this_03.high - b6.high | 0;
		var low16 = this_03.low - b6.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(this_03.low,b6.low) < 0) {
			--high16;
			high16 = high16 | 0;
		}
		var this38 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high16,low16)),this_13];
		return this38;
	}
};
thx__$DateTime_DateTime_$Impl_$.snapPrev = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		var this2 = this1[0];
		var a = thx_Int64s.divFloor(this2,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64);
		var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
		var al = a.low & 65535;
		var ah = a.low >>> 16;
		var bl = b.low & 65535;
		var bh = b.low >>> 16;
		var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
		var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
		var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
		var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 = p01 << 16;
		low = p00 + p01 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
			++high;
			high = high | 0;
		}
		p10 = p10 << 16;
		low = low + p10 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
			++high;
			high = high | 0;
		}
		high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
		var this3 = this1[1];
		var this4 = [new haxe__$Int64__$_$_$Int64(high,low),this3];
		return this4;
	case 1:
		var this5 = this1[0];
		var a1 = thx_Int64s.divFloor(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64);
		var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64;
		var al1 = a1.low & 65535;
		var ah1 = a1.low >>> 16;
		var bl1 = b1.low & 65535;
		var bh1 = b1.low >>> 16;
		var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
		var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
		var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
		var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
		var low1 = p001;
		var high1 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
		p011 = p011 << 16;
		low1 = p001 + p011 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p011) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		p101 = p101 << 16;
		low1 = low1 + p101 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p101) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b1.low) | 0) | 0;
		var this6 = this1[1];
		var this7 = [new haxe__$Int64__$_$_$Int64(high1,low1),this6];
		return this7;
	case 2:
		var this8 = this1[0];
		var a2 = thx_Int64s.divFloor(this8,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64);
		var b2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64;
		var al2 = a2.low & 65535;
		var ah2 = a2.low >>> 16;
		var bl2 = b2.low & 65535;
		var bh2 = b2.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low2 = p002;
		var high2 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low2 = p002 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p012) < 0) {
			++high2;
			high2 = high2 | 0;
		}
		p102 = p102 << 16;
		low2 = low2 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p102) < 0) {
			++high2;
			high2 = high2 | 0;
		}
		high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(a2.low,b2.high) + haxe__$Int32_Int32_$Impl_$._mul(a2.high,b2.low) | 0) | 0;
		var this9 = this1[1];
		var this10 = [new haxe__$Int64__$_$_$Int64(high2,low2),this9];
		return this10;
	case 3:
		var this11 = this1[0];
		var this12 = this1[1];
		var high3 = this11.high + this12.high | 0;
		var low3 = this11.low + this12.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,this11.low) < 0) {
			++high3;
			high3 = high3 | 0;
		}
		var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high3,low3),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this13 = this1[0];
		var this14 = this1[1];
		var high4 = this13.high + this14.high | 0;
		var low4 = this13.low + this14.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,this13.low) < 0) {
			++high4;
			high4 = high4 | 0;
		}
		var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high4,low4),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this15 = this1[0];
		var this16 = this1[1];
		var high5 = this15.high + this16.high | 0;
		var low5 = this15.low + this16.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,this15.low) < 0) {
			++high5;
			high5 = high5 | 0;
		}
		var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high5,low5),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
		var this17 = this1[1];
		var offset = this17;
		var this_0 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,0,0,0,0);
		var this_1 = offset;
		var b3 = offset;
		var high6 = this_0.high - b3.high | 0;
		var low6 = this_0.low - b3.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(this_0.low,b3.low) < 0) {
			--high6;
			high6 = high6 | 0;
		}
		var this18 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high6,low6)),this_1];
		return this18;
	case 4:
		var this19 = this1[0];
		var this20 = this1[1];
		var high7 = this19.high + this20.high | 0;
		var low7 = this19.low + this20.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low7,this19.low) < 0) {
			++high7;
			high7 = high7 | 0;
		}
		var wd = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(new haxe__$Int64__$_$_$Int64(high7,low7));
		var this21 = this1[0];
		var this22 = this1[1];
		var high8 = this21.high + this22.high | 0;
		var low8 = this21.low + this22.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low8,this21.low) < 0) {
			++high8;
			high8 = high8 | 0;
		}
		var year1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high8,low8),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this23 = this1[0];
		var this24 = this1[1];
		var high9 = this23.high + this24.high | 0;
		var low9 = this23.low + this24.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low9,this23.low) < 0) {
			++high9;
			high9 = high9 | 0;
		}
		var month1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high9,low9),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this25 = this1[0];
		var this26 = this1[1];
		var high10 = this25.high + this26.high | 0;
		var low10 = this25.low + this26.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low10,this25.low) < 0) {
			++high10;
			high10 = high10 | 0;
		}
		var day1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high10,low10),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) - wd;
		var this27 = this1[1];
		var offset1 = this27;
		var this_01 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year1,month1,day1,0,0,0,0);
		var this_11 = offset1;
		var b4 = offset1;
		var high11 = this_01.high - b4.high | 0;
		var low11 = this_01.low - b4.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(this_01.low,b4.low) < 0) {
			--high11;
			high11 = high11 | 0;
		}
		var this28 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high11,low11)),this_11];
		return this28;
	case 5:
		var this29 = this1[0];
		var this30 = this1[1];
		var high12 = this29.high + this30.high | 0;
		var low12 = this29.low + this30.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low12,this29.low) < 0) {
			++high12;
			high12 = high12 | 0;
		}
		var year2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high12,low12),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this31 = this1[0];
		var this32 = this1[1];
		var high13 = this31.high + this32.high | 0;
		var low13 = this31.low + this32.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low13,this31.low) < 0) {
			++high13;
			high13 = high13 | 0;
		}
		var month2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high13,low13),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this33 = this1[1];
		var offset2 = this33;
		var this_02 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year2,month2,1,0,0,0,0);
		var this_12 = offset2;
		var b5 = offset2;
		var high14 = this_02.high - b5.high | 0;
		var low14 = this_02.low - b5.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(this_02.low,b5.low) < 0) {
			--high14;
			high14 = high14 | 0;
		}
		var this34 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high14,low14)),this_12];
		return this34;
	case 6:
		var this35 = this1[0];
		var this36 = this1[1];
		var high15 = this35.high + this36.high | 0;
		var low15 = this35.low + this36.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low15,this35.low) < 0) {
			++high15;
			high15 = high15 | 0;
		}
		var year3 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high15,low15),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this37 = this1[1];
		var offset3 = this37;
		var this_03 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year3,1,1,0,0,0,0);
		var this_13 = offset3;
		var b6 = offset3;
		var high16 = this_03.high - b6.high | 0;
		var low16 = this_03.low - b6.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(this_03.low,b6.low) < 0) {
			--high16;
			high16 = high16 | 0;
		}
		var this38 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high16,low16)),this_13];
		return this38;
	}
};
thx__$DateTime_DateTime_$Impl_$.snapTo = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		var this2 = this1[0];
		var a = thx_Int64s.divRound(this2,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64);
		var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
		var al = a.low & 65535;
		var ah = a.low >>> 16;
		var bl = b.low & 65535;
		var bh = b.low >>> 16;
		var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
		var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
		var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
		var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 = p01 << 16;
		low = p00 + p01 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
			++high;
			high = high | 0;
		}
		p10 = p10 << 16;
		low = low + p10 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
			++high;
			high = high | 0;
		}
		high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
		var this3 = this1[1];
		var this4 = [new haxe__$Int64__$_$_$Int64(high,low),this3];
		return this4;
	case 1:
		var this5 = this1[0];
		var a1 = thx_Int64s.divRound(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64);
		var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64;
		var al1 = a1.low & 65535;
		var ah1 = a1.low >>> 16;
		var bl1 = b1.low & 65535;
		var bh1 = b1.low >>> 16;
		var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
		var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
		var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
		var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
		var low1 = p001;
		var high1 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
		p011 = p011 << 16;
		low1 = p001 + p011 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p011) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		p101 = p101 << 16;
		low1 = low1 + p101 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p101) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b1.low) | 0) | 0;
		var this6 = this1[1];
		var this7 = [new haxe__$Int64__$_$_$Int64(high1,low1),this6];
		return this7;
	case 2:
		var this8 = this1[0];
		var a2 = thx_Int64s.divRound(this8,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64);
		var b2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64;
		var al2 = a2.low & 65535;
		var ah2 = a2.low >>> 16;
		var bl2 = b2.low & 65535;
		var bh2 = b2.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low2 = p002;
		var high2 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low2 = p002 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p012) < 0) {
			++high2;
			high2 = high2 | 0;
		}
		p102 = p102 << 16;
		low2 = low2 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p102) < 0) {
			++high2;
			high2 = high2 | 0;
		}
		high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(a2.low,b2.high) + haxe__$Int32_Int32_$Impl_$._mul(a2.high,b2.low) | 0) | 0;
		var this9 = this1[1];
		var this10 = [new haxe__$Int64__$_$_$Int64(high2,low2),this9];
		return this10;
	case 3:
		var this11 = this1[0];
		var this12 = this1[1];
		var high3 = this11.high + this12.high | 0;
		var low3 = this11.low + this12.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,this11.low) < 0) {
			++high3;
			high3 = high3 | 0;
		}
		var mod = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(new haxe__$Int64__$_$_$Int64(high3,low3)) >= 12 ? 1 : 0;
		var this13 = this1[0];
		var this14 = this1[1];
		var high4 = this13.high + this14.high | 0;
		var low4 = this13.low + this14.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,this13.low) < 0) {
			++high4;
			high4 = high4 | 0;
		}
		var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high4,low4),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this15 = this1[0];
		var this16 = this1[1];
		var high5 = this15.high + this16.high | 0;
		var low5 = this15.low + this16.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,this15.low) < 0) {
			++high5;
			high5 = high5 | 0;
		}
		var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high5,low5),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this17 = this1[0];
		var this18 = this1[1];
		var high6 = this17.high + this18.high | 0;
		var low6 = this17.low + this18.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low6,this17.low) < 0) {
			++high6;
			high6 = high6 | 0;
		}
		var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high6,low6),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + mod;
		var this19 = this1[1];
		var offset = this19;
		var this_0 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,0,0,0,0);
		var this_1 = offset;
		var b3 = offset;
		var high7 = this_0.high - b3.high | 0;
		var low7 = this_0.low - b3.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(this_0.low,b3.low) < 0) {
			--high7;
			high7 = high7 | 0;
		}
		var this20 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high7,low7)),this_1];
		return this20;
	case 4:
		var this21 = this1[0];
		var this22 = this1[1];
		var high8 = this21.high + this22.high | 0;
		var low8 = this21.low + this22.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low8,this21.low) < 0) {
			++high8;
			high8 = high8 | 0;
		}
		var wd = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(new haxe__$Int64__$_$_$Int64(high8,low8));
		var mod1;
		if(wd < 3) {
			mod1 = -wd;
		} else if(wd > 3) {
			mod1 = 7 - wd;
		} else {
			var this23 = this1[0];
			var this24 = this1[1];
			var high9 = this23.high + this24.high | 0;
			var low9 = this23.low + this24.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low9,this23.low) < 0) {
				++high9;
				high9 = high9 | 0;
			}
			mod1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(new haxe__$Int64__$_$_$Int64(high9,low9)) < 12 ? -wd : 7 - wd;
		}
		var this25 = this1[0];
		var this26 = this1[1];
		var high10 = this25.high + this26.high | 0;
		var low10 = this25.low + this26.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low10,this25.low) < 0) {
			++high10;
			high10 = high10 | 0;
		}
		var year1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high10,low10),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this27 = this1[0];
		var this28 = this1[1];
		var high11 = this27.high + this28.high | 0;
		var low11 = this27.low + this28.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low11,this27.low) < 0) {
			++high11;
			high11 = high11 | 0;
		}
		var month1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high11,low11),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this29 = this1[0];
		var this30 = this1[1];
		var high12 = this29.high + this30.high | 0;
		var low12 = this29.low + this30.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low12,this29.low) < 0) {
			++high12;
			high12 = high12 | 0;
		}
		var day1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high12,low12),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + mod1;
		var this31 = this1[1];
		var offset1 = this31;
		var this_01 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year1,month1,day1,0,0,0,0);
		var this_11 = offset1;
		var b4 = offset1;
		var high13 = this_01.high - b4.high | 0;
		var low13 = this_01.low - b4.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(this_01.low,b4.low) < 0) {
			--high13;
			high13 = high13 | 0;
		}
		var this32 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high13,low13)),this_11];
		return this32;
	case 5:
		var this33 = this1[0];
		var this34 = this1[1];
		var high14 = this33.high + this34.high | 0;
		var low14 = this33.low + this34.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low14,this33.low) < 0) {
			++high14;
			high14 = high14 | 0;
		}
		var mod2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high14,low14),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
		var this35 = this1[0];
		var this36 = this1[1];
		var high15 = this35.high + this36.high | 0;
		var low15 = this35.low + this36.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low15,this35.low) < 0) {
			++high15;
			high15 = high15 | 0;
		}
		var mod3 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high15,low15),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this37 = this1[0];
		var this38 = this1[1];
		var high16 = this37.high + this38.high | 0;
		var low16 = this37.low + this38.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low16,this37.low) < 0) {
			++high16;
			high16 = high16 | 0;
		}
		var mod4 = mod2 > Math.round(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(mod3,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high16,low16),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH)) / 2) ? 1 : 0;
		var this39 = this1[0];
		var this40 = this1[1];
		var high17 = this39.high + this40.high | 0;
		var low17 = this39.low + this40.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low17,this39.low) < 0) {
			++high17;
			high17 = high17 | 0;
		}
		var year2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high17,low17),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this41 = this1[0];
		var this42 = this1[1];
		var high18 = this41.high + this42.high | 0;
		var low18 = this41.low + this42.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low18,this41.low) < 0) {
			++high18;
			high18 = high18 | 0;
		}
		var month2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high18,low18),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH) + mod4;
		var this43 = this1[1];
		var offset2 = this43;
		var this_02 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year2,month2,1,0,0,0,0);
		var this_12 = offset2;
		var b5 = offset2;
		var high19 = this_02.high - b5.high | 0;
		var low19 = this_02.low - b5.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(this_02.low,b5.low) < 0) {
			--high19;
			high19 = high19 | 0;
		}
		var this44 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high19,low19)),this_12];
		return this44;
	case 6:
		var this45 = this1[0];
		var this46 = this1[1];
		var high20 = this45.high + this46.high | 0;
		var low20 = this45.low + this46.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low20,this45.low) < 0) {
			++high20;
			high20 = high20 | 0;
		}
		var year3 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high20,low20),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this47 = this1[1];
		var offset3 = this47;
		var this_03 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year3,6,2,0,0,0,0);
		var this_13 = offset3;
		var b6 = offset3;
		var high21 = this_03.high - b6.high | 0;
		var low21 = this_03.low - b6.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(this_03.low,b6.low) < 0) {
			--high21;
			high21 = high21 | 0;
		}
		var this48 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high21,low21)),this_13];
		var other = this48;
		var mod5 = thx__$DateTime_DateTime_$Impl_$.compareTo(this1,other) > 0 ? 1 : 0;
		var this49 = this1[0];
		var this50 = this1[1];
		var high22 = this49.high + this50.high | 0;
		var low22 = this49.low + this50.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low22,this49.low) < 0) {
			++high22;
			high22 = high22 | 0;
		}
		var year4 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high22,low22),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) + mod5;
		var this51 = this1[1];
		var offset4 = this51;
		var this_04 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year4,1,1,0,0,0,0);
		var this_14 = offset4;
		var b7 = offset4;
		var high23 = this_04.high - b7.high | 0;
		var low23 = this_04.low - b7.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(this_04.low,b7.low) < 0) {
			--high23;
			high23 = high23 | 0;
		}
		var this52 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high23,low23)),this_14];
		return this52;
	}
};
thx__$DateTime_DateTime_$Impl_$.sameYear = function(this1,other) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this4 = other[0];
	var this5 = other[1];
	var high1 = this4.high + this5.high | 0;
	var low1 = this4.low + this5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	return tmp == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high1,low1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
};
thx__$DateTime_DateTime_$Impl_$.sameMonth = function(this1,other) {
	if(thx__$DateTime_DateTime_$Impl_$.sameYear(this1,other)) {
		var this2 = this1[0];
		var this3 = this1[1];
		var high = this2.high + this3.high | 0;
		var low = this2.low + this3.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
			++high;
			high = high | 0;
		}
		var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this4 = other[0];
		var this5 = other[1];
		var high1 = this4.high + this5.high | 0;
		var low1 = this4.low + this5.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		return tmp == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high1,low1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	} else {
		return false;
	}
};
thx__$DateTime_DateTime_$Impl_$.sameDay = function(this1,other) {
	if(thx__$DateTime_DateTime_$Impl_$.sameMonth(this1,other)) {
		var this2 = this1[0];
		var this3 = this1[1];
		var high = this2.high + this3.high | 0;
		var low = this2.low + this3.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
			++high;
			high = high | 0;
		}
		var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
		var this4 = other[0];
		var this5 = other[1];
		var high1 = this4.high + this5.high | 0;
		var low1 = this4.low + this5.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		return tmp == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high1,low1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	} else {
		return false;
	}
};
thx__$DateTime_DateTime_$Impl_$.sameHour = function(this1,other) {
	if(thx__$DateTime_DateTime_$Impl_$.sameDay(this1,other)) {
		var this2 = this1[0];
		var this3 = this1[1];
		var high = this2.high + this3.high | 0;
		var low = this2.low + this3.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
			++high;
			high = high | 0;
		}
		var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(new haxe__$Int64__$_$_$Int64(high,low));
		var this4 = other[0];
		var this5 = other[1];
		var high1 = this4.high + this5.high | 0;
		var low1 = this4.low + this5.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		return tmp == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(new haxe__$Int64__$_$_$Int64(high1,low1));
	} else {
		return false;
	}
};
thx__$DateTime_DateTime_$Impl_$.sameMinute = function(this1,other) {
	if(thx__$DateTime_DateTime_$Impl_$.sameHour(this1,other)) {
		var this2 = this1[0];
		var this3 = this1[1];
		var high = this2.high + this3.high | 0;
		var low = this2.low + this3.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
			++high;
			high = high | 0;
		}
		var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(new haxe__$Int64__$_$_$Int64(high,low));
		var this4 = other[0];
		var this5 = other[1];
		var high1 = this4.high + this5.high | 0;
		var low1 = this4.low + this5.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		return tmp == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(new haxe__$Int64__$_$_$Int64(high1,low1));
	} else {
		return false;
	}
};
thx__$DateTime_DateTime_$Impl_$.sameSecond = function(this1,other) {
	if(thx__$DateTime_DateTime_$Impl_$.sameMinute(this1,other)) {
		var this2 = this1[0];
		var this3 = this1[1];
		var high = this2.high + this3.high | 0;
		var low = this2.low + this3.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
			++high;
			high = high | 0;
		}
		var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(new haxe__$Int64__$_$_$Int64(high,low));
		var this4 = other[0];
		var this5 = other[1];
		var high1 = this4.high + this5.high | 0;
		var low1 = this4.low + this5.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		return tmp == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(new haxe__$Int64__$_$_$Int64(high1,low1));
	} else {
		return false;
	}
};
thx__$DateTime_DateTime_$Impl_$.withYear = function(this1,year) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var this4 = this1[0];
	var this5 = this1[1];
	var high1 = this4.high + this5.high | 0;
	var low1 = this4.low + this5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high1,low1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var this6 = this1[0];
	var this7 = this1[1];
	var high2 = this6.high + this7.high | 0;
	var low2 = this6.low + this7.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,this6.low) < 0) {
		++high2;
		high2 = high2 | 0;
	}
	var hour = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(new haxe__$Int64__$_$_$Int64(high2,low2));
	var this8 = this1[0];
	var this9 = this1[1];
	var high3 = this8.high + this9.high | 0;
	var low3 = this8.low + this9.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,this8.low) < 0) {
		++high3;
		high3 = high3 | 0;
	}
	var minute = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(new haxe__$Int64__$_$_$Int64(high3,low3));
	var this10 = this1[0];
	var this11 = this1[1];
	var high4 = this10.high + this11.high | 0;
	var low4 = this10.low + this11.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,this10.low) < 0) {
		++high4;
		high4 = high4 | 0;
	}
	var second = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(new haxe__$Int64__$_$_$Int64(high4,low4));
	var this12 = this1[0];
	var this13 = this1[1];
	var high5 = this12.high + this13.high | 0;
	var low5 = this12.low + this13.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,this12.low) < 0) {
		++high5;
		high5 = high5 | 0;
	}
	var millisecond = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(new haxe__$Int64__$_$_$Int64(high5,low5));
	var this14 = this1[1];
	var offset = this14;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second,millisecond);
	var this_1 = offset;
	var b = offset;
	var high6 = this_0.high - b.high | 0;
	var low6 = this_0.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this_0.low,b.low) < 0) {
		--high6;
		high6 = high6 | 0;
	}
	var this15 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high6,low6)),this_1];
	return this15;
};
thx__$DateTime_DateTime_$Impl_$.withMonth = function(this1,month) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this4 = this1[0];
	var this5 = this1[1];
	var high1 = this4.high + this5.high | 0;
	var low1 = this4.low + this5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high1,low1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var this6 = this1[0];
	var this7 = this1[1];
	var high2 = this6.high + this7.high | 0;
	var low2 = this6.low + this7.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,this6.low) < 0) {
		++high2;
		high2 = high2 | 0;
	}
	var hour = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(new haxe__$Int64__$_$_$Int64(high2,low2));
	var this8 = this1[0];
	var this9 = this1[1];
	var high3 = this8.high + this9.high | 0;
	var low3 = this8.low + this9.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,this8.low) < 0) {
		++high3;
		high3 = high3 | 0;
	}
	var minute = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(new haxe__$Int64__$_$_$Int64(high3,low3));
	var this10 = this1[0];
	var this11 = this1[1];
	var high4 = this10.high + this11.high | 0;
	var low4 = this10.low + this11.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,this10.low) < 0) {
		++high4;
		high4 = high4 | 0;
	}
	var second = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(new haxe__$Int64__$_$_$Int64(high4,low4));
	var this12 = this1[0];
	var this13 = this1[1];
	var high5 = this12.high + this13.high | 0;
	var low5 = this12.low + this13.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,this12.low) < 0) {
		++high5;
		high5 = high5 | 0;
	}
	var millisecond = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(new haxe__$Int64__$_$_$Int64(high5,low5));
	var this14 = this1[1];
	var offset = this14;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second,millisecond);
	var this_1 = offset;
	var b = offset;
	var high6 = this_0.high - b.high | 0;
	var low6 = this_0.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this_0.low,b.low) < 0) {
		--high6;
		high6 = high6 | 0;
	}
	var this15 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high6,low6)),this_1];
	return this15;
};
thx__$DateTime_DateTime_$Impl_$.withDay = function(this1,day) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this4 = this1[0];
	var this5 = this1[1];
	var high1 = this4.high + this5.high | 0;
	var low1 = this4.low + this5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high1,low1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var this6 = this1[0];
	var this7 = this1[1];
	var high2 = this6.high + this7.high | 0;
	var low2 = this6.low + this7.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,this6.low) < 0) {
		++high2;
		high2 = high2 | 0;
	}
	var hour = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(new haxe__$Int64__$_$_$Int64(high2,low2));
	var this8 = this1[0];
	var this9 = this1[1];
	var high3 = this8.high + this9.high | 0;
	var low3 = this8.low + this9.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,this8.low) < 0) {
		++high3;
		high3 = high3 | 0;
	}
	var minute = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(new haxe__$Int64__$_$_$Int64(high3,low3));
	var this10 = this1[0];
	var this11 = this1[1];
	var high4 = this10.high + this11.high | 0;
	var low4 = this10.low + this11.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,this10.low) < 0) {
		++high4;
		high4 = high4 | 0;
	}
	var second = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(new haxe__$Int64__$_$_$Int64(high4,low4));
	var this12 = this1[0];
	var this13 = this1[1];
	var high5 = this12.high + this13.high | 0;
	var low5 = this12.low + this13.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,this12.low) < 0) {
		++high5;
		high5 = high5 | 0;
	}
	var millisecond = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(new haxe__$Int64__$_$_$Int64(high5,low5));
	var this14 = this1[1];
	var offset = this14;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second,millisecond);
	var this_1 = offset;
	var b = offset;
	var high6 = this_0.high - b.high | 0;
	var low6 = this_0.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this_0.low,b.low) < 0) {
		--high6;
		high6 = high6 | 0;
	}
	var this15 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high6,low6)),this_1];
	return this15;
};
thx__$DateTime_DateTime_$Impl_$.withHour = function(this1,hour) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this4 = this1[0];
	var this5 = this1[1];
	var high1 = this4.high + this5.high | 0;
	var low1 = this4.low + this5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high1,low1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var this6 = this1[0];
	var this7 = this1[1];
	var high2 = this6.high + this7.high | 0;
	var low2 = this6.low + this7.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,this6.low) < 0) {
		++high2;
		high2 = high2 | 0;
	}
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high2,low2),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var hour1 = hour;
	var this8 = this1[0];
	var this9 = this1[1];
	var high3 = this8.high + this9.high | 0;
	var low3 = this8.low + this9.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,this8.low) < 0) {
		++high3;
		high3 = high3 | 0;
	}
	var minute = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(new haxe__$Int64__$_$_$Int64(high3,low3));
	var this10 = this1[0];
	var this11 = this1[1];
	var high4 = this10.high + this11.high | 0;
	var low4 = this10.low + this11.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,this10.low) < 0) {
		++high4;
		high4 = high4 | 0;
	}
	var second = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(new haxe__$Int64__$_$_$Int64(high4,low4));
	var this12 = this1[0];
	var this13 = this1[1];
	var high5 = this12.high + this13.high | 0;
	var low5 = this12.low + this13.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,this12.low) < 0) {
		++high5;
		high5 = high5 | 0;
	}
	var millisecond = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(new haxe__$Int64__$_$_$Int64(high5,low5));
	var this14 = this1[1];
	var offset = this14;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour1 = 0;
	}
	var this_0 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour1,minute,second,millisecond);
	var this_1 = offset;
	var b = offset;
	var high6 = this_0.high - b.high | 0;
	var low6 = this_0.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this_0.low,b.low) < 0) {
		--high6;
		high6 = high6 | 0;
	}
	var this15 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high6,low6)),this_1];
	return this15;
};
thx__$DateTime_DateTime_$Impl_$.withMinute = function(this1,minute) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this4 = this1[0];
	var this5 = this1[1];
	var high1 = this4.high + this5.high | 0;
	var low1 = this4.low + this5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high1,low1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var this6 = this1[0];
	var this7 = this1[1];
	var high2 = this6.high + this7.high | 0;
	var low2 = this6.low + this7.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,this6.low) < 0) {
		++high2;
		high2 = high2 | 0;
	}
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high2,low2),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var this8 = this1[0];
	var this9 = this1[1];
	var high3 = this8.high + this9.high | 0;
	var low3 = this8.low + this9.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,this8.low) < 0) {
		++high3;
		high3 = high3 | 0;
	}
	var hour = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(new haxe__$Int64__$_$_$Int64(high3,low3));
	var minute1 = minute;
	var this10 = this1[0];
	var this11 = this1[1];
	var high4 = this10.high + this11.high | 0;
	var low4 = this10.low + this11.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,this10.low) < 0) {
		++high4;
		high4 = high4 | 0;
	}
	var second = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(new haxe__$Int64__$_$_$Int64(high4,low4));
	var this12 = this1[0];
	var this13 = this1[1];
	var high5 = this12.high + this13.high | 0;
	var low5 = this12.low + this13.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,this12.low) < 0) {
		++high5;
		high5 = high5 | 0;
	}
	var millisecond = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(new haxe__$Int64__$_$_$Int64(high5,low5));
	var this14 = this1[1];
	var offset = this14;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute1 = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute1,second,millisecond);
	var this_1 = offset;
	var b = offset;
	var high6 = this_0.high - b.high | 0;
	var low6 = this_0.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this_0.low,b.low) < 0) {
		--high6;
		high6 = high6 | 0;
	}
	var this15 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high6,low6)),this_1];
	return this15;
};
thx__$DateTime_DateTime_$Impl_$.withSecond = function(this1,second) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this4 = this1[0];
	var this5 = this1[1];
	var high1 = this4.high + this5.high | 0;
	var low1 = this4.low + this5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high1,low1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var this6 = this1[0];
	var this7 = this1[1];
	var high2 = this6.high + this7.high | 0;
	var low2 = this6.low + this7.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,this6.low) < 0) {
		++high2;
		high2 = high2 | 0;
	}
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high2,low2),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var this8 = this1[0];
	var this9 = this1[1];
	var high3 = this8.high + this9.high | 0;
	var low3 = this8.low + this9.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,this8.low) < 0) {
		++high3;
		high3 = high3 | 0;
	}
	var hour = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(new haxe__$Int64__$_$_$Int64(high3,low3));
	var this10 = this1[0];
	var this11 = this1[1];
	var high4 = this10.high + this11.high | 0;
	var low4 = this10.low + this11.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,this10.low) < 0) {
		++high4;
		high4 = high4 | 0;
	}
	var minute = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(new haxe__$Int64__$_$_$Int64(high4,low4));
	var second1 = second;
	var this12 = this1[0];
	var this13 = this1[1];
	var high5 = this12.high + this13.high | 0;
	var low5 = this12.low + this13.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,this12.low) < 0) {
		++high5;
		high5 = high5 | 0;
	}
	var millisecond = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(new haxe__$Int64__$_$_$Int64(high5,low5));
	var this14 = this1[1];
	var offset = this14;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second1 = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second1,millisecond);
	var this_1 = offset;
	var b = offset;
	var high6 = this_0.high - b.high | 0;
	var low6 = this_0.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this_0.low,b.low) < 0) {
		--high6;
		high6 = high6 | 0;
	}
	var this15 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high6,low6)),this_1];
	return this15;
};
thx__$DateTime_DateTime_$Impl_$.withMillisecond = function(this1,millisecond) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this4 = this1[0];
	var this5 = this1[1];
	var high1 = this4.high + this5.high | 0;
	var low1 = this4.low + this5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high1,low1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var this6 = this1[0];
	var this7 = this1[1];
	var high2 = this6.high + this7.high | 0;
	var low2 = this6.low + this7.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,this6.low) < 0) {
		++high2;
		high2 = high2 | 0;
	}
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high2,low2),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var this8 = this1[0];
	var this9 = this1[1];
	var high3 = this8.high + this9.high | 0;
	var low3 = this8.low + this9.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,this8.low) < 0) {
		++high3;
		high3 = high3 | 0;
	}
	var hour = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(new haxe__$Int64__$_$_$Int64(high3,low3));
	var this10 = this1[0];
	var this11 = this1[1];
	var high4 = this10.high + this11.high | 0;
	var low4 = this10.low + this11.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,this10.low) < 0) {
		++high4;
		high4 = high4 | 0;
	}
	var minute = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(new haxe__$Int64__$_$_$Int64(high4,low4));
	var this12 = this1[0];
	var this13 = this1[1];
	var high5 = this12.high + this13.high | 0;
	var low5 = this12.low + this13.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,this12.low) < 0) {
		++high5;
		high5 = high5 | 0;
	}
	var second = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(new haxe__$Int64__$_$_$Int64(high5,low5));
	var millisecond1 = millisecond;
	var this14 = this1[1];
	var offset = this14;
	if(millisecond == null) {
		millisecond1 = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second,millisecond1);
	var this_1 = offset;
	var b = offset;
	var high6 = this_0.high - b.high | 0;
	var low6 = this_0.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this_0.low,b.low) < 0) {
		--high6;
		high6 = high6 | 0;
	}
	var this15 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high6,low6)),this_1];
	return this15;
};
thx__$DateTime_DateTime_$Impl_$.withOffset = function(this1,offset) {
	var this2 = this1[0];
	var this3 = [this2,offset];
	return this3;
};
thx__$DateTime_DateTime_$Impl_$.add = function(this1,time) {
	var this2 = this1[0];
	var b = time;
	var high = this2.high + b.high | 0;
	var low = this2.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var this3 = this1[1];
	var this4 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high,low)),this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.addTicks = function(this1,ticks) {
	var this2 = this1[0];
	var high = this2.high + ticks.high | 0;
	var low = this2.low + ticks.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var this3 = this1[1];
	var this4 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high,low)),this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.subtract = function(this1,time) {
	var this2 = this1[0];
	var b = time;
	var high = this2.high - b.high | 0;
	var low = this2.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this2.low,b.low) < 0) {
		--high;
		high = high | 0;
	}
	var this3 = this1[1];
	var this4 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high,low)),this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.subtractDate = function(this1,date) {
	var this2 = this1[0];
	var this3 = date[0];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var base = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(new haxe__$Int64__$_$_$Int64(high,low));
	var date_0 = base;
	return date_0;
};
thx__$DateTime_DateTime_$Impl_$.addDays = function(this1,days) {
	var this2 = this1[0];
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this2,days,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerDay);
	var this3 = this1[1];
	var this4 = [dateTime,this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.addHours = function(this1,hours) {
	var this2 = this1[0];
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this2,hours,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerHour);
	var this3 = this1[1];
	var this4 = [dateTime,this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.addMilliseconds = function(this1,milliseconds) {
	var this2 = this1[0];
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this2,milliseconds,1);
	var this3 = this1[1];
	var this4 = [dateTime,this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.addMinutes = function(this1,minutes) {
	var this2 = this1[0];
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this2,minutes,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerMinute);
	var this3 = this1[1];
	var this4 = [dateTime,this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.addMonths = function(this1,months) {
	var this2 = this1[0];
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addMonths(this2,months);
	var this3 = this1[1];
	var this4 = [dateTime,this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.addSeconds = function(this1,seconds) {
	var this2 = this1[0];
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this2,seconds,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerSecond);
	var this3 = this1[1];
	var this4 = [dateTime,this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.addYears = function(this1,years) {
	var this2 = this1[0];
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addMonths(this2,years * 12);
	var this3 = this1[1];
	var this4 = [dateTime,this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.compareTo = function(this1,other) {
	if(null == other && this1 == null) {
		return 0;
	}
	if(null == this1) {
		return -1;
	} else if(null == other) {
		return 1;
	}
	var this2 = this1[0];
	var this3 = other[0];
	return thx_Int64s.compare(this2,this3);
};
thx__$DateTime_DateTime_$Impl_$.equalsTo = function(this1,that) {
	var this2 = this1[0];
	var this3 = that[0];
	if(this2.high == this3.high) {
		return this2.low == this3.low;
	} else {
		return false;
	}
};
thx__$DateTime_DateTime_$Impl_$.equals = function(self,that) {
	var this1 = self[0];
	var this2 = that[0];
	if(this1.high == this2.high) {
		return this1.low == this2.low;
	} else {
		return false;
	}
};
thx__$DateTime_DateTime_$Impl_$.notEqualsTo = function(this1,that) {
	var this2 = this1[0];
	var this3 = that[0];
	if(!(this2.high != this3.high)) {
		return this2.low != this3.low;
	} else {
		return true;
	}
};
thx__$DateTime_DateTime_$Impl_$.notEquals = function(self,that) {
	var this1 = self[0];
	var this2 = that[0];
	if(!(this1.high != this2.high)) {
		return this1.low != this2.low;
	} else {
		return true;
	}
};
thx__$DateTime_DateTime_$Impl_$.nearEqualsTo = function(this1,other,span) {
	var this2 = other[0];
	var this3 = this1[0];
	var high = this2.high - this3.high | 0;
	var low = this2.low - this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this2.low,this3.low) < 0) {
		--high;
		high = high | 0;
	}
	var ticks = thx_Int64s.abs(new haxe__$Int64__$_$_$Int64(high,low));
	var this4 = thx__$Time_Time_$Impl_$.abs(span);
	var v = ticks.high - this4.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(ticks.low,this4.low);
	return (ticks.high < 0 ? this4.high < 0 ? v : -1 : this4.high >= 0 ? v : 1) <= 0;
};
thx__$DateTime_DateTime_$Impl_$.greaterThan = function(this1,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(this1,that) > 0;
};
thx__$DateTime_DateTime_$Impl_$.greater = function(self,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(self,that) > 0;
};
thx__$DateTime_DateTime_$Impl_$.greaterEqualsTo = function(this1,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(this1,that) >= 0;
};
thx__$DateTime_DateTime_$Impl_$.greaterEquals = function(self,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(self,that) >= 0;
};
thx__$DateTime_DateTime_$Impl_$.lessTo = function(this1,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(this1,that) < 0;
};
thx__$DateTime_DateTime_$Impl_$.less = function(self,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(self,that) < 0;
};
thx__$DateTime_DateTime_$Impl_$.lessEqualsTo = function(this1,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(this1,that) <= 0;
};
thx__$DateTime_DateTime_$Impl_$.lessEquals = function(self,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(self,that) <= 0;
};
thx__$DateTime_DateTime_$Impl_$.changeOffset = function(this1,newoffset) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var a_high = high;
	var b = newoffset;
	var high1 = a_high - b.high | 0;
	var low1 = low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,b.low) < 0) {
		--high1;
		high1 = high1 | 0;
	}
	var this4 = [new haxe__$Int64__$_$_$Int64(high1,low1),newoffset];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.toUtc = function(this1) {
	var this2 = this1[0];
	return this2;
};
thx__$DateTime_DateTime_$Impl_$.clockDateTime = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
thx__$DateTime_DateTime_$Impl_$.toString = function(this1) {
	if(null == this1) {
		return "";
	}
	var this2 = this1[0];
	var this3 = this1[1];
	var abs_0 = thx_Int64s.abs(this2);
	var abs_1 = this3;
	var decimals;
	var high = abs_0.high + abs_1.high | 0;
	var low = abs_0.low + abs_1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,abs_0.low) < 0) {
		++high;
		high = high | 0;
	}
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_tickInSecond(new haxe__$Int64__$_$_$Int64(high,low)) != 0) {
		var high1 = abs_0.high + abs_1.high | 0;
		var low1 = abs_0.low + abs_1.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,abs_0.low) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		decimals = "." + thx_Strings.trimCharsRight(thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_tickInSecond(new haxe__$Int64__$_$_$Int64(high1,low1)),"0",7),")");
	} else {
		decimals = "";
	}
	var this4 = this1[0];
	var b = thx_Int64s.zero;
	var v = this4.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(this4.low,b.low);
	var isneg = (this4.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
	var high2 = abs_0.high + abs_1.high | 0;
	var low2 = abs_0.low + abs_1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,abs_0.low) < 0) {
		++high2;
		high2 = high2 | 0;
	}
	var tmp = "" + thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high2,low2),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) + "-";
	var high3 = abs_0.high + abs_1.high | 0;
	var low3 = abs_0.low + abs_1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,abs_0.low) < 0) {
		++high3;
		high3 = high3 | 0;
	}
	var tmp1 = tmp + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high3,low3),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),"0",2) + "-";
	var high4 = abs_0.high + abs_1.high | 0;
	var low4 = abs_0.low + abs_1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,abs_0.low) < 0) {
		++high4;
		high4 = high4 | 0;
	}
	var tmp2 = tmp1 + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high4,low4),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),"0",2) + "T";
	var high5 = abs_0.high + abs_1.high | 0;
	var low5 = abs_0.low + abs_1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,abs_0.low) < 0) {
		++high5;
		high5 = high5 | 0;
	}
	var tmp3 = tmp2 + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(new haxe__$Int64__$_$_$Int64(high5,low5)),"0",2) + ":";
	var high6 = abs_0.high + abs_1.high | 0;
	var low6 = abs_0.low + abs_1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low6,abs_0.low) < 0) {
		++high6;
		high6 = high6 | 0;
	}
	var tmp4 = tmp3 + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(new haxe__$Int64__$_$_$Int64(high6,low6)),"0",2) + ":";
	var high7 = abs_0.high + abs_1.high | 0;
	var low7 = abs_0.low + abs_1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low7,abs_0.low) < 0) {
		++high7;
		high7 = high7 | 0;
	}
	var tmp5 = tmp4 + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(new haxe__$Int64__$_$_$Int64(high7,low7)),"0",2) + decimals;
	var this5 = this1[1];
	return (isneg ? "-" : "") + (tmp5 + thx__$Time_Time_$Impl_$.toGmtString(this5));
};
thx__$DateTime_DateTime_$Impl_$.get_utc = function(this1) {
	var this2 = this1[0];
	return this2;
};
thx__$DateTime_DateTime_$Impl_$.get_offset = function(this1) {
	var this2 = this1[1];
	return this2;
};
thx__$DateTime_DateTime_$Impl_$.get_year = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
};
thx__$DateTime_DateTime_$Impl_$.get_month = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
};
thx__$DateTime_DateTime_$Impl_$.get_day = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
};
thx__$DateTime_DateTime_$Impl_$.get_hour = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(new haxe__$Int64__$_$_$Int64(high,low));
};
thx__$DateTime_DateTime_$Impl_$.get_minute = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(new haxe__$Int64__$_$_$Int64(high,low));
};
thx__$DateTime_DateTime_$Impl_$.get_dayOfWeek = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(new haxe__$Int64__$_$_$Int64(high,low));
};
thx__$DateTime_DateTime_$Impl_$.get_dayOfYear = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY_OF_YEAR);
};
thx__$DateTime_DateTime_$Impl_$.get_millisecond = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(new haxe__$Int64__$_$_$Int64(high,low));
};
thx__$DateTime_DateTime_$Impl_$.get_microsecond = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_microsecond(new haxe__$Int64__$_$_$Int64(high,low));
};
thx__$DateTime_DateTime_$Impl_$.get_tickInSecond = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_tickInSecond(new haxe__$Int64__$_$_$Int64(high,low));
};
thx__$DateTime_DateTime_$Impl_$.get_second = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(new haxe__$Int64__$_$_$Int64(high,low));
};
thx__$DateTime_DateTime_$Impl_$.get_timeOfDay = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	return haxe__$Int64_Int64_$Impl_$.divMod(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).modulus;
};
thx__$DateTime_DateTime_$Impl_$.get_isInLeapYear = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.isLeapYear(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR));
};
thx__$DateTime_DateTime_$Impl_$.get_monthDays = function(this1) {
	var this2 = this1[0];
	var this3 = this1[1];
	var high = this2.high + this3.high | 0;
	var low = this2.low + this3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
		++high;
		high = high | 0;
	}
	var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this4 = this1[0];
	var this5 = this1[1];
	var high1 = this4.high + this5.high | 0;
	var low1 = this4.low + this5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this4.low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(tmp,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(new haxe__$Int64__$_$_$Int64(high1,low1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH));
};
thx__$DateTime_DateTime_$Impl_$.self = function(this1) {
	return this1;
};
var thx__$DateTimeUtc_DateTimeUtc_$Impl_$ = {};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.__name__ = "thx._DateTimeUtc.DateTimeUtc_Impl_";
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.__properties__ = {get_timeOfDay:"get_timeOfDay",get_dayOfYear:"get_dayOfYear",get_dayOfWeek:"get_dayOfWeek",get_monthDays:"get_monthDays",get_isInLeapYear:"get_isInLeapYear",get_tickInSecond:"get_tickInSecond",get_microsecond:"get_microsecond",get_millisecond:"get_millisecond",get_second:"get_second",get_minute:"get_minute",get_hour:"get_hour",get_day:"get_day",get_month:"get_month",get_year:"get_year",get_ticks:"get_ticks"};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.now = function() {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromDate(new Date());
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64 = function(ticks) {
	return ticks;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromDate = function(date) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromTime(date.getTime());
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromTime = function(timestamp) {
	var a = thx_Int64s.fromFloat(timestamp);
	var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64;
	var al = a.low & 65535;
	var ah = a.low >>> 16;
	var bl = b.low & 65535;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = p00 + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		++high;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		++high;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
	var a_high = high;
	var a_low = low;
	var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.unixEpochTicks;
	var high1 = a_high + b1.high | 0;
	var low1 = a_low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a_low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high1,low1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromString = function(s) {
	var this1 = thx__$DateTime_DateTime_$Impl_$.fromString(s)[0];
	return this1;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.is = function(v) {
	return ((v) instanceof haxe__$Int64__$_$_$Int64);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.parse = function(s) {
	try {
		return thx_Either.Right(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromString(s));
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return thx_Either.Left(thx_Error.fromDynamic(((e) instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "thx/DateTimeUtc.hx", lineNumber : 109, className : "thx._DateTimeUtc.DateTimeUtc_Impl_", methodName : "parse"}).message);
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.compare = function(a,b) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.compareTo(a,b);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create = function(year,month,day,hour,minute,second,millisecond) {
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	second += Math.floor(millisecond / 1000);
	millisecond %= 1000;
	if(millisecond < 0) {
		millisecond += 1000;
	}
	var a = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.dateToTicks(year,month,day);
	var b = thx__$Time_Time_$Impl_$.timeToTicks(hour,minute,second);
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		++high;
		high = high | 0;
	}
	var a_high = high;
	var a_high1 = millisecond >> 31;
	var a_low = millisecond;
	var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64;
	var al = a_low & 65535;
	var ah = a_low >>> 16;
	var bl = b1.low & 65535;
	var bh = b1.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low1 = p00;
	var high1 = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low1 = p00 + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p01) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	p10 = p10 << 16;
	low1 = low1 + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p10) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a_low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a_high1,b1.low) | 0) | 0;
	var b_high = high1;
	var b_low = low1;
	var high2 = a_high + b_high | 0;
	var low2 = low + b_low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,low) < 0) {
		++high2;
		high2 = high2 | 0;
	}
	var ticks = new haxe__$Int64__$_$_$Int64(high2,low2);
	return ticks;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.isLeapYear = function(year) {
	if(year % 4 == 0) {
		if(year % 100 == 0) {
			return year % 400 == 0;
		} else {
			return true;
		}
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.dateToTicks = function(year,month,day) {
	var fixMonthYear = function() {
		if(month == 0) {
			year -= 1;
			month = 12;
		} else if(month < 0) {
			month = -month;
			var years = Math.ceil(month / 12);
			year -= years;
			month = years * 12 - month;
		} else if(month > 12) {
			var years1 = Math.floor(month / 12);
			year += years1;
			month -= years1 * 12;
		}
	};
	while(day < 0) {
		month -= 1;
		fixMonthYear();
		day += thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(year,month);
	}
	fixMonthYear();
	var days;
	while(true) {
		days = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(year,month);
		if(!(day > days)) {
			break;
		}
		month += 1;
		fixMonthYear();
		day -= days;
	}
	if(day == 0) {
		month -= 1;
		fixMonthYear();
		day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(year,month);
	}
	fixMonthYear();
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.rawDateToTicks(year,month,day);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.rawDateToTicks = function(year,month,day) {
	var days = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.isLeapYear(year) ? thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth366 : thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth365;
	if(day >= 1 && day <= days[month] - days[month - 1]) {
		var y = year - 1;
		var n = y * 365 + (y / 4 | 0) - (y / 100 | 0) + (y / 400 | 0) + days[month - 1] + day - 1;
		var a_high = n >> 31;
		var a_low = n;
		var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64;
		var al = a_low & 65535;
		var ah = a_low >>> 16;
		var bl = b.low & 65535;
		var bh = b.low >>> 16;
		var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
		var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
		var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
		var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 = p01 << 16;
		low = p00 + p01 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
			++high;
			high = high | 0;
		}
		p10 = p10 << 16;
		low = low + p10 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
			++high;
			high = high | 0;
		}
		high = high + (haxe__$Int32_Int32_$Impl_$._mul(a_low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a_high,b.low) | 0) | 0;
		return new haxe__$Int64__$_$_$Int64(high,low);
	}
	throw new thx_Error("bad year/month/day " + year + "/" + month + "/" + day,null,{ fileName : "thx/DateTimeUtc.hx", lineNumber : 187, className : "thx._DateTimeUtc.DateTimeUtc_Impl_", methodName : "rawDateToTicks"});
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth = function(year,month) {
	var days = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.isLeapYear(year) ? thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth366 : thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth365;
	return days[month] - days[month - 1];
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysRange = function(start,end) {
	var a = end;
	var b = start;
	var v = a.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	if((a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0) {
		return [];
	}
	var days = [];
	while(!thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameDay(start,end)) {
		days.push(start);
		start = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(start,thx_TimePeriod.Day,1);
	}
	days.push(end);
	return days;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart = function(this1,part) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).quotient;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var n = x.low;
	var y400 = n / thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer400Years | 0;
	n -= y400 * thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer400Years;
	var y100 = n / thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer100Years | 0;
	if(y100 == 4) {
		y100 = 3;
	}
	n -= y100 * thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer100Years;
	var y4 = n / thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer4Years | 0;
	n -= y4 * thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer4Years;
	var y1 = n / thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPerYear | 0;
	if(y1 == 4) {
		y1 = 3;
	}
	if(part == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) {
		return y400 * 400 + y100 * 100 + y4 * 4 + y1 + 1;
	}
	n -= y1 * thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPerYear;
	if(part == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY_OF_YEAR) {
		return n + 1;
	}
	var leapYear = y1 == 3 && (y4 != 24 || y100 == 3);
	var days = leapYear ? thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth366 : thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth365;
	var m = n >> 6;
	while(n >= days[m]) ++m;
	if(part == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH) {
		return m;
	}
	return n - days[m - 1] + 1;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$._new = function(ticks) {
	return ticks;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.min = function(this1,other) {
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.compareTo(this1,other) <= 0) {
		return this1;
	} else {
		return other;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.max = function(this1,other) {
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.compareTo(this1,other) >= 0) {
		return this1;
	} else {
		return other;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump = function(this1,period,amount) {
	var sec = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1);
	var min = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1);
	var hr = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1);
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var mon = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var yr = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	switch(period._hx_index) {
	case 0:
		sec += amount;
		break;
	case 1:
		min += amount;
		break;
	case 2:
		hr += amount;
		break;
	case 3:
		day += amount;
		break;
	case 4:
		day += amount * 7;
		break;
	case 5:
		mon += amount;
		break;
	case 6:
		yr += amount;
		break;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(yr,mon,day,hr,min,sec,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this1));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInThisMonth = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.prevYear = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Year,-1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nextYear = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Year,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.prevMonth = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Month,-1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nextMonth = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Month,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.prevWeek = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Week,-1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nextWeek = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Week,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.prevDay = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Day,-1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nextDay = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Day,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.prevHour = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Hour,-1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nextHour = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Hour,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.prevMinute = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Minute,-1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nextMinute = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Minute,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.prevSecond = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Second,-1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nextSecond = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Second,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.snapToWeekDay = function(this1,weekday,firstDayOfWk) {
	if(firstDayOfWk == null) {
		firstDayOfWk = 0;
	}
	var d = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this1);
	var s = weekday;
	if(s < firstDayOfWk) {
		s += 7;
	}
	if(d < firstDayOfWk) {
		d += 7;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.snapNextWeekDay = function(this1,weekday) {
	var d = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this1);
	var s = weekday;
	if(s < d) {
		s += 7;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.snapPrevWeekDay = function(this1,weekday) {
	var d = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this1);
	var s = weekday;
	if(s > d) {
		s -= 7;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.snapNext = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		var a = thx_Int64s.divCeil(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64);
		var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
		var al = a.low & 65535;
		var ah = a.low >>> 16;
		var bl = b.low & 65535;
		var bh = b.low >>> 16;
		var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
		var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
		var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
		var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 = p01 << 16;
		low = p00 + p01 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
			++high;
			high = high | 0;
		}
		p10 = p10 << 16;
		low = low + p10 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
			++high;
			high = high | 0;
		}
		high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
		return new haxe__$Int64__$_$_$Int64(high,low);
	case 1:
		var a1 = thx_Int64s.divCeil(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64);
		var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64;
		var al1 = a1.low & 65535;
		var ah1 = a1.low >>> 16;
		var bl1 = b1.low & 65535;
		var bh1 = b1.low >>> 16;
		var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
		var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
		var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
		var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
		var low1 = p001;
		var high1 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
		p011 = p011 << 16;
		low1 = p001 + p011 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p011) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		p101 = p101 << 16;
		low1 = low1 + p101 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p101) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b1.low) | 0) | 0;
		return new haxe__$Int64__$_$_$Int64(high1,low1);
	case 2:
		var a2 = thx_Int64s.divCeil(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64);
		var b2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64;
		var al2 = a2.low & 65535;
		var ah2 = a2.low >>> 16;
		var bl2 = b2.low & 65535;
		var bh2 = b2.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low2 = p002;
		var high2 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low2 = p002 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p012) < 0) {
			++high2;
			high2 = high2 | 0;
		}
		p102 = p102 << 16;
		low2 = low2 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p102) < 0) {
			++high2;
			high2 = high2 | 0;
		}
		high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(a2.low,b2.high) + haxe__$Int32_Int32_$Impl_$._mul(a2.high,b2.low) | 0) | 0;
		return new haxe__$Int64__$_$_$Int64(high2,low2);
	case 3:
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + 1,0,0,0);
	case 4:
		var wd = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this1);
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + 7 - wd,0,0,0);
	case 5:
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH) + 1,1,0,0,0);
	case 6:
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) + 1,1,1,0,0,0);
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.snapPrev = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		var a = thx_Int64s.divFloor(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64);
		var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
		var al = a.low & 65535;
		var ah = a.low >>> 16;
		var bl = b.low & 65535;
		var bh = b.low >>> 16;
		var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
		var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
		var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
		var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 = p01 << 16;
		low = p00 + p01 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
			++high;
			high = high | 0;
		}
		p10 = p10 << 16;
		low = low + p10 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
			++high;
			high = high | 0;
		}
		high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
		return new haxe__$Int64__$_$_$Int64(high,low);
	case 1:
		var a1 = thx_Int64s.divFloor(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64);
		var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64;
		var al1 = a1.low & 65535;
		var ah1 = a1.low >>> 16;
		var bl1 = b1.low & 65535;
		var bh1 = b1.low >>> 16;
		var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
		var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
		var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
		var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
		var low1 = p001;
		var high1 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
		p011 = p011 << 16;
		low1 = p001 + p011 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p011) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		p101 = p101 << 16;
		low1 = low1 + p101 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p101) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b1.low) | 0) | 0;
		return new haxe__$Int64__$_$_$Int64(high1,low1);
	case 2:
		var a2 = thx_Int64s.divFloor(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64);
		var b2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64;
		var al2 = a2.low & 65535;
		var ah2 = a2.low >>> 16;
		var bl2 = b2.low & 65535;
		var bh2 = b2.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low2 = p002;
		var high2 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low2 = p002 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p012) < 0) {
			++high2;
			high2 = high2 | 0;
		}
		p102 = p102 << 16;
		low2 = low2 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p102) < 0) {
			++high2;
			high2 = high2 | 0;
		}
		high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(a2.low,b2.high) + haxe__$Int32_Int32_$Impl_$._mul(a2.high,b2.low) | 0) | 0;
		return new haxe__$Int64__$_$_$Int64(high2,low2);
	case 3:
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),0,0,0);
	case 4:
		var wd = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this1);
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) - wd,0,0,0);
	case 5:
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),1,0,0,0);
	case 6:
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),1,1,0,0,0);
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.snapTo = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		var a = thx_Int64s.divRound(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64);
		var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
		var al = a.low & 65535;
		var ah = a.low >>> 16;
		var bl = b.low & 65535;
		var bh = b.low >>> 16;
		var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
		var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
		var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
		var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 = p01 << 16;
		low = p00 + p01 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
			++high;
			high = high | 0;
		}
		p10 = p10 << 16;
		low = low + p10 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
			++high;
			high = high | 0;
		}
		high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
		return new haxe__$Int64__$_$_$Int64(high,low);
	case 1:
		var a1 = thx_Int64s.divRound(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64);
		var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64;
		var al1 = a1.low & 65535;
		var ah1 = a1.low >>> 16;
		var bl1 = b1.low & 65535;
		var bh1 = b1.low >>> 16;
		var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
		var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
		var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
		var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
		var low1 = p001;
		var high1 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
		p011 = p011 << 16;
		low1 = p001 + p011 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p011) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		p101 = p101 << 16;
		low1 = low1 + p101 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p101) < 0) {
			++high1;
			high1 = high1 | 0;
		}
		high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b1.low) | 0) | 0;
		return new haxe__$Int64__$_$_$Int64(high1,low1);
	case 2:
		var a2 = thx_Int64s.divRound(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64);
		var b2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64;
		var al2 = a2.low & 65535;
		var ah2 = a2.low >>> 16;
		var bl2 = b2.low & 65535;
		var bh2 = b2.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low2 = p002;
		var high2 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low2 = p002 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p012) < 0) {
			++high2;
			high2 = high2 | 0;
		}
		p102 = p102 << 16;
		low2 = low2 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p102) < 0) {
			++high2;
			high2 = high2 | 0;
		}
		high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(a2.low,b2.high) + haxe__$Int32_Int32_$Impl_$._mul(a2.high,b2.low) | 0) | 0;
		return new haxe__$Int64__$_$_$Int64(high2,low2);
	case 3:
		var mod = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1) >= 12 ? 1 : 0;
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + mod,0,0,0);
	case 4:
		var wd = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this1);
		var mod1 = wd < 3 ? -wd : wd > 3 ? 7 - wd : thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1) < 12 ? -wd : 7 - wd;
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + mod1,0,0,0);
	case 5:
		var mod2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) > Math.round(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH)) / 2) ? 1 : 0;
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH) + mod2,1,0,0,0);
	case 6:
		var b3 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),6,2,0,0,0);
		var v = this1.high - b3.high | 0;
		v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b3.low);
		var mod3 = (this1.high < 0 ? b3.high < 0 ? v : -1 : b3.high >= 0 ? v : 1) > 0 ? 1 : 0;
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) + mod3,1,1,0,0,0);
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameYear = function(this1,other) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(other,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameMonth = function(this1,other) {
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameYear(this1,other)) {
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH) == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(other,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameDay = function(this1,other) {
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameMonth(this1,other)) {
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(other,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameHour = function(this1,other) {
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameDay(this1,other)) {
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1) == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(other);
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameMinute = function(this1,other) {
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameHour(this1,other)) {
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1) == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(other);
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameSecond = function(this1,other) {
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameMinute(this1,other)) {
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1) == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(other);
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.withYear = function(this1,year) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this1));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.withMonth = function(this1,month) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),month,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this1));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.withDay = function(this1,day) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),day,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this1));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.withHour = function(this1,hour) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),hour,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this1));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.withMinute = function(this1,minute) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1),minute,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this1));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.withSecond = function(this1,second) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1),second,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this1));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.withMillisecond = function(this1,millisecond) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1),millisecond);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.add = function(this1,time) {
	var b = time;
	var high = this1.high + b.high | 0;
	var low = this1.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this1.low) < 0) {
		++high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addTicks = function(this1,tickstoadd) {
	var high = this1.high + tickstoadd.high | 0;
	var low = this1.low + tickstoadd.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this1.low) < 0) {
		++high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.subtract = function(this1,time) {
	var b = time;
	var high = this1.high - b.high | 0;
	var low = this1.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low) < 0) {
		--high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.subtractDate = function(this1,date) {
	var b = date;
	var high = this1.high - b.high | 0;
	var low = this1.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low) < 0) {
		--high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled = function(this1,value,scale) {
	var x = value * scale + (value >= 0 ? 0.5 : -0.5) | 0;
	var millis_high = x >> 31;
	var millis_low = x;
	var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64;
	var al = millis_low & 65535;
	var ah = millis_low >>> 16;
	var bl = b.low & 65535;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = p00 + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		++high;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		++high;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(millis_low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(millis_high,b.low) | 0) | 0;
	var b_high = high;
	var b_low = low;
	var high1 = this1.high + b_high | 0;
	var low1 = this1.low + b_low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,this1.low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high1,low1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addDays = function(this1,days) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this1,days,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerDay);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addHours = function(this1,hours) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this1,hours,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerHour);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addMilliseconds = function(this1,milliseconds) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this1,milliseconds,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addMinutes = function(this1,minutes) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this1,minutes,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerMinute);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addMonths = function(this1,months) {
	var y = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var m = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var d = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var i = m - 1 + months;
	if(i >= 0) {
		m = i % 12 + 1 | 0;
		y = y + i / 12 | 0;
	} else {
		m = 12 + (i + 1) % 12 | 0;
		y = y + (i - 11) / 12 | 0;
	}
	var days = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(y,m);
	if(d > days) {
		d = days;
	}
	var a = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.dateToTicks(y,m,d);
	var b = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).modulus;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		++high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addSeconds = function(this1,seconds) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this1,seconds,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerSecond);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addYears = function(this1,years) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addMonths(this1,years * 12);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.compareTo = function(this1,other) {
	if(null == other && this1 == null) {
		return 0;
	}
	if(null == this1) {
		return -1;
	} else if(null == other) {
		return 1;
	}
	return thx_Int64s.compare(this1,other);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.equalsTo = function(this1,that) {
	var b = that;
	if(this1.high == b.high) {
		return this1.low == b.low;
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.equals = function(self,that) {
	var a = self;
	var b = that;
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.notEqualsTo = function(this1,that) {
	var b = that;
	if(!(this1.high != b.high)) {
		return this1.low != b.low;
	} else {
		return true;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.notEquals = function(self,that) {
	var a = self;
	var b = that;
	if(!(a.high != b.high)) {
		return a.low != b.low;
	} else {
		return true;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nearEqualsTo = function(this1,other,span) {
	var a = other;
	var high = a.high - this1.high | 0;
	var low = a.low - this1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,this1.low) < 0) {
		--high;
		high = high | 0;
	}
	var ticks = thx_Int64s.abs(new haxe__$Int64__$_$_$Int64(high,low));
	var this2 = thx__$Time_Time_$Impl_$.abs(span);
	var v = ticks.high - this2.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(ticks.low,this2.low);
	return (ticks.high < 0 ? this2.high < 0 ? v : -1 : this2.high >= 0 ? v : 1) <= 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.greaterThan = function(this1,that) {
	var b = that;
	var v = this1.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low);
	return (this1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.greater = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.greaterEqualsTo = function(this1,that) {
	var b = that;
	var v = this1.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low);
	return (this1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.greaterEquals = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.lessThan = function(this1,that) {
	var b = that;
	var v = this1.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low);
	return (this1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.less = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.lessEqualsTo = function(this1,that) {
	var b = that;
	var v = this1.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low);
	return (this1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.lessEquals = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.toTime = function(this1) {
	var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.unixEpochTicks;
	var high = this1.high - b.high | 0;
	var low = this1.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low) < 0) {
		--high;
		high = high | 0;
	}
	return thx_Int64s.toFloat(haxe__$Int64_Int64_$Impl_$.divMod(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.toDate = function(this1) {
	var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.unixEpochTicks;
	var high = this1.high - b.high | 0;
	var low = this1.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low) < 0) {
		--high;
		high = high | 0;
	}
	return new Date(thx_Int64s.toFloat(haxe__$Int64_Int64_$Impl_$.divMod(new haxe__$Int64__$_$_$Int64(high,low),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.toDateTime = function(this1,offset) {
	var this2 = [this1,null == offset ? thx__$Time_Time_$Impl_$.zero : offset];
	return this2;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.toLocalDateTime = function(this1) {
	var this2 = [this1,thx__$DateTime_DateTime_$Impl_$.localOffset()];
	return this2;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.toString = function(this1) {
	if(null == this1) {
		return "";
	}
	var abs = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(thx_Int64s.abs(this1));
	var decimals = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_tickInSecond(abs) != 0 ? "." + thx_Strings.trimCharsRight(thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_tickInSecond(abs),"0",7),")") : "";
	var b = thx_Int64s.zero;
	var v = this1.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low);
	var isneg = (this1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
	return (isneg ? "-" : "") + ("" + thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(abs,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) + "-" + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(abs,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),"0",2) + "-" + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(abs,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),"0",2) + "T" + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(abs),"0",2) + ":" + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(abs),"0",2) + ":" + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(abs),"0",2) + decimals + "Z");
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_ticks = function(this1) {
	return this1;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_year = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_month = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_day = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient,new haxe__$Int64__$_$_$Int64(0,24)).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient,new haxe__$Int64__$_$_$Int64(0,60)).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek = function(this1) {
	var a = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).quotient;
	var b_high = 0;
	var b_low = 1;
	var high = a.high + b_high | 0;
	var low = a.low + b_low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		++high;
		high = high | 0;
	}
	var x = haxe__$Int64_Int64_$Impl_$.divMod(new haxe__$Int64__$_$_$Int64(high,low),new haxe__$Int64__$_$_$Int64(0,7)).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfYear = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY_OF_YEAR);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.thousandI64).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_microsecond = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMicrosecondI64).quotient,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millionI64).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_tickInSecond = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,new haxe__$Int64__$_$_$Int64(0,10000000)).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).quotient,new haxe__$Int64__$_$_$Int64(0,60)).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_timeOfDay = function(this1) {
	return haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).modulus;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_isInLeapYear = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.isLeapYear(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_monthDays = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.self = function(this1) {
	return this1;
};
var thx__$Ord_Ord_$Impl_$ = {};
thx__$Ord_Ord_$Impl_$.__name__ = "thx._Ord.Ord_Impl_";
thx__$Ord_Ord_$Impl_$.order = function(this1,a0,a1) {
	return this1(a0,a1);
};
thx__$Ord_Ord_$Impl_$.max = function(this1,a0,a1) {
	switch(this1(a0,a1)._hx_index) {
	case 1:
		return a0;
	case 0:case 2:
		return a1;
	}
};
thx__$Ord_Ord_$Impl_$.min = function(this1,a0,a1) {
	switch(this1(a0,a1)._hx_index) {
	case 1:
		return a1;
	case 0:case 2:
		return a0;
	}
};
thx__$Ord_Ord_$Impl_$.equal = function(this1,a0,a1) {
	return this1(a0,a1) == thx_OrderingImpl.EQ;
};
thx__$Ord_Ord_$Impl_$.contramap = function(this1,f) {
	return function(b0,b1) {
		var tmp = f(b0);
		var tmp1 = f(b1);
		return this1(tmp,tmp1);
	};
};
thx__$Ord_Ord_$Impl_$.inverse = function(this1) {
	return function(a0,a1) {
		return this1(a1,a0);
	};
};
thx__$Ord_Ord_$Impl_$.intComparison = function(this1,a0,a1) {
	switch(this1(a0,a1)._hx_index) {
	case 0:
		return -1;
	case 1:
		return 1;
	case 2:
		return 0;
	}
};
thx__$Ord_Ord_$Impl_$.fromIntComparison = function(f) {
	return function(a,b) {
		return thx__$Ord_Ordering_$Impl_$.fromInt(f(a,b));
	};
};
thx__$Ord_Ord_$Impl_$.forComparable = function() {
	return function(a,b) {
		return thx__$Ord_Ordering_$Impl_$.fromInt(a.compareTo(b));
	};
};
thx__$Ord_Ord_$Impl_$.forComparableOrd = function() {
	return function(a,b) {
		return a.compareTo(b);
	};
};
var thx__$Ord_Ordering_$Impl_$ = {};
thx__$Ord_Ordering_$Impl_$.__name__ = "thx._Ord.Ordering_Impl_";
thx__$Ord_Ordering_$Impl_$.fromInt = function(value) {
	if(value < 0) {
		return thx_OrderingImpl.LT;
	} else if(value > 0) {
		return thx_OrderingImpl.GT;
	} else {
		return thx_OrderingImpl.EQ;
	}
};
thx__$Ord_Ordering_$Impl_$.fromFloat = function(value) {
	if(value < 0) {
		return thx_OrderingImpl.LT;
	} else if(value > 0) {
		return thx_OrderingImpl.GT;
	} else {
		return thx_OrderingImpl.EQ;
	}
};
thx__$Ord_Ordering_$Impl_$.toInt = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return -1;
	case 1:
		return 1;
	case 2:
		return 0;
	}
};
var thx_OrderingImpl = $hxEnums["thx.OrderingImpl"] = { __ename__ : "thx.OrderingImpl", __constructs__ : ["LT","GT","EQ"]
	,LT: {_hx_index:0,__enum__:"thx.OrderingImpl",toString:$estr}
	,GT: {_hx_index:1,__enum__:"thx.OrderingImpl",toString:$estr}
	,EQ: {_hx_index:2,__enum__:"thx.OrderingImpl",toString:$estr}
};
var thx_Dates = function() { };
thx_Dates.__name__ = "thx.Dates";
thx_Dates.compare = function(a,b) {
	var a1 = a.getTime();
	var b1 = b.getTime();
	if(a1 < b1) {
		return -1;
	} else if(a1 > b1) {
		return 1;
	} else {
		return 0;
	}
};
thx_Dates.create = function(year,month,day,hour,minute,second) {
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	if(day == null) {
		day = 1;
	}
	if(month == null) {
		month = 0;
	}
	minute += Math.floor(second / 60);
	second %= 60;
	if(second < 0) {
		second += 60;
	}
	hour += Math.floor(minute / 60);
	minute %= 60;
	if(minute < 0) {
		minute += 60;
	}
	day += Math.floor(hour / 24);
	hour %= 24;
	if(hour < 0) {
		hour += 24;
	}
	if(day == 0) {
		--month;
		if(month < 0) {
			month = 11;
			--year;
		}
		day = thx_Dates.daysInMonth(year,month);
	}
	year += Math.floor(month / 12);
	month %= 12;
	if(month < 0) {
		month += 12;
	}
	var days = thx_Dates.daysInMonth(year,month);
	while(day > days) {
		if(day > days) {
			day -= days;
			++month;
		}
		if(month > 11) {
			month -= 12;
			++year;
		}
		days = thx_Dates.daysInMonth(year,month);
	}
	return new Date(year,month,day,hour,minute,second);
};
thx_Dates.daysRange = function(start,end) {
	if(thx_Dates.compare(end,start) < 0) {
		return [];
	}
	var days = [];
	while(!thx_Dates.sameDay(start,end)) {
		days.push(start);
		start = thx_Dates.jump(start,thx_TimePeriod.Day,1);
	}
	days.push(end);
	return days;
};
thx_Dates.equals = function(self,other) {
	return self.getTime() == other.getTime();
};
thx_Dates.nearEquals = function(self,other,units,period) {
	if(units == null) {
		units = 1;
	}
	if(null == period) {
		period = thx_TimePeriod.Second;
	}
	if(units < 0) {
		units = -units;
	}
	var min = thx_Dates.jump(self,period,-units);
	var max = thx_Dates.jump(self,period,units);
	if(thx_Dates.compare(min,other) <= 0) {
		return thx_Dates.compare(max,other) >= 0;
	} else {
		return false;
	}
};
thx_Dates.greater = function(self,other) {
	return thx_Dates.compare(self,other) > 0;
};
thx_Dates.more = function(self,other) {
	return thx_Dates.compare(self,other) > 0;
};
thx_Dates.less = function(self,other) {
	return thx_Dates.compare(self,other) < 0;
};
thx_Dates.greaterEquals = function(self,other) {
	return thx_Dates.compare(self,other) >= 0;
};
thx_Dates.moreEqual = function(self,other) {
	return thx_Dates.compare(self,other) >= 0;
};
thx_Dates.lessEquals = function(self,other) {
	return thx_Dates.compare(self,other) <= 0;
};
thx_Dates.lessEqual = function(self,other) {
	return thx_Dates.compare(self,other) <= 0;
};
thx_Dates.isLeapYear = function(year) {
	if(year % 4 != 0) {
		return false;
	}
	if(year % 100 == 0) {
		return year % 400 == 0;
	}
	return true;
};
thx_Dates.isInLeapYear = function(d) {
	return thx_Dates.isLeapYear(d.getFullYear());
};
thx_Dates.daysInMonth = function(year,month) {
	switch(month) {
	case 1:
		if(thx_Dates.isLeapYear(year)) {
			return 29;
		} else {
			return 28;
		}
		break;
	case 0:case 2:case 4:case 6:case 7:case 9:case 11:
		return 31;
	case 3:case 5:case 8:case 10:
		return 30;
	default:
		throw new js__$Boot_HaxeError("Invalid month \"" + month + "\".  Month should be a number, Jan=0, Dec=11");
	}
};
thx_Dates.numDaysInMonth = function(month,year) {
	return thx_Dates.daysInMonth(year,month);
};
thx_Dates.daysInThisMonth = function(d) {
	return thx_Dates.daysInMonth(d.getFullYear(),d.getMonth());
};
thx_Dates.numDaysInThisMonth = function(d) {
	return thx_Dates.daysInThisMonth(d);
};
thx_Dates.sameYear = function(self,other) {
	return self.getFullYear() == other.getFullYear();
};
thx_Dates.sameMonth = function(self,other) {
	if(thx_Dates.sameYear(self,other)) {
		return self.getMonth() == other.getMonth();
	} else {
		return false;
	}
};
thx_Dates.sameDay = function(self,other) {
	if(thx_Dates.sameMonth(self,other)) {
		return self.getDate() == other.getDate();
	} else {
		return false;
	}
};
thx_Dates.sameHour = function(self,other) {
	if(thx_Dates.sameDay(self,other)) {
		return self.getHours() == other.getHours();
	} else {
		return false;
	}
};
thx_Dates.sameMinute = function(self,other) {
	if(thx_Dates.sameHour(self,other)) {
		return self.getMinutes() == other.getMinutes();
	} else {
		return false;
	}
};
thx_Dates.snapNext = function(date,period) {
	return new Date(thx__$Timestamp_Timestamp_$Impl_$.snapNext(date.getTime(),period));
};
thx_Dates.snapPrev = function(date,period) {
	return new Date(thx__$Timestamp_Timestamp_$Impl_$.snapPrev(date.getTime(),period));
};
thx_Dates.snapTo = function(date,period) {
	return new Date(thx__$Timestamp_Timestamp_$Impl_$.snapTo(date.getTime(),period));
};
thx_Dates.jump = function(date,period,amount) {
	var sec = date.getSeconds();
	var min = date.getMinutes();
	var hour = date.getHours();
	var day = date.getDate();
	var month = date.getMonth();
	var year = date.getFullYear();
	switch(period._hx_index) {
	case 0:
		sec += amount;
		break;
	case 1:
		min += amount;
		break;
	case 2:
		hour += amount;
		break;
	case 3:
		day += amount;
		break;
	case 4:
		day += amount * 7;
		break;
	case 5:
		month += amount;
		break;
	case 6:
		year += amount;
		break;
	}
	return thx_Dates.create(year,month,day,hour,min,sec);
};
thx_Dates.max = function(self,other) {
	if(self.getTime() > other.getTime()) {
		return self;
	} else {
		return other;
	}
};
thx_Dates.min = function(self,other) {
	if(self.getTime() < other.getTime()) {
		return self;
	} else {
		return other;
	}
};
thx_Dates.snapToWeekDay = function(date,day,firstDayOfWk) {
	if(firstDayOfWk == null) {
		firstDayOfWk = 0;
	}
	var d = date.getDay();
	var s = day;
	if(s < firstDayOfWk) {
		s += 7;
	}
	if(d < firstDayOfWk) {
		d += 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.snapNextWeekDay = function(date,day) {
	var d = date.getDay();
	var s = day;
	if(s < d) {
		s += 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.snapPrevWeekDay = function(date,day) {
	var d = date.getDay();
	var s = day;
	if(s > d) {
		s -= 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.prevYear = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Year,-1);
};
thx_Dates.nextYear = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Year,1);
};
thx_Dates.prevMonth = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Month,-1);
};
thx_Dates.nextMonth = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Month,1);
};
thx_Dates.prevWeek = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Week,-1);
};
thx_Dates.nextWeek = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Week,1);
};
thx_Dates.prevDay = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Day,-1);
};
thx_Dates.nextDay = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Day,1);
};
thx_Dates.prevHour = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Hour,-1);
};
thx_Dates.nextHour = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Hour,1);
};
thx_Dates.prevMinute = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Minute,-1);
};
thx_Dates.nextMinute = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Minute,1);
};
thx_Dates.prevSecond = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Second,-1);
};
thx_Dates.nextSecond = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Second,1);
};
thx_Dates.withYear = function(date,year) {
	return thx_Dates.create(year,date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withMonth = function(date,month) {
	return thx_Dates.create(date.getFullYear(),month,date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withDay = function(date,day) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),day,date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withHour = function(date,hour) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),hour,date.getMinutes(),date.getSeconds());
};
thx_Dates.withMinute = function(date,minute) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),minute,date.getSeconds());
};
thx_Dates.withSecond = function(date,second) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),second);
};
thx_Dates.parseDate = function(s) {
	try {
		return thx_Either.Right(HxOverrides.strDate(s));
	} catch( e ) {
		haxe_CallStack.lastException = e;
		((e) instanceof js__$Boot_HaxeError);
		return thx_Either.Left("" + s + " could not be parsed to a valid Date value.");
	}
};
var thx_Dynamics = function() { };
thx_Dynamics.__name__ = "thx.Dynamics";
thx_Dynamics.equals = function(a,b) {
	if(!thx_Types.sameType(a,b)) {
		return false;
	}
	if(a == b) {
		return true;
	}
	var _g = Type.typeof(a);
	switch(_g._hx_index) {
	case 0:case 1:case 2:case 3:
		return false;
	case 4:
		var fa = Reflect.fields(a);
		var fb = Reflect.fields(b);
		var _g1 = 0;
		while(_g1 < fa.length) {
			var field = fa[_g1];
			++_g1;
			HxOverrides.remove(fb,field);
			if(!Object.prototype.hasOwnProperty.call(b,field)) {
				return false;
			}
			var va = Reflect.field(a,field);
			if(Reflect.isFunction(va)) {
				continue;
			}
			var vb = Reflect.field(b,field);
			if(!thx_Dynamics.equals(va,vb)) {
				return false;
			}
		}
		if(fb.length > 0) {
			return false;
		}
		var t = false;
		t = thx_Iterators.isIterator(a);
		if(t || thx_Iterables.isIterable(a)) {
			if(t && !thx_Iterators.isIterator(b)) {
				return false;
			}
			if(!t && !thx_Iterables.isIterable(b)) {
				return false;
			}
			var aa = t ? thx_Iterators.toArray(a) : thx_Iterators.toArray($getIterator(a));
			var ab = t ? thx_Iterators.toArray(b) : thx_Iterators.toArray($getIterator(b));
			if(aa.length != ab.length) {
				return false;
			}
			var _g11 = 0;
			var _g2 = aa.length;
			while(_g11 < _g2) {
				var i = _g11++;
				if(!thx_Dynamics.equals(aa[i],ab[i])) {
					return false;
				}
			}
			return true;
		}
		return true;
	case 5:
		return Reflect.compareMethods(a,b);
	case 6:
		var c = _g.c;
		var ca = c.__name__;
		var c1 = js_Boot.getClass(b);
		var cb = c1.__name__;
		if(ca != cb) {
			return false;
		}
		if(typeof(a) == "string") {
			return false;
		}
		if(((a) instanceof Array) && a.__enum__ == null) {
			var aa1 = a;
			var ab1 = b;
			if(aa1.length != ab1.length) {
				return false;
			}
			var _g3 = 0;
			var _g12 = aa1.length;
			while(_g3 < _g12) {
				var i1 = _g3++;
				if(!thx_Dynamics.equals(aa1[i1],ab1[i1])) {
					return false;
				}
			}
			return true;
		}
		if(((a) instanceof Date)) {
			return a.getTime() == b.getTime();
		}
		if(js_Boot.__implements(a,haxe_IMap)) {
			var ha = a;
			var hb = b;
			var ka = thx_Iterators.toArray(ha.keys());
			var kb = thx_Iterators.toArray(hb.keys());
			if(ka.length != kb.length) {
				return false;
			}
			var _g4 = 0;
			while(_g4 < ka.length) {
				var key = ka[_g4];
				++_g4;
				if(!hb.exists(key) || !thx_Dynamics.equals(ha.get(key),hb.get(key))) {
					return false;
				}
			}
			return true;
		}
		var t1 = false;
		t1 = thx_Iterators.isIterator(a);
		if(t1 || thx_Iterables.isIterable(a)) {
			var va1 = t1 ? thx_Iterators.toArray(a) : thx_Iterators.toArray($getIterator(a));
			var vb1 = t1 ? thx_Iterators.toArray(b) : thx_Iterators.toArray($getIterator(b));
			if(va1.length != vb1.length) {
				return false;
			}
			var _g5 = 0;
			var _g13 = va1.length;
			while(_g5 < _g13) {
				var i2 = _g5++;
				if(!thx_Dynamics.equals(va1[i2],vb1[i2])) {
					return false;
				}
			}
			return true;
		}
		var f = null;
		var tmp;
		if(Object.prototype.hasOwnProperty.call(a,"equals")) {
			f = Reflect.field(a,"equals");
			tmp = Reflect.isFunction(f);
		} else {
			tmp = false;
		}
		if(tmp) {
			return f.apply(a,[b]);
		}
		var fields = Type.getInstanceFields(js_Boot.getClass(a));
		var _g6 = 0;
		while(_g6 < fields.length) {
			var field1 = fields[_g6];
			++_g6;
			var va2 = Reflect.field(a,field1);
			if(Reflect.isFunction(va2)) {
				continue;
			}
			var vb2 = Reflect.field(b,field1);
			if(!thx_Dynamics.equals(va2,vb2)) {
				return false;
			}
		}
		return true;
	case 7:
		var e = _g.e;
		var ea = e.__ename__;
		var teb = Type.getEnum(b);
		var eb = teb.__ename__;
		if(ea != eb) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var pa = Type.enumParameters(a);
		var pb = Type.enumParameters(b);
		var _g7 = 0;
		var _g14 = pa.length;
		while(_g7 < _g14) {
			var i3 = _g7++;
			if(!thx_Dynamics.equals(pa[i3],pb[i3])) {
				return false;
			}
		}
		return true;
	case 8:
		throw new js__$Boot_HaxeError("Unable to compare two unknown types");
	}
};
thx_Dynamics.clone = function(v,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	var _g = Type.typeof(v);
	switch(_g._hx_index) {
	case 0:
		return null;
	case 1:case 2:case 3:case 5:case 8:
		return v;
	case 4:
		return thx_Objects.copyTo(v,{ });
	case 6:
		var c = _g.c;
		var name = c.__name__;
		switch(name) {
		case "Array":
			var _this = v;
			var result = new Array(_this.length);
			var _g1 = 0;
			var _g11 = _this.length;
			while(_g1 < _g11) {
				var i = _g1++;
				result[i] = thx_Dynamics.clone(_this[i],cloneInstances);
			}
			return result;
		case "Date":case "String":
			return v;
		default:
			if(cloneInstances) {
				var o = Object.create(c.prototype);
				var _g2 = 0;
				var _g12 = Type.getInstanceFields(c);
				while(_g2 < _g12.length) {
					var field = _g12[_g2];
					++_g2;
					o[field] = thx_Dynamics.clone(Reflect.field(v,field),cloneInstances);
				}
				return o;
			} else {
				return v;
			}
		}
		break;
	case 7:
		return v;
	}
};
thx_Dynamics.compare = function(a,b) {
	if(null == a && null == b) {
		return 0;
	}
	if(null == a) {
		return -1;
	}
	if(null == b) {
		return 1;
	}
	if(!thx_Types.sameType(a,b)) {
		return haxe_Utf8.compare(thx_Types.toString(Type.typeof(a)),thx_Types.toString(Type.typeof(b)));
	}
	var _g = Type.typeof(a);
	switch(_g._hx_index) {
	case 1:
		return thx_Ints.compare(a,b);
	case 2:
		var a1 = a;
		var b1 = b;
		if(a1 < b1) {
			return -1;
		} else if(a1 > b1) {
			return 1;
		} else {
			return 0;
		}
		break;
	case 3:
		return thx_Bools.compare(a,b);
	case 4:
		return thx_Objects.compare(a,b);
	case 6:
		var c = _g.c;
		var name = c.__name__;
		switch(name) {
		case "Array":
			return thx_Arrays.compare(a,b);
		case "Date":
			return thx_Dates.compare(a,b);
		case "String":
			return haxe_Utf8.compare(a,b);
		default:
			if(Object.prototype.hasOwnProperty.call(a,"compare")) {
				return Reflect.field(a,"compare").apply(a,[b]);
			} else {
				return haxe_Utf8.compare(Std.string(a),Std.string(b));
			}
		}
		break;
	case 7:
		return thx_Enums.compare(a,b);
	default:
		return 0;
	}
};
thx_Dynamics.string = function(v) {
	var _g = Type.typeof(v);
	switch(_g._hx_index) {
	case 0:
		return "null";
	case 1:case 2:case 3:
		return "" + Std.string(v);
	case 4:
		return thx_Objects.string(v);
	case 5:
		return "<function>";
	case 6:
		var c = _g.c;
		switch(c.__name__) {
		case "Array":
			return thx_Arrays.string(v);
		case "Date":
			return HxOverrides.dateStr(v);
		case "String":
			return v;
		default:
			if(js_Boot.__implements(v,haxe_IMap)) {
				return thx_Maps.string(v);
			} else {
				return Std.string(v);
			}
		}
		break;
	case 7:
		return thx_Enums.string(v);
	case 8:
		return "<unknown>";
	}
};
var thx_DynamicsT = function() { };
thx_DynamicsT.__name__ = "thx.DynamicsT";
thx_DynamicsT.isEmpty = function(o) {
	return Reflect.fields(o).length == 0;
};
thx_DynamicsT.exists = function(o,name) {
	return Object.prototype.hasOwnProperty.call(o,name);
};
thx_DynamicsT.fields = function(o) {
	return Reflect.fields(o);
};
thx_DynamicsT.merge = function(to,from,replacef) {
	if(null == replacef) {
		replacef = function(field,oldv,newv) {
			return newv;
		};
	}
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var field1 = _g1[_g];
		++_g;
		var newv1 = Reflect.field(from,field1);
		if(Object.prototype.hasOwnProperty.call(to,field1)) {
			to[field1] = replacef(field1,Reflect.field(to,field1),newv1);
		} else {
			to[field1] = newv1;
		}
	}
	return to;
};
thx_DynamicsT.size = function(o) {
	return Reflect.fields(o).length;
};
thx_DynamicsT.values = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = Reflect.field(o,_this[i]);
	}
	return result;
};
thx_DynamicsT.tuples = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var key = _this[i];
		var this1 = { _0 : key, _1 : Reflect.field(o,key)};
		result[i] = this1;
	}
	return result;
};
var thx_Either = $hxEnums["thx.Either"] = { __ename__ : "thx.Either", __constructs__ : ["Left","Right"]
	,Left: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"thx.Either",toString:$estr}; },$_.__params__ = ["value"],$_)
	,Right: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"thx.Either",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var thx_Eithers = function() { };
thx_Eithers.__name__ = "thx.Eithers";
thx_Eithers.isLeft = function(either) {
	switch(either._hx_index) {
	case 0:
		return true;
	case 1:
		return false;
	}
};
thx_Eithers.isRight = function(either) {
	switch(either._hx_index) {
	case 0:
		return false;
	case 1:
		return true;
	}
};
thx_Eithers.toLeft = function(either) {
	switch(either._hx_index) {
	case 0:
		return haxe_ds_Option.Some(either.value);
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Eithers.toRight = function(either) {
	switch(either._hx_index) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		return haxe_ds_Option.Some(either.value);
	}
};
thx_Eithers.toLeftUnsafe = function(either) {
	switch(either._hx_index) {
	case 0:
		return either.value;
	case 1:
		return null;
	}
};
thx_Eithers.toRightUnsafe = function(either) {
	switch(either._hx_index) {
	case 0:
		return null;
	case 1:
		return either.value;
	}
};
thx_Eithers.map = function(either,f) {
	switch(either._hx_index) {
	case 0:
		return thx_Either.Left(either.value);
	case 1:
		return thx_Either.Right(f(either.value));
	}
};
thx_Eithers.ap = function(either,fa) {
	switch(either._hx_index) {
	case 0:
		return thx_Either.Left(either.value);
	case 1:
		var v = either.value;
		return thx_Eithers.map(fa,function(f) {
			return f(v);
		});
	}
};
thx_Eithers.flatMap = function(either,f) {
	switch(either._hx_index) {
	case 0:
		return thx_Either.Left(either.value);
	case 1:
		return f(either.value);
	}
};
thx_Eithers.leftMap = function(either,f) {
	switch(either._hx_index) {
	case 0:
		return thx_Either.Left(f(either.value));
	case 1:
		return thx_Either.Right(either.value);
	}
};
thx_Eithers.orThrow = function(either,message) {
	switch(either._hx_index) {
	case 0:
		throw new thx_Error("" + message + ": " + Std.string(either.value),null,{ fileName : "thx/Eithers.hx", lineNumber : 104, className : "thx.Eithers", methodName : "orThrow"});
	case 1:
		return either.value;
	}
};
thx_Eithers.toValidation = function(either) {
	return either;
};
thx_Eithers.toVNel = function(either) {
	return thx_Eithers.leftMap(either,thx__$Nel_Nel_$Impl_$.pure);
};
thx_Eithers.cata = function(either,l,r) {
	switch(either._hx_index) {
	case 0:
		return l(either.value);
	case 1:
		return r(either.value);
	}
};
thx_Eithers.bimap = function(either,l,r) {
	switch(either._hx_index) {
	case 0:
		return thx_Either.Left(l(either.value));
	case 1:
		return thx_Either.Right(r(either.value));
	}
};
thx_Eithers.foldLeft = function(either,a,f) {
	switch(either._hx_index) {
	case 0:
		return a;
	case 1:
		return f(a,either.value);
	}
};
thx_Eithers.foldMap = function(either,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	};
	return thx_Eithers.foldLeft(thx_Eithers.map(either,f),thx__$Monoid_Monoid_$Impl_$.get_zero(m),tmp);
};
thx_Eithers.getOrElse = function(e0,v) {
	switch(e0._hx_index) {
	case 0:
		return v;
	case 1:
		return e0.value;
	}
};
thx_Eithers.getOrElseF = function(e0,f) {
	switch(e0._hx_index) {
	case 0:
		return f();
	case 1:
		return e0.value;
	}
};
thx_Eithers.orElse = function(e0,e1) {
	if(e0._hx_index == 0) {
		return e1;
	} else {
		return e0;
	}
};
thx_Eithers.orElseF = function(e0,f) {
	if(e0._hx_index == 0) {
		return f();
	} else {
		return e0;
	}
};
thx_Eithers.each = function(either,f) {
	switch(either._hx_index) {
	case 0:
		break;
	case 1:
		f(either.value);
		break;
	}
	return;
};
thx_Eithers.eachLeft = function(either,f) {
	switch(either._hx_index) {
	case 0:
		f(either.value);
		break;
	case 1:
		break;
	}
	return;
};
thx_Eithers.ensure = function(either,p,error) {
	if(either._hx_index == 1) {
		if(p(either.value)) {
			return either;
		} else {
			return thx_Either.Left(error);
		}
	} else {
		return either;
	}
};
thx_Eithers.exists = function(either,p) {
	if(either._hx_index == 1) {
		return p(either.value);
	} else {
		return false;
	}
};
thx_Eithers.forall = function(either,p) {
	if(either._hx_index == 1) {
		return p(either.value);
	} else {
		return true;
	}
};
var thx__$Eithers_EitherK_$Impl_$ = {};
thx__$Eithers_EitherK_$Impl_$.__name__ = "thx._Eithers.EitherK_Impl_";
thx__$Eithers_EitherK_$Impl_$.apply = function(this1,a) {
	return this1(a);
};
thx__$Eithers_EitherK_$Impl_$.compose = function(this1,f) {
	return function(a0) {
		return thx_Eithers.flatMap(thx__$Eithers_EitherK_$Impl_$.apply(f,a0),this1);
	};
};
thx__$Eithers_EitherK_$Impl_$.andThen = function(this1,f) {
	return function(a) {
		var tmp = this1(a);
		var _e = f;
		return thx_Eithers.flatMap(tmp,function(a1) {
			return thx__$Eithers_EitherK_$Impl_$.apply(_e,a1);
		});
	};
};
thx__$Eithers_EitherK_$Impl_$.pure = function(r) {
	return function(a) {
		return thx_Either.Right(r);
	};
};
thx__$Eithers_EitherK_$Impl_$.map = function(this1,f) {
	var fb = f;
	return thx__$Eithers_EitherK_$Impl_$.flatMap(this1,function(v) {
		return thx__$Eithers_EitherK_$Impl_$.pure(fb(v));
	});
};
thx__$Eithers_EitherK_$Impl_$.ap = function(this1,e) {
	return thx__$Eithers_EitherK_$Impl_$.flatMap(this1,function(r) {
		return thx__$Eithers_EitherK_$Impl_$.map(e,function(f) {
			return f(r);
		});
	});
};
thx__$Eithers_EitherK_$Impl_$.flatMap = function(this1,f) {
	return function(a) {
		return thx_Eithers.flatMap(this1(a),function(r) {
			return thx__$Eithers_EitherK_$Impl_$.apply(f(r),a);
		});
	};
};
thx__$Eithers_EitherK_$Impl_$.monoid = function() {
	return { zero : function(r) {
		return thx_Either.Right(r);
	}, append : function(f0,f1) {
		return function(r1) {
			var tmp = thx__$Eithers_EitherK_$Impl_$.apply(f0,r1);
			var _e = f1;
			return thx_Eithers.flatMap(tmp,function(a) {
				return thx__$Eithers_EitherK_$Impl_$.apply(_e,a);
			});
		};
	}};
};
var thx_Enums = function() { };
thx_Enums.__name__ = "thx.Enums";
thx_Enums.string = function(e) {
	var cons = $hxEnums[e.__enum__].__constructs__[e._hx_index];
	var params = [];
	var _g = 0;
	var _g1 = Type.enumParameters(e);
	while(_g < _g1.length) {
		var param = _g1[_g];
		++_g;
		params.push(thx_Dynamics.string(param));
	}
	return cons + (params.length == 0 ? "" : "(" + params.join(", ") + ")");
};
thx_Enums.compare = function(a,b) {
	var v = thx_Ints.compare(a._hx_index,b._hx_index);
	if(v != 0) {
		return v;
	}
	return thx_Arrays.compare(Type.enumParameters(a),Type.enumParameters(b));
};
thx_Enums.sameConstructor = function(a,b) {
	return a._hx_index == b._hx_index;
};
thx_Enums.min = function(a,b) {
	if(thx_Enums.compare(a,b) < 0) {
		return a;
	} else {
		return b;
	}
};
thx_Enums.max = function(a,b) {
	if(thx_Enums.compare(a,b) > 0) {
		return a;
	} else {
		return b;
	}
};
var thx_Error = function(message,stack,pos) {
	Error.call(this,message);
	this.message = message;
	if(null == stack) {
		try {
			stack = haxe_CallStack.exceptionStack();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			((e) instanceof js__$Boot_HaxeError);
			stack = [];
		}
		if(stack.length == 0) {
			try {
				stack = haxe_CallStack.callStack();
			} catch( e1 ) {
				haxe_CallStack.lastException = e1;
				((e1) instanceof js__$Boot_HaxeError);
				stack = [];
			}
		}
	}
	this.stackItems = stack;
	this.pos = pos;
};
thx_Error.__name__ = "thx.Error";
thx_Error.fromDynamic = function(err,pos) {
	if(((err) instanceof thx_Error)) {
		return err;
	}
	return new thx_error_ErrorWrapper("" + Std.string(err),err,null,pos);
};
thx_Error.__super__ = Error;
thx_Error.prototype = $extend(Error.prototype,{
	pos: null
	,stackItems: null
	,toString: function() {
		return this.message + "\nfrom: " + this.getPosition() + "\n\n" + this.stackToString();
	}
	,getPosition: function() {
		return this.pos.className + "." + this.pos.methodName + "() at " + this.pos.lineNumber;
	}
	,stackToString: function() {
		return haxe_CallStack.toString(this.stackItems);
	}
	,__class__: thx_Error
});
var thx_Floats = function() { };
thx_Floats.__name__ = "thx.Floats";
thx_Floats.angleDifference = function(a,b,turn) {
	if(turn == null) {
		turn = 360.0;
	}
	var r = (b - a) % turn;
	if(r < 0) {
		r += turn;
	}
	if(r > turn / 2) {
		r -= turn;
	}
	return r;
};
thx_Floats.ceilTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.ceil(f * p) / p;
};
thx_Floats.canParse = function(s) {
	if(!(thx_Floats.pattern_parse.match(s) || thx_Floats.pattern_inf.match(s))) {
		return thx_Floats.pattern_neg_inf.match(s);
	} else {
		return true;
	}
};
thx_Floats.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Floats.clampSym = function(v,max) {
	var min = -max;
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Floats.compare = function(a,b) {
	if(a < b) {
		return -1;
	} else if(a > b) {
		return 1;
	} else {
		return 0;
	}
};
thx_Floats.floorTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.floor(f * p) / p;
};
thx_Floats.interpolate = function(f,a,b) {
	return (b - a) * f + a;
};
thx_Floats.interpolateAngle = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,a + thx_Floats.angleDifference(a,b,turn)),turn);
};
thx_Floats.interpolateAngleWidest = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolateAngle(f,a,b,turn) - turn / 2,turn);
};
thx_Floats.interpolateAngleCW = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	a = thx_Floats.wrapCircular(a,turn);
	b = thx_Floats.wrapCircular(b,turn);
	if(b < a) {
		b += turn;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,b),turn);
};
thx_Floats.interpolateAngleCCW = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	a = thx_Floats.wrapCircular(a,turn);
	b = thx_Floats.wrapCircular(b,turn);
	if(b > a) {
		b -= turn;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,b),turn);
};
thx_Floats.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
thx_Floats.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
thx_Floats.nearEquals = function(a,b,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(isFinite(a)) {
		return Math.abs(a - b) <= tollerance;
	}
	if(isNaN(a)) {
		return isNaN(b);
	}
	if(isNaN(b)) {
		return false;
	}
	if(!isFinite(b)) {
		return a > 0 == b > 0;
	}
	return false;
};
thx_Floats.nearEqualAngles = function(a,b,turn,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(turn == null) {
		turn = 360.0;
	}
	return Math.abs(thx_Floats.angleDifference(a,b,turn)) <= tollerance;
};
thx_Floats.nearZero = function(n,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	return Math.abs(n) <= tollerance;
};
thx_Floats.normalize = function(v) {
	if(v < 0) {
		return 0;
	} else if(v > 1) {
		return 1;
	} else {
		return v;
	}
};
thx_Floats.parse = function(s) {
	if(s.substring(0,1) == "+") {
		s = s.substring(1);
	}
	if(thx_Floats.pattern_inf.match(s)) {
		return Infinity;
	} else if(thx_Floats.pattern_neg_inf.match(s)) {
		return -Infinity;
	} else {
		return parseFloat(s);
	}
};
thx_Floats.root = function(base,index) {
	return Math.pow(base,1 / index);
};
thx_Floats.roundTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.round(f * p) / p;
};
thx_Floats.sign = function(value) {
	if(value < 0) {
		return -1;
	} else {
		return 1;
	}
};
thx_Floats.toString = function(v) {
	return "" + v;
};
thx_Floats.toFloat = function(s) {
	return thx_Floats.parse(s);
};
thx_Floats.trunc = function(value) {
	if(value < 0.0) {
		return Math.ceil(value);
	} else {
		return Math.floor(value);
	}
};
thx_Floats.ftrunc = function(value) {
	if(value < 0.0) {
		return Math.ceil(value);
	} else {
		return Math.floor(value);
	}
};
thx_Floats.wrap = function(v,min,max) {
	var range = max - min + 1;
	if(v < min) {
		v += range * ((min - v) / range + 1);
	}
	return min + (v - min) % range;
};
thx_Floats.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var thx_Functions0 = function() { };
thx_Functions0.__name__ = "thx.Functions0";
thx_Functions0.after = function(callback,n) {
	return function() {
		if((n -= 1) == 0) {
			callback();
		}
	};
};
thx_Functions0.join = function(fa,fb) {
	return function() {
		fa();
		fb();
	};
};
thx_Functions0.memoize = function(callback) {
	var result = null;
	return function() {
		if(result == null) {
			result = callback();
		}
		return result;
	};
};
thx_Functions0.once = function(f) {
	return function() {
		var t = f;
		f = thx_Functions.noop;
		t();
	};
};
thx_Functions0.negate = function(callback) {
	return function() {
		return !callback();
	};
};
thx_Functions0.times = function(n,callback) {
	return function() {
		var _this = thx_Ints.range(n);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = callback();
		}
		return result;
	};
};
thx_Functions0.timesi = function(n,callback) {
	return function() {
		var _this = thx_Ints.range(n);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = callback(_this[i]);
		}
		return result;
	};
};
var thx_Functions1 = function() { };
thx_Functions1.__name__ = "thx.Functions1";
thx_Functions1.compose = function(fa,fb) {
	return function(v) {
		var tmp = fb(v);
		return fa(tmp);
	};
};
thx_Functions1.map = function(fab,fbc) {
	return function(a) {
		var tmp = fab(a);
		return fbc(tmp);
	};
};
thx_Functions1.contramap = function(fbc,fab) {
	return function(a) {
		var tmp = fab(a);
		return fbc(tmp);
	};
};
thx_Functions1.join = function(fa,fb) {
	return function(v) {
		fa(v);
		fb(v);
	};
};
thx_Functions1.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v) {
			return "" + Std.string(v);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v1) {
		var key = resolver(v1);
		if(__map_reserved[key] != null ? map.existsReserved(key) : map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null ? map.getReserved(key) : map.h[key];
		}
		var result = callback(v1);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions1.negate = function(callback) {
	return function(v) {
		return !callback(v);
	};
};
thx_Functions1.noop = function(_) {
};
thx_Functions1.times = function(n,callback) {
	return function(value) {
		var _this = thx_Ints.range(n);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = callback(value);
		}
		return result;
	};
};
thx_Functions1.timesi = function(n,callback) {
	return function(value) {
		var _this = thx_Ints.range(n);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = callback(value,_this[i]);
		}
		return result;
	};
};
thx_Functions1.swapArguments = function(callback) {
	return function(a2,a1) {
		return callback(a1,a2);
	};
};
var thx_Functions2 = function() { };
thx_Functions2.__name__ = "thx.Functions2";
thx_Functions2.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v1,v2) {
			return "" + Std.string(v1) + ":" + Std.string(v2);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v11,v21) {
		var key = resolver(v11,v21);
		if(__map_reserved[key] != null ? map.existsReserved(key) : map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null ? map.getReserved(key) : map.h[key];
		}
		var result = callback(v11,v21);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions2.curry = function(f) {
	return function(a) {
		return function(b) {
			return f(a,b);
		};
	};
};
thx_Functions2.join = function(fa,fb) {
	return function(v1,v2) {
		fa(v1,v2);
		fb(v1,v2);
	};
};
thx_Functions2.negate = function(callback) {
	return function(v1,v2) {
		return !callback(v1,v2);
	};
};
var thx_Functions3 = function() { };
thx_Functions3.__name__ = "thx.Functions3";
thx_Functions3.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v1,v2,v3) {
			return "" + Std.string(v1) + ":" + Std.string(v2) + ":" + Std.string(v3);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v11,v21,v31) {
		var key = resolver(v11,v21,v31);
		if(__map_reserved[key] != null ? map.existsReserved(key) : map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null ? map.getReserved(key) : map.h[key];
		}
		var result = callback(v11,v21,v31);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions3.negate = function(callback) {
	return function(v1,v2,v3) {
		return !callback(v1,v2,v3);
	};
};
thx_Functions3.curry = function(f) {
	return function(a,b) {
		return function(c) {
			return f(a,b,c);
		};
	};
};
var thx_Functions4 = function() { };
thx_Functions4.__name__ = "thx.Functions4";
thx_Functions4.curry = function(f) {
	return function(a,b,c) {
		return function(d) {
			return f(a,b,c,d);
		};
	};
};
var thx_Functions5 = function() { };
thx_Functions5.__name__ = "thx.Functions5";
thx_Functions5.curry = function(f) {
	return function(a,b,c,d) {
		return function(e) {
			return f(a,b,c,d,e);
		};
	};
};
var thx_Functions6 = function() { };
thx_Functions6.__name__ = "thx.Functions6";
thx_Functions6.curry = function(f) {
	return function(a,b,c,d,e) {
		return function(f0) {
			return f(a,b,c,d,e,f0);
		};
	};
};
var thx_Functions7 = function() { };
thx_Functions7.__name__ = "thx.Functions7";
thx_Functions7.curry = function(f) {
	return function(a,b,c,d,e,f0) {
		return function(g) {
			return f(a,b,c,d,e,f0,g);
		};
	};
};
var thx_Functions8 = function() { };
thx_Functions8.__name__ = "thx.Functions8";
thx_Functions8.curry = function(f) {
	return function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f(a,b,c,d,e,f0,g,h);
		};
	};
};
var thx_Functions9 = function() { };
thx_Functions9.__name__ = "thx.Functions9";
thx_Functions9.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f(a,b,c,d,e,f0,g,h,i);
		};
	};
};
var thx_Functions10 = function() { };
thx_Functions10.__name__ = "thx.Functions10";
thx_Functions10.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f(a,b,c,d,e,f0,g,h,i,j);
		};
	};
};
var thx_Functions11 = function() { };
thx_Functions11.__name__ = "thx.Functions11";
thx_Functions11.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
};
var thx_Functions12 = function() { };
thx_Functions12.__name__ = "thx.Functions12";
thx_Functions12.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
};
var thx_Functions13 = function() { };
thx_Functions13.__name__ = "thx.Functions13";
thx_Functions13.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l) {
		return function(m) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m);
		};
	};
};
var thx_Functions14 = function() { };
thx_Functions14.__name__ = "thx.Functions14";
thx_Functions14.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m) {
		return function(n) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n);
		};
	};
};
var thx_Functions15 = function() { };
thx_Functions15.__name__ = "thx.Functions15";
thx_Functions15.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n) {
		return function(o) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o);
		};
	};
};
var thx_Functions16 = function() { };
thx_Functions16.__name__ = "thx.Functions16";
thx_Functions16.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o) {
		return function(p) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p);
		};
	};
};
var thx_Functions17 = function() { };
thx_Functions17.__name__ = "thx.Functions17";
thx_Functions17.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p) {
		return function(q) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q);
		};
	};
};
var thx_Functions18 = function() { };
thx_Functions18.__name__ = "thx.Functions18";
thx_Functions18.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q) {
		return function(r) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r);
		};
	};
};
var thx_Functions19 = function() { };
thx_Functions19.__name__ = "thx.Functions19";
thx_Functions19.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r) {
		return function(s) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s);
		};
	};
};
var thx_Functions20 = function() { };
thx_Functions20.__name__ = "thx.Functions20";
thx_Functions20.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s) {
		return function(t) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
		};
	};
};
var thx__$Functions_Reader_$Impl_$ = {};
thx__$Functions_Reader_$Impl_$.__name__ = "thx._Functions.Reader_Impl_";
thx__$Functions_Reader_$Impl_$.flatMap = function(this1,f) {
	return function(a) {
		var tmp = this1(a);
		return (f(tmp))(a);
	};
};
var thx_Functions = function() { };
thx_Functions.__name__ = "thx.Functions";
thx_Functions.equality = function(a,b) {
	return a == b;
};
thx_Functions.identity = function(value) {
	return value;
};
thx_Functions.noop = function() {
};
thx_Functions.passTo = function(a,f) {
	return f(a);
};
thx_Functions.applyTo = function(f,a) {
	return f(a);
};
var thx_Int64s = function() { };
thx_Int64s.__name__ = "thx.Int64s";
thx_Int64s.abs = function(value) {
	if(thx_Int64s.compare(value,new haxe__$Int64__$_$_$Int64(0,0)) > 0) {
		return value;
	} else {
		var high = ~value.high;
		var low = ~value.low + 1 | 0;
		if(low == 0) {
			++high;
			high = high | 0;
		}
		return new haxe__$Int64__$_$_$Int64(high,low);
	}
};
thx_Int64s.compare = function(a,b) {
	var v = a.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	if(a.high < 0) {
		if(b.high < 0) {
			return v;
		} else {
			return -1;
		}
	} else if(b.high >= 0) {
		return v;
	} else {
		return 1;
	}
};
thx_Int64s.parse = function(s) {
	var sIsNegative = false;
	var multiplier = new haxe__$Int64__$_$_$Int64(0,1);
	var current = new haxe__$Int64__$_$_$Int64(0,0);
	if(s.charAt(0) == "-") {
		sIsNegative = true;
		s = s.substring(1,s.length);
	}
	var len = s.length;
	var _g = 0;
	while(_g < len) {
		var i = _g++;
		var digitInt = HxOverrides.cca(s,len - 1 - i) - 48;
		if(digitInt < 0 || digitInt > 9) {
			throw new thx_Error("String should only contain digits (and an optional - sign)",null,{ fileName : "thx/Int64s.hx", lineNumber : 70, className : "thx.Int64s", methodName : "parse"});
		}
		var digit_high = digitInt >> 31;
		var digit_low = digitInt;
		if(sIsNegative) {
			var al = multiplier.low & 65535;
			var ah = multiplier.low >>> 16;
			var bl = digit_low & 65535;
			var bh = digit_low >>> 16;
			var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
			var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
			var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
			var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
			var low = p00;
			var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
			p01 = p01 << 16;
			low = p00 + p01 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
				++high;
				high = high | 0;
			}
			p10 = p10 << 16;
			low = low + p10 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
				++high;
				high = high | 0;
			}
			high = high + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,digit_high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,digit_low) | 0) | 0;
			var b_high = high;
			var b_low = low;
			var high1 = current.high - b_high | 0;
			var low1 = current.low - b_low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(current.low,b_low) < 0) {
				--high1;
				high1 = high1 | 0;
			}
			current = new haxe__$Int64__$_$_$Int64(high1,low1);
			if(!(current.high < 0)) {
				throw new thx_Error("Int64 parsing error: Underflow",null,{ fileName : "thx/Int64s.hx", lineNumber : 76, className : "thx.Int64s", methodName : "parse"});
			}
		} else {
			var al1 = multiplier.low & 65535;
			var ah1 = multiplier.low >>> 16;
			var bl1 = digit_low & 65535;
			var bh1 = digit_low >>> 16;
			var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
			var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
			var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
			var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
			var low2 = p001;
			var high2 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
			p011 = p011 << 16;
			low2 = p001 + p011 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p011) < 0) {
				++high2;
				high2 = high2 | 0;
			}
			p101 = p101 << 16;
			low2 = low2 + p101 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p101) < 0) {
				++high2;
				high2 = high2 | 0;
			}
			high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,digit_high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,digit_low) | 0) | 0;
			var b_high1 = high2;
			var b_low1 = low2;
			var high3 = current.high + b_high1 | 0;
			var low3 = current.low + b_low1 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,current.low) < 0) {
				++high3;
				high3 = high3 | 0;
			}
			current = new haxe__$Int64__$_$_$Int64(high3,low3);
			if(current.high < 0) {
				throw new thx_Error("Int64 parsing error: Overflow",null,{ fileName : "thx/Int64s.hx", lineNumber : 80, className : "thx.Int64s", methodName : "parse"});
			}
		}
		var b = thx_Int64s.ten;
		var al2 = multiplier.low & 65535;
		var ah2 = multiplier.low >>> 16;
		var bl2 = b.low & 65535;
		var bh2 = b.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low4 = p002;
		var high4 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low4 = p002 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,p012) < 0) {
			++high4;
			high4 = high4 | 0;
		}
		p102 = p102 << 16;
		low4 = low4 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,p102) < 0) {
			++high4;
			high4 = high4 | 0;
		}
		high4 = high4 + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,b.low) | 0) | 0;
		multiplier = new haxe__$Int64__$_$_$Int64(high4,low4);
	}
	return current;
};
thx_Int64s.toInt64 = function(s) {
	return thx_Int64s.parse(s);
};
thx_Int64s.divRound = function(num,div) {
	var b_high = 0;
	var b_low = 0;
	if(num.high == b_high && num.low == b_low) {
		return thx_Int64s.zero;
	}
	var b_high1 = 0;
	var b_low1 = 0;
	if(div.high == b_high1 && div.low == b_low1) {
		throw new thx_Error("Int64s.divRound division by zero",null,{ fileName : "thx/Int64s.hx", lineNumber : 97, className : "thx.Int64s", methodName : "divRound"});
	}
	if(num.high < 0 == div.high < 0) {
		var b = haxe__$Int64_Int64_$Impl_$.divMod(div,thx_Int64s.two).quotient;
		var high = num.high + b.high | 0;
		var low = num.low + b.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,num.low) < 0) {
			++high;
			high = high | 0;
		}
		return haxe__$Int64_Int64_$Impl_$.divMod(new haxe__$Int64__$_$_$Int64(high,low),div).quotient;
	} else if(div.high < 0) {
		var high1 = ~num.high;
		var low1 = ~num.low + 1 | 0;
		if(low1 == 0) {
			++high1;
			high1 = high1 | 0;
		}
		var a_high = high1;
		var b1 = thx_Int64s.one;
		var high2 = a_high + b1.high | 0;
		var low2 = low1 + b1.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,low1) < 0) {
			++high2;
			high2 = high2 | 0;
		}
		var a_high1 = high2;
		var b2 = haxe__$Int64_Int64_$Impl_$.divMod(div,thx_Int64s.two).quotient;
		var high3 = a_high1 + b2.high | 0;
		var low3 = low2 + b2.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,low2) < 0) {
			++high3;
			high3 = high3 | 0;
		}
		var high4 = ~div.high;
		var low4 = ~div.low + 1 | 0;
		if(low4 == 0) {
			++high4;
			high4 = high4 | 0;
		}
		return haxe__$Int64_Int64_$Impl_$.divMod(new haxe__$Int64__$_$_$Int64(high3,low3),new haxe__$Int64__$_$_$Int64(high4,low4)).quotient;
	} else {
		var b3 = thx_Int64s.one;
		var high5 = num.high + b3.high | 0;
		var low5 = num.low + b3.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,num.low) < 0) {
			++high5;
			high5 = high5 | 0;
		}
		var a_high2 = high5;
		var b4 = haxe__$Int64_Int64_$Impl_$.divMod(div,thx_Int64s.two).quotient;
		var high6 = a_high2 - b4.high | 0;
		var low6 = low5 - b4.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,b4.low) < 0) {
			--high6;
			high6 = high6 | 0;
		}
		return haxe__$Int64_Int64_$Impl_$.divMod(new haxe__$Int64__$_$_$Int64(high6,low6),div).quotient;
	}
};
thx_Int64s.divFloor = function(num,div) {
	var b_high = 0;
	var b_low = 0;
	if(num.high == b_high && num.low == b_low) {
		return thx_Int64s.zero;
	}
	var b_high1 = 0;
	var b_low1 = 0;
	if(div.high == b_high1 && div.low == b_low1) {
		throw new thx_Error("Int64s.divFloor division by zero",null,{ fileName : "thx/Int64s.hx", lineNumber : 111, className : "thx.Int64s", methodName : "divFloor"});
	}
	var a = haxe__$Int64_Int64_$Impl_$.divMod(num,div).quotient;
	var x = num.high < 0 != div.high < 0 ? 1 : 0;
	var b_high2 = x >> 31;
	var b_low2 = x;
	var high = a.high - b_high2 | 0;
	var low = a.low - b_low2 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b_low2) < 0) {
		--high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
thx_Int64s.divCeil = function(num,div) {
	var b_high = 0;
	var b_low = 0;
	if(num.high == b_high && num.low == b_low) {
		return thx_Int64s.zero;
	}
	var b_high1 = 0;
	var b_low1 = 0;
	if(div.high == b_high1 && div.low == b_low1) {
		throw new thx_Error("Int64s.divCeil division by zero",null,{ fileName : "thx/Int64s.hx", lineNumber : 119, className : "thx.Int64s", methodName : "divCeil"});
	}
	var r = haxe__$Int64_Int64_$Impl_$.divMod(num,div);
	var q = r.quotient;
	var m = r.modulus;
	var tmp;
	if(num.high < 0 == div.high < 0) {
		var b_high2 = 0;
		var b_low2 = 0;
		tmp = !(m.high == b_high2 && m.low == b_low2);
	} else {
		tmp = false;
	}
	if(tmp) {
		var b = thx_Int64s.one;
		var high = q.high + b.high | 0;
		var low = q.low + b.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,q.low) < 0) {
			++high;
			high = high | 0;
		}
		return new haxe__$Int64__$_$_$Int64(high,low);
	} else {
		return q;
	}
};
thx_Int64s.toFloat = function(i) {
	var isNegative = false;
	var b_high = 0;
	var b_low = 0;
	var v = i.high - b_high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(i.low,b_low);
	if((i.high < 0 ? -1 : v) < 0) {
		var b = thx_Int64s.min;
		var v1 = i.high - b.high | 0;
		v1 = v1 != 0 ? v1 : haxe__$Int32_Int32_$Impl_$.ucompare(i.low,b.low);
		if((i.high < 0 ? b.high < 0 ? v1 : -1 : b.high >= 0 ? v1 : 1) < 0) {
			return -9223372036854775808.0;
		}
		isNegative = true;
		var high = ~i.high;
		var low = ~i.low + 1 | 0;
		if(low == 0) {
			++high;
			high = high | 0;
		}
		i = new haxe__$Int64__$_$_$Int64(high,low);
	}
	var multiplier = 1.0;
	var ret = 0.0;
	var _g = 0;
	while(_g < 64) {
		++_g;
		var b1 = thx_Int64s.one;
		var b2 = thx_Int64s.zero;
		if((i.high & b1.high) != b2.high || (i.low & b1.low) != b2.low) {
			ret += multiplier;
		}
		multiplier *= 2.0;
		var b3 = 1;
		b3 = 1;
		i = new haxe__$Int64__$_$_$Int64(i.high >> 1,i.high << 31 | i.low >>> 1);
	}
	return (isNegative ? -1 : 1) * ret;
};
thx_Int64s.fromFloat = function(f) {
	if(isNaN(f) || !isFinite(f)) {
		throw new thx_Error("Conversion to Int64 failed. Number is NaN or Infinite",null,{ fileName : "thx/Int64s.hx", lineNumber : 162, className : "thx.Int64s", methodName : "fromFloat"});
	}
	var noFractions = f - f % 1;
	if(noFractions > 9007199254740991.0) {
		throw new thx_Error("Conversion to Int64 failed. Conversion overflow",null,{ fileName : "thx/Int64s.hx", lineNumber : 168, className : "thx.Int64s", methodName : "fromFloat"});
	}
	if(noFractions < -9007199254740991.0) {
		throw new thx_Error("Conversion to Int64 failed. Conversion underflow",null,{ fileName : "thx/Int64s.hx", lineNumber : 170, className : "thx.Int64s", methodName : "fromFloat"});
	}
	var result = thx_Int64s.zero;
	var neg = noFractions < 0.0;
	var rest = neg ? -noFractions : noFractions;
	var i = 0;
	var curr;
	while(rest >= 1) {
		curr = rest % 2;
		rest /= 2;
		if(curr >= 1) {
			var a_high = 0;
			var a_low = 1;
			var b = i;
			b &= 63;
			var b1 = b == 0 ? new haxe__$Int64__$_$_$Int64(a_high,a_low) : b < 32 ? new haxe__$Int64__$_$_$Int64(a_high << b | a_low >>> 32 - b,a_low << b) : new haxe__$Int64__$_$_$Int64(a_low << b - 32,0);
			var high = result.high + b1.high | 0;
			var low = result.low + b1.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,result.low) < 0) {
				++high;
				high = high | 0;
			}
			result = new haxe__$Int64__$_$_$Int64(high,low);
		}
		++i;
	}
	if(neg) {
		var high1 = ~result.high;
		var low1 = ~result.low + 1 | 0;
		if(low1 == 0) {
			++high1;
			high1 = high1 | 0;
		}
		return new haxe__$Int64__$_$_$Int64(high1,low1);
	} else {
		return result;
	}
};
var thx_Ints = function() { };
thx_Ints.__name__ = "thx.Ints";
thx_Ints.abs = function(v) {
	if(v < 0) {
		return -v;
	} else {
		return v;
	}
};
thx_Ints.canParse = function(s) {
	return thx_Ints.pattern_parse.match(s);
};
thx_Ints.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Ints.clampSym = function(v,max) {
	var min = -max;
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Ints.compare = function(a,b) {
	return a - b;
};
thx_Ints.gcd = function(m,n) {
	m = m < 0 ? -m : m;
	n = n < 0 ? -n : n;
	var t;
	while(true) {
		if(n == 0) {
			return m;
		}
		t = m;
		m = n;
		n = t % m;
	}
};
thx_Ints.interpolate = function(f,a,b) {
	return Math.round(a + (b - a) * f);
};
thx_Ints.isEven = function(v) {
	return v % 2 == 0;
};
thx_Ints.isOdd = function(v) {
	return v % 2 != 0;
};
thx_Ints.lpad = function(v,pad,len) {
	if(pad == null) {
		pad = "0";
	}
	var neg = false;
	if(v < 0) {
		neg = true;
		v = -v;
	}
	return (neg ? "-" : "") + StringTools.lpad("" + v,pad,len);
};
thx_Ints.lcm = function(m,n) {
	m = m < 0 ? -m : m;
	n = n < 0 ? -n : n;
	if(n == 0) {
		return m;
	}
	return m * (n / thx_Ints.gcd(m,n) | 0);
};
thx_Ints.rpad = function(v,pad,len) {
	if(pad == null) {
		pad = "0";
	}
	return StringTools.rpad("" + v,pad,len);
};
thx_Ints.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
thx_Ints.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
thx_Ints.parse = function(s,base) {
	if(null == base) {
		if(s.substring(0,2) == "0x") {
			base = 16;
		} else {
			base = 10;
		}
	}
	var v = parseInt(s,base);
	if(isNaN(v)) {
		return null;
	} else {
		return v;
	}
};
thx_Ints.random = function(min,max) {
	if(min == null) {
		min = 0;
	}
	return Std.random(max - min + 1) + min;
};
thx_Ints.range = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	if(null == stop) {
		stop = start;
		start = 0;
	}
	if((stop - start) / step == Infinity) {
		throw new js__$Boot_HaxeError("infinite range");
	}
	var range = [];
	var i = -1;
	var j;
	if(step < 0) {
		while(true) {
			j = start + step * ++i;
			if(!(j > stop)) {
				break;
			}
			range.push(j);
		}
	} else {
		while(true) {
			j = start + step * ++i;
			if(!(j < stop)) {
				break;
			}
			range.push(j);
		}
	}
	return range;
};
thx_Ints.rangeIter = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	return new thx_RangeIterator(start,stop,step);
};
thx_Ints.toString = function(value,base) {
	return value.toString(base);
};
thx_Ints.toBase = function(value,base) {
	return value.toString(base);
};
thx_Ints.toBool = function(v) {
	return v != 0;
};
thx_Ints.toInt = function(s,base) {
	return thx_Ints.parse(s,base);
};
thx_Ints.sign = function(value) {
	if(value < 0) {
		return -1;
	} else {
		return 1;
	}
};
thx_Ints.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var thx_RangeIterator = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	this.current = start;
	this.stop = stop;
	this.step = step;
};
thx_RangeIterator.__name__ = "thx.RangeIterator";
thx_RangeIterator.prototype = {
	current: null
	,stop: null
	,step: null
	,hasNext: function() {
		if(!(this.stop == null || this.step >= 0 && this.current < this.stop)) {
			if(this.step < 0) {
				return this.current > this.stop;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,next: function() {
		var result = this.current;
		this.current += this.step;
		return result;
	}
	,__class__: thx_RangeIterator
};
var thx_Iterables = function() { };
thx_Iterables.__name__ = "thx.Iterables";
thx_Iterables.all = function(it,predicate) {
	return thx_Iterators.all($getIterator(it),predicate);
};
thx_Iterables.any = function(it,predicate) {
	return thx_Iterators.any($getIterator(it),predicate);
};
thx_Iterables.eachPair = function(it,handler) {
	thx_Iterators.eachPair($getIterator(it),handler);
	return;
};
thx_Iterables.equals = function(a,b,equality) {
	return thx_Iterators.equals($getIterator(a),$getIterator(b),equality);
};
thx_Iterables.filter = function(it,predicate) {
	return thx_Iterators.filter($getIterator(it),predicate);
};
thx_Iterables.find = function(it,predicate) {
	return thx_Iterators.find($getIterator(it),predicate);
};
thx_Iterables.findOption = function(it,predicate) {
	var value = thx_Iterators.find($getIterator(it),predicate);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterables.first = function(it) {
	return thx_Iterators.first($getIterator(it));
};
thx_Iterables.get = function(it,index) {
	return thx_Iterators.get($getIterator(it),index);
};
thx_Iterables.getOption = function(it,index) {
	var value = thx_Iterators.get($getIterator(it),index);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterables.last = function(it) {
	return thx_Iterators.last($getIterator(it));
};
thx_Iterables.hasElements = function(it) {
	return $getIterator(it).hasNext();
};
thx_Iterables.indexOf = function(it,element) {
	return thx_Iterators.indexOf($getIterator(it),element);
};
thx_Iterables.isEmpty = function(it) {
	return !$getIterator(it).hasNext();
};
thx_Iterables.isIterable = function(v) {
	var fields = Reflect.isObject(v) && null == js_Boot.getClass(v) ? Reflect.fields(v) : Type.getInstanceFields(js_Boot.getClass(v));
	if(!Lambda.has(fields,"iterator")) {
		return false;
	}
	return Reflect.isFunction(Reflect.field(v,"iterator"));
};
thx_Iterables.map = function(it,f) {
	return thx_Iterators.map($getIterator(it),f);
};
thx_Iterables.fmap = function(it,f) {
	return { iterator : function() {
		return thx_Iterators.fmap($getIterator(it),f);
	}};
};
thx_Iterables.mapi = function(it,f) {
	return thx_Iterators.mapi($getIterator(it),f);
};
thx_Iterables.fmapi = function(it,f) {
	return { iterator : function() {
		return thx_Iterators.fmapi($getIterator(it),f);
	}};
};
thx_Iterables.order = function(it,sort) {
	return thx_Iterators.order($getIterator(it),sort);
};
thx_Iterables.reduce = function(it,callback,initial) {
	return thx_Iterators.reduce($getIterator(it),callback,initial);
};
thx_Iterables.reducei = function(it,callback,initial) {
	return thx_Iterators.reducei($getIterator(it),callback,initial);
};
thx_Iterables.toArray = function(it) {
	return thx_Iterators.toArray($getIterator(it));
};
thx_Iterables.minBy = function(it,f,ord) {
	var found = haxe_ds_Option.None;
	var a = $getIterator(it);
	while(a.hasNext()) {
		var a1 = a.next();
		var a2 = [a1];
		found = thx_Options.any(found,(function(a3) {
			return function(a0) {
				var found1 = f(a0);
				var found2 = f(a3[0]);
				return ord(found1,found2) == thx_OrderingImpl.LT;
			};
		})(a2)) ? found : haxe_ds_Option.Some(a2[0]);
	}
	return found;
};
thx_Iterables.maxBy = function(it,f,ord) {
	return thx_Iterables.minBy(it,f,thx__$Ord_Ord_$Impl_$.inverse(ord));
};
thx_Iterables.min = function(it,ord) {
	return thx_Iterables.minBy(it,thx_Functions.identity,ord);
};
thx_Iterables.max = function(it,ord) {
	return thx_Iterables.minBy(it,thx_Functions.identity,thx__$Ord_Ord_$Impl_$.inverse(ord));
};
thx_Iterables.extremaBy = function(it,f,ord) {
	var found = haxe_ds_Option.None;
	var a = $getIterator(it);
	while(a.hasNext()) {
		var a1 = a.next();
		switch(found._hx_index) {
		case 0:
			var _g = found.v;
			if(ord(f(a1),f(_g._0)) == thx_OrderingImpl.LT) {
				var this1 = { _0 : a1, _1 : _g._1};
				found = haxe_ds_Option.Some(this1);
			} else if(ord(f(a1),f(_g._1)) == thx_OrderingImpl.GT) {
				var this2 = { _0 : _g._0, _1 : a1};
				found = haxe_ds_Option.Some(this2);
			} else {
				found = found;
			}
			break;
		case 1:
			var this3 = { _0 : a1, _1 : a1};
			found = haxe_ds_Option.Some(this3);
			break;
		default:
			found = found;
		}
	}
	return found;
};
thx_Iterables.extrema = function(it,ord) {
	return thx_Iterables.extremaBy(it,thx_Functions.identity,ord);
};
thx_Iterables.takeUntil = function(it,fn) {
	return thx_Iterators.takeUntil($getIterator(it),fn);
};
thx_Iterables.dropLeft = function(itr,n) {
	return { iterator : function() {
		var itr1 = $getIterator(itr);
		var count = n;
		while(count > 0) if(itr1.hasNext()) {
			itr1.next();
		}
		return { next : $bind(itr1,itr1.next), hasNext : $bind(itr1,itr1.hasNext)};
	}};
};
thx_Iterables.dropUntil = function(it,fn) {
	return thx_Iterators.dropUntil($getIterator(it),fn);
};
thx_Iterables.unionBy = function(a,b,eq) {
	var res = [];
	var e = $getIterator(a);
	while(e.hasNext()) {
		var e1 = e.next();
		res.push(e1);
	}
	var e2 = $getIterator(b);
	while(e2.hasNext()) {
		var e3 = e2.next();
		var e4 = [e3];
		if(!thx_Iterables.any(res,(function(e5) {
			return function(x) {
				return eq(x,e5[0]);
			};
		})(e4))) {
			res.push(e4[0]);
		}
	}
	return res;
};
thx_Iterables.differenceBy = function(a,b,eq) {
	var res = [];
	var e = $getIterator(a);
	while(e.hasNext()) {
		var e1 = e.next();
		var e2 = [e1];
		if(!thx_Iterables.any(b,(function(e3) {
			return function(x) {
				return eq(x,e3[0]);
			};
		})(e2))) {
			res.push(e2[0]);
		}
	}
	return res;
};
thx_Iterables.unzip = function(it) {
	return thx_Iterators.unzip($getIterator(it));
};
thx_Iterables.unzip3 = function(it) {
	return thx_Iterators.unzip3($getIterator(it));
};
thx_Iterables.unzip4 = function(it) {
	return thx_Iterators.unzip4($getIterator(it));
};
thx_Iterables.unzip5 = function(it) {
	return thx_Iterators.unzip5($getIterator(it));
};
thx_Iterables.zip = function(it1,it2) {
	return thx_Iterators.zip($getIterator(it1),$getIterator(it2));
};
thx_Iterables.zip3 = function(it1,it2,it3) {
	return thx_Iterators.zip3($getIterator(it1),$getIterator(it2),$getIterator(it3));
};
thx_Iterables.zip4 = function(it1,it2,it3,it4) {
	return thx_Iterators.zip4($getIterator(it1),$getIterator(it2),$getIterator(it3),$getIterator(it4));
};
thx_Iterables.zip5 = function(it1,it2,it3,it4,it5) {
	return thx_Iterators.zip5($getIterator(it1),$getIterator(it2),$getIterator(it3),$getIterator(it4),$getIterator(it5));
};
var thx_Iterators = function() { };
thx_Iterators.__name__ = "thx.Iterators";
thx_Iterators.all = function(it,predicate) {
	while(it.hasNext()) {
		var element = it.next();
		if(!predicate(element)) {
			return false;
		}
	}
	return true;
};
thx_Iterators.any = function(it,predicate) {
	while(it.hasNext()) {
		var element = it.next();
		if(predicate(element)) {
			return true;
		}
	}
	return false;
};
thx_Iterators.equals = function(a,b,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var an;
	var bn;
	while(true) {
		an = a.hasNext();
		bn = b.hasNext();
		if(!an && !bn) {
			return true;
		}
		if(!an || !bn) {
			return false;
		}
		if(!equality(a.next(),b.next())) {
			return false;
		}
	}
};
thx_Iterators.get = function(it,index) {
	var pos = 0;
	while(it.hasNext()) {
		var i = it.next();
		if(pos++ == index) {
			return i;
		}
	}
	return null;
};
thx_Iterators.getOption = function(it,index) {
	var value = thx_Iterators.get(it,index);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterators.eachPair = function(it,handler) {
	thx_Arrays.eachPair(thx_Iterators.toArray(it),handler);
};
thx_Iterators.filter = function(it,predicate) {
	return thx_Iterators.reduce(it,function(acc,element) {
		if(predicate(element)) {
			acc.push(element);
		}
		return acc;
	},[]);
};
thx_Iterators.find = function(it,f) {
	while(it.hasNext()) {
		var element = it.next();
		if(f(element)) {
			return element;
		}
	}
	return null;
};
thx_Iterators.findOption = function(it,f) {
	var value = thx_Iterators.find(it,f);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterators.first = function(it) {
	if(it.hasNext()) {
		return it.next();
	} else {
		return null;
	}
};
thx_Iterators.hasElements = function(it) {
	return it.hasNext();
};
thx_Iterators.indexOf = function(it,element) {
	var pos = 0;
	while(it.hasNext()) {
		var v = it.next();
		if(element == v) {
			return pos;
		}
		++pos;
	}
	return -1;
};
thx_Iterators.isEmpty = function(it) {
	return !it.hasNext();
};
thx_Iterators.isIterator = function(v) {
	var fields = Reflect.isObject(v) && null == js_Boot.getClass(v) ? Reflect.fields(v) : Type.getInstanceFields(js_Boot.getClass(v));
	if(!Lambda.has(fields,"next") || !Lambda.has(fields,"hasNext")) {
		return false;
	}
	if(Reflect.isFunction(Reflect.field(v,"next"))) {
		return Reflect.isFunction(Reflect.field(v,"hasNext"));
	} else {
		return false;
	}
};
thx_Iterators.last = function(it) {
	var buf = null;
	while(it.hasNext()) buf = it.next();
	return buf;
};
thx_Iterators.forEach = function(it,proc) {
	while(it.hasNext()) proc(it.next());
};
thx_Iterators.map = function(it,f) {
	var acc = [];
	while(it.hasNext()) {
		var v = it.next();
		acc.push(f(v));
	}
	return acc;
};
thx_Iterators.fmap = function(it,f) {
	return new thx_MapIterator(it,f);
};
thx_Iterators.mapi = function(it,f) {
	var acc = [];
	var i = 0;
	while(it.hasNext()) {
		var v = it.next();
		acc.push(f(v,i++));
	}
	return acc;
};
thx_Iterators.fmapi = function(it,f) {
	return new thx_MapIIterator(it,f);
};
thx_Iterators.order = function(it,sort) {
	var n = thx_Iterators.toArray(it);
	n.sort(sort);
	return n;
};
thx_Iterators.reduce = function(it,callback,initial) {
	var result = initial;
	while(it.hasNext()) result = callback(result,it.next());
	return result;
};
thx_Iterators.reducei = function(it,callback,initial) {
	thx_Iterators.mapi(it,function(v,i) {
		initial = callback(initial,v,i);
	});
	return initial;
};
thx_Iterators.foldLeft = function(it,zero,f) {
	return thx_Iterators.reduce(it,f,zero);
};
thx_Iterators.foldMap = function(it,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	};
	return thx_Iterators.foldLeft(thx_Iterators.fmap(it,f),thx__$Monoid_Monoid_$Impl_$.get_zero(m),tmp);
};
thx_Iterators.takeUntil = function(it,f) {
	var out = [];
	while(it.hasNext()) {
		var v = it.next();
		if(f(v)) {
			out.push(v);
		} else {
			break;
		}
	}
	return out;
};
thx_Iterators.dropUntil = function(it,f) {
	var done = false;
	var out = [];
	while(it.hasNext()) {
		var v = it.next();
		if(!done) {
			if(!f(v)) {
				done = true;
				out.push(v);
			}
		} else {
			out.push(v);
		}
	}
	return out;
};
thx_Iterators.toArray = function(it) {
	var elements = [];
	while(it.hasNext()) {
		var element = it.next();
		elements.push(element);
	}
	return elements;
};
thx_Iterators.unzip = function(it) {
	var a1 = [];
	var a2 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
	});
	var this1 = { _0 : a1, _1 : a2};
	return this1;
};
thx_Iterators.unzip3 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3};
	return this1;
};
thx_Iterators.unzip4 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4};
	return this1;
};
thx_Iterators.unzip5 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var a5 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		a5.push(t._4);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4, _4 : a5};
	return this1;
};
thx_Iterators.zip = function(it1,it2) {
	var array = [];
	while(it1.hasNext() && it2.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip3 = function(it1,it2,it3) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip4 = function(it1,it2,it3,it4) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext() && it4.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next(), _3 : it4.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip5 = function(it1,it2,it3,it4,it5) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext() && it4.hasNext() && it5.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next(), _3 : it4.next(), _4 : it5.next()};
		array.push(this1);
	}
	return array;
};
var thx_MapIterator = function(base,f) {
	this.base = base;
	this.f = f;
};
thx_MapIterator.__name__ = "thx.MapIterator";
thx_MapIterator.prototype = {
	base: null
	,f: null
	,next: function() {
		return this.f(this.base.next());
	}
	,hasNext: function() {
		return this.base.hasNext();
	}
	,__class__: thx_MapIterator
};
var thx_MapIIterator = function(base,f) {
	this.i = 0;
	this.base = base;
	this.f = f;
};
thx_MapIIterator.__name__ = "thx.MapIIterator";
thx_MapIIterator.prototype = {
	base: null
	,f: null
	,i: null
	,next: function() {
		var result = this.f(this.base.next(),this.i);
		this.i++;
		return result;
	}
	,hasNext: function() {
		return this.base.hasNext();
	}
	,__class__: thx_MapIIterator
};
var thx_Maps = function() { };
thx_Maps.__name__ = "thx.Maps";
thx_Maps.copyTo = function(src,dst) {
	var key = src.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		dst.set(key1,src.get(key1));
	}
	return dst;
};
thx_Maps.tuples = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		var this1 = { _0 : key, _1 : map.get(key)};
		return this1;
	});
};
thx_Maps.mapValues = function(map,f,acc) {
	return thx_Maps.reduce(map,function(m,t) {
		m.set(t._0,f(t._1));
		return m;
	},acc);
};
thx_Maps.reduce = function(map,f,acc) {
	return thx_Arrays.reduce(thx_Maps.tuples(map),f,acc);
};
thx_Maps.values = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		return map.get(key);
	});
};
thx_Maps.fromArray = function(array,toKey,toVal) {
	return thx_Arrays.reduce(array,function(acc,curr) {
		var key = toKey(curr);
		var value = toVal(curr);
		if(__map_reserved[key] != null) {
			acc.setReserved(key,value);
		} else {
			acc.h[key] = value;
		}
		return acc;
	},new haxe_ds_StringMap());
};
thx_Maps.foldLeftWithKeys = function(map,f,acc) {
	return thx_Iterators.reduce(map.keys(),function(acc1,k) {
		return f(acc1,k,map.get(k));
	},acc);
};
thx_Maps.getOption = function(map,key) {
	var value = map.get(key);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Maps.toObject = function(map) {
	return thx_Arrays.reduce(thx_Maps.tuples(map),function(o,t) {
		o[t._0] = t._1;
		return o;
	},{ });
};
thx_Maps.getAlt = function(map,key,alt) {
	var v = map.get(key);
	if(null == v) {
		return alt;
	} else {
		return v;
	}
};
thx_Maps.getAltSet = function(map,key,alt) {
	var v = map.get(key);
	if(v != null) {
		return v;
	} else {
		map.set(key,alt);
		return alt;
	}
};
thx_Maps.isEmpty = function(map) {
	return !map.iterator().hasNext();
};
thx_Maps.isMap = function(v) {
	return js_Boot.__implements(v,haxe_IMap);
};
thx_Maps.string = function(m) {
	var _this = thx_Maps.tuples(m);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var t = _this[i];
		result[i] = thx_Dynamics.string(t._0) + " => " + thx_Dynamics.string(t._1);
	}
	return "[" + result.join(", ") + "]";
};
thx_Maps.merge = function(dest,sources) {
	return thx_Arrays.reduce(sources,function(result,source) {
		return thx_Iterators.reduce(source.keys(),function(result1,key) {
			result1.set(key,source.get(key));
			return result1;
		},result);
	},dest);
};
var thx__$Monoid_Monoid_$Impl_$ = {};
thx__$Monoid_Monoid_$Impl_$.__name__ = "thx._Monoid.Monoid_Impl_";
thx__$Monoid_Monoid_$Impl_$.__properties__ = {get_zero:"get_zero",get_semigroup:"get_semigroup"};
thx__$Monoid_Monoid_$Impl_$.get_semigroup = function(this1) {
	return this1.append;
};
thx__$Monoid_Monoid_$Impl_$.get_zero = function(this1) {
	return this1.zero;
};
thx__$Monoid_Monoid_$Impl_$.append = function(this1,a0,a1) {
	return this1.append(a0,a1);
};
var thx__$Nel_Nel_$Impl_$ = {};
thx__$Nel_Nel_$Impl_$.__name__ = "thx._Nel.Nel_Impl_";
thx__$Nel_Nel_$Impl_$.nel = function(hd,tl) {
	var _g = thx__$Nel_Nel_$Impl_$.fromArray(tl);
	switch(_g._hx_index) {
	case 0:
		return thx__$Nel_Nel_$Impl_$.cons(hd,_g.v);
	case 1:
		return thx__$Nel_Nel_$Impl_$.pure(hd);
	}
};
thx__$Nel_Nel_$Impl_$.pure = function(a) {
	return thx_NonEmptyList.Single(a);
};
thx__$Nel_Nel_$Impl_$.cons = function(a,nl) {
	return thx_NonEmptyList.ConsNel(a,nl);
};
thx__$Nel_Nel_$Impl_$.fromArray = function(arr) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var res = thx_NonEmptyList.Single(arr[arr.length - 1]);
		var i = thx_Ints.rangeIter(arr.length - 2,-1,-1);
		while(i.hasNext()) {
			var i1 = i.next();
			res = thx_NonEmptyList.ConsNel(arr[i1],res);
		}
		return haxe_ds_Option.Some(res);
	}
};
thx__$Nel_Nel_$Impl_$.map = function(this1,f) {
	var fb = f;
	return thx__$Nel_Nel_$Impl_$.flatMap(this1,function(v) {
		return thx__$Nel_Nel_$Impl_$.pure(fb(v));
	});
};
thx__$Nel_Nel_$Impl_$.flatMap = function(this1,f) {
	switch(this1._hx_index) {
	case 0:
		return f(this1.x);
	case 1:
		return thx__$Nel_Nel_$Impl_$.append(f(this1.x),thx__$Nel_Nel_$Impl_$.flatMap(this1.xs,f));
	}
};
thx__$Nel_Nel_$Impl_$.fold = function(this1,f) {
	switch(this1._hx_index) {
	case 0:
		return this1.x;
	case 1:
		return f(this1.x,thx__$Nel_Nel_$Impl_$.fold(this1.xs,f));
	}
};
thx__$Nel_Nel_$Impl_$.append = function(this1,nel) {
	switch(this1._hx_index) {
	case 0:
		return thx_NonEmptyList.ConsNel(this1.x,nel);
	case 1:
		return thx_NonEmptyList.ConsNel(this1.x,thx__$Nel_Nel_$Impl_$.append(this1.xs,nel));
	}
};
thx__$Nel_Nel_$Impl_$.concat = function(this1,xs) {
	var _g = thx__$Nel_Nel_$Impl_$.fromArray(xs);
	switch(_g._hx_index) {
	case 0:
		return thx__$Nel_Nel_$Impl_$.append(this1,_g.v);
	case 1:
		return this1;
	}
};
thx__$Nel_Nel_$Impl_$.head = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return this1.x;
	case 1:
		return this1.x;
	}
};
thx__$Nel_Nel_$Impl_$.tail = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return [];
	case 1:
		return thx__$Nel_Nel_$Impl_$.toArray(this1.xs);
	}
};
thx__$Nel_Nel_$Impl_$.init = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return [];
	case 1:
		return [this1.x].concat(thx__$Nel_Nel_$Impl_$.init(this1.xs));
	}
};
thx__$Nel_Nel_$Impl_$.last = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return this1.x;
	case 1:
		return thx__$Nel_Nel_$Impl_$.last(this1.xs);
	}
};
thx__$Nel_Nel_$Impl_$.push = function(this1,a) {
	return thx__$Nel_Nel_$Impl_$.append(this1,thx_NonEmptyList.Single(a));
};
thx__$Nel_Nel_$Impl_$.pop = function(this1) {
	var this2 = { _0 : thx__$Nel_Nel_$Impl_$.last(this1), _1 : thx__$Nel_Nel_$Impl_$.init(this1)};
	return this2;
};
thx__$Nel_Nel_$Impl_$.unshift = function(this1,a) {
	return thx_NonEmptyList.ConsNel(a,this1);
};
thx__$Nel_Nel_$Impl_$.shift = function(this1) {
	var this2 = { _0 : thx__$Nel_Nel_$Impl_$.head(this1), _1 : thx__$Nel_Nel_$Impl_$.tail(this1)};
	return this2;
};
thx__$Nel_Nel_$Impl_$.toArray = function(this1) {
	var go = null;
	go = function(acc,xs) {
		switch(xs._hx_index) {
		case 0:
			var x = xs.x;
			return thx_Arrays.append(acc,x);
		case 1:
			var xs1 = xs.xs;
			var x1 = xs.x;
			var go1 = thx_Arrays.append(acc,x1);
			return go(go1,xs1);
		}
	};
	return go([],this1);
};
thx__$Nel_Nel_$Impl_$.intersperse = function(this1,a) {
	switch(this1._hx_index) {
	case 0:
		return thx_NonEmptyList.Single(this1.x);
	case 1:
		return thx_NonEmptyList.ConsNel(this1.x,thx_NonEmptyList.ConsNel(a,thx__$Nel_Nel_$Impl_$.intersperse(this1.xs,a)));
	}
};
thx__$Nel_Nel_$Impl_$.semigroup = function() {
	return function(nl,nr) {
		return thx__$Nel_Nel_$Impl_$.append(nl,nr);
	};
};
var thx_NonEmptyList = $hxEnums["thx.NonEmptyList"] = { __ename__ : "thx.NonEmptyList", __constructs__ : ["Single","ConsNel"]
	,Single: ($_=function(x) { return {_hx_index:0,x:x,__enum__:"thx.NonEmptyList",toString:$estr}; },$_.__params__ = ["x"],$_)
	,ConsNel: ($_=function(x,xs) { return {_hx_index:1,x:x,xs:xs,__enum__:"thx.NonEmptyList",toString:$estr}; },$_.__params__ = ["x","xs"],$_)
};
var thx_Nil = $hxEnums["thx.Nil"] = { __ename__ : "thx.Nil", __constructs__ : ["nil"]
	,nil: {_hx_index:0,__enum__:"thx.Nil",toString:$estr}
};
var thx_Objects = function() { };
thx_Objects.__name__ = "thx.Objects";
thx_Objects.compare = function(a,b) {
	var fields = Reflect.fields(a);
	var v = thx_Arrays.compare(fields,Reflect.fields(b));
	if(v != 0) {
		return v;
	}
	var _g = 0;
	while(_g < fields.length) {
		var field = fields[_g];
		++_g;
		v = thx_Dynamics.compare(Reflect.field(a,field),Reflect.field(b,field));
		if(v != 0) {
			return v;
		}
	}
	return 0;
};
thx_Objects.isEmpty = function(o) {
	return Reflect.fields(o).length == 0;
};
thx_Objects.exists = function(o,name) {
	return Object.prototype.hasOwnProperty.call(o,name);
};
thx_Objects.fields = function(o) {
	return Reflect.fields(o);
};
thx_Objects.deflate = function(o,flattenArrays) {
	if(flattenArrays == null) {
		flattenArrays = true;
	}
	var f = null;
	f = function(v) {
		if(((v) instanceof Array) && v.__enum__ == null) {
			if(flattenArrays) {
				if(v.length == 0) {
					return thx_Either.Left([]);
				} else {
					var a = v;
					return thx_Either.Right(thx_Arrays.reducei(a,function(map,value,i) {
						var _g = f(value);
						switch(_g._hx_index) {
						case 0:
							var _g1 = _g.value;
							var key = "" + i;
							if(__map_reserved[key] != null) {
								map.setReserved(key,_g1);
							} else {
								map.h[key] = _g1;
							}
							break;
						case 1:
							var _g2 = _g.value;
							var k = _g2.keys();
							while(k.hasNext()) {
								var k1 = k.next();
								var value1 = __map_reserved[k1] != null ? _g2.getReserved(k1) : _g2.h[k1];
								var key1 = "" + i + "." + k1;
								if(__map_reserved[key1] != null) {
									map.setReserved(key1,value1);
								} else {
									map.h[key1] = value1;
								}
							}
							break;
						}
						return map;
					},new haxe_ds_StringMap()));
				}
			} else {
				return thx_Either.Left(v);
			}
		} else if(Reflect.isObject(v) && null == js_Boot.getClass(v)) {
			return thx_Either.Right(thx_Arrays.reduce(Reflect.fields(v),function(map1,key2) {
				var _g3 = f(Reflect.field(v,key2));
				switch(_g3._hx_index) {
				case 0:
					var _g11 = _g3.value;
					var key3 = "" + key2;
					if(__map_reserved[key3] != null) {
						map1.setReserved(key3,_g11);
					} else {
						map1.h[key3] = _g11;
					}
					break;
				case 1:
					var _g21 = _g3.value;
					if(!new haxe_ds__$StringMap_StringMapIterator(_g21,_g21.arrayKeys()).hasNext()) {
						var key4 = "" + key2;
						var value2 = { };
						if(__map_reserved[key4] != null) {
							map1.setReserved(key4,value2);
						} else {
							map1.h[key4] = value2;
						}
					} else {
						var k2 = _g21.keys();
						while(k2.hasNext()) {
							var k3 = k2.next();
							var value3 = __map_reserved[k3] != null ? _g21.getReserved(k3) : _g21.h[k3];
							var key5 = "" + key2 + "." + k3;
							if(__map_reserved[key5] != null) {
								map1.setReserved(key5,value3);
							} else {
								map1.h[key5] = value3;
							}
						}
					}
					break;
				}
				return map1;
			},new haxe_ds_StringMap()));
		} else {
			return thx_Either.Left(v);
		}
	};
	var _g4 = f(o);
	switch(_g4._hx_index) {
	case 0:
		var v1 = _g4.value;
		return v1;
	case 1:
		return thx_Maps.toObject(_g4.value);
	}
};
thx_Objects.inflate = function(o) {
	return thx_Arrays.reduce(Reflect.fields(o),function(acc,field) {
		return thx_Objects.setPath(acc,field,Reflect.field(o,field));
	},{ });
};
thx_Objects.combine = function(first,second) {
	return thx_Objects.shallowCombine(first,second);
};
thx_Objects.shallowCombine = function(first,second) {
	var to = { };
	var _g = 0;
	var _g1 = Reflect.fields(first);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		to[field] = Reflect.field(first,field);
	}
	var _g2 = 0;
	var _g3 = Reflect.fields(second);
	while(_g2 < _g3.length) {
		var field1 = _g3[_g2];
		++_g2;
		to[field1] = Reflect.field(second,field1);
	}
	return to;
};
thx_Objects.deepCombine = function(first,second) {
	return thx_Objects.copyTo(second,first,true);
};
thx_Objects.assign = function(to,from,replacef) {
	if(null == replacef) {
		replacef = function(field,oldv,newv) {
			return newv;
		};
	}
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var field1 = _g1[_g];
		++_g;
		var newv1 = Reflect.field(from,field1);
		if(Object.prototype.hasOwnProperty.call(to,field1)) {
			to[field1] = replacef(field1,Reflect.field(to,field1),newv1);
		} else {
			to[field1] = newv1;
		}
	}
	return to;
};
thx_Objects.copyTo = function(src,dst,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	var _g = 0;
	var _g1 = Reflect.fields(src);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		var sv = thx_Dynamics.clone(Reflect.field(src,field),cloneInstances);
		var dv = Reflect.field(dst,field);
		var tmp;
		var v = sv;
		if(Reflect.isObject(v) && null == js_Boot.getClass(v)) {
			var v1 = dv;
			tmp = Reflect.isObject(v1) && null == js_Boot.getClass(v1);
		} else {
			tmp = false;
		}
		if(tmp) {
			thx_Objects.copyTo(sv,dv);
		} else {
			dst[field] = sv;
		}
	}
	return dst;
};
thx_Objects.clone = function(src,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	return thx_Dynamics.clone(src,cloneInstances);
};
thx_Objects.toMap = function(o) {
	return thx_Arrays.reduce(thx_Objects.tuples(o),function(map,t) {
		var key = t._0;
		var value = t._1;
		if(__map_reserved[key] != null) {
			map.setReserved(key,value);
		} else {
			map.h[key] = value;
		}
		return map;
	},new haxe_ds_StringMap());
};
thx_Objects.size = function(o) {
	return Reflect.fields(o).length;
};
thx_Objects.string = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var key = _this[i];
		var v = Reflect.field(o,key);
		var s = typeof(v) == "string" ? thx_Strings.quote(v) : thx_Dynamics.string(v);
		result[i] = "" + key + " : " + s;
	}
	return "{" + result.join(", ") + "}";
};
thx_Objects.stringImpl = function(o,cache) {
};
thx_Objects.values = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = Reflect.field(o,_this[i]);
	}
	return result;
};
thx_Objects.tuples = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var key = _this[i];
		var this1 = { _0 : key, _1 : Reflect.field(o,key)};
		result[i] = this1;
	}
	return result;
};
thx_Objects.hasPath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var value = current;
			var arr = ((value) instanceof Array) ? value : null;
			if(null == arr || arr.length <= index) {
				return false;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return false;
		}
	}
	return true;
};
thx_Objects.hasPathValue = function(o,path) {
	return thx_Objects.getPath(o,path) != null;
};
thx_Objects.getPath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(current == null) {
			return null;
		} else if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var value = current;
			var arr = ((value) instanceof Array) ? value : null;
			if(null == arr) {
				return null;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return null;
		}
	}
	return current;
};
thx_Objects.getPathOption = function(o,path) {
	var value = thx_Objects.getPath(o,path);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Objects.parsePath = function(o,path,parse) {
	var this1 = thx_Options.toSuccessNel(thx_Objects.getPathOption(o,path),"Object does not contain path " + path);
	switch(this1._hx_index) {
	case 0:
		return thx_Either.Left(this1.value);
	case 1:
		return parse(this1.value);
	}
};
thx_Objects.getPathOr = function(o,path,alt) {
	return thx_Options.getOrElse(thx_Objects.getPathOption(o,path),alt);
};
thx_Objects.setPath = function(o,path,val) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	var _g1 = paths.length - 1;
	while(_g < _g1) {
		var i = _g++;
		var currentPath = paths[i];
		var nextPath = paths[i + 1];
		if(thx_Strings.DIGITS.match(currentPath) || currentPath == "*") {
			var index = currentPath == "*" ? current.length : Std.parseInt(currentPath);
			if(current[index] == null) {
				if(thx_Strings.DIGITS.match(nextPath) || nextPath == "*") {
					current[index] = [];
				} else {
					current[index] = { };
				}
			}
			current = current[index];
		} else {
			if(!Object.prototype.hasOwnProperty.call(current,currentPath)) {
				if(thx_Strings.DIGITS.match(nextPath) || nextPath == "*") {
					current[currentPath] = [];
				} else {
					current[currentPath] = { };
				}
			}
			current = Reflect.field(current,currentPath);
		}
	}
	var p = paths[paths.length - 1];
	if(thx_Strings.DIGITS.match(p)) {
		var index1 = Std.parseInt(p);
		current[index1] = val;
	} else if(p == "*") {
		current.push(val);
	} else {
		current[p] = val;
	}
	return o;
};
thx_Objects.removePath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var target = paths.pop();
	try {
		var sub = thx_Arrays.reduce(paths,function(existing,nextPath) {
			if(nextPath == "*") {
				return existing.pop();
			} else if(thx_Strings.DIGITS.match(nextPath)) {
				var index = Std.parseInt(nextPath);
				return existing[index];
			} else {
				return Reflect.field(existing,nextPath);
			}
		},o);
		if(null != sub) {
			Reflect.deleteField(sub,target);
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		((e) instanceof js__$Boot_HaxeError);
	}
	return o;
};
thx_Objects.normalizePath = function(path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	return path.replace(_this_r,".$1");
};
var thx_Options = function() { };
thx_Options.__name__ = "thx.Options";
thx_Options.ofValue = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.maybe = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.equals = function(a,b,eq) {
	switch(a._hx_index) {
	case 0:
		if(b._hx_index == 0) {
			if(null == eq) {
				eq = function(a1,b1) {
					return a1 == b1;
				};
			}
			return eq(a.v,b.v);
		} else {
			return false;
		}
		break;
	case 1:
		if(b._hx_index == 1) {
			return true;
		} else {
			return false;
		}
		break;
	}
};
thx_Options.equalsValue = function(a,b,eq) {
	return thx_Options.equals(a,null == b ? haxe_ds_Option.None : haxe_ds_Option.Some(b),eq);
};
thx_Options.map = function(option,callback) {
	switch(option._hx_index) {
	case 0:
		return haxe_ds_Option.Some(callback(option.v));
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.ap = function(option,fopt) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return thx_Options.map(fopt,function(f) {
			return f(v);
		});
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.flatMap = function(option,callback) {
	switch(option._hx_index) {
	case 0:
		return callback(option.v);
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.join = function(option) {
	switch(option._hx_index) {
	case 0:
		return option.v;
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.cata = function(option,ifNone,f) {
	switch(option._hx_index) {
	case 0:
		return f(option.v);
	case 1:
		return ifNone;
	}
};
thx_Options.cataf = function(option,ifNone,f) {
	switch(option._hx_index) {
	case 0:
		return f(option.v);
	case 1:
		return ifNone();
	}
};
thx_Options.foldLeft = function(option,b,f) {
	switch(option._hx_index) {
	case 0:
		return f(b,option.v);
	case 1:
		return b;
	}
};
thx_Options.foldLeftf = function(option,b,f) {
	switch(option._hx_index) {
	case 0:
		return f(b(),option.v);
	case 1:
		return b();
	}
};
thx_Options.foldMap = function(option,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	};
	return thx_Options.foldLeft(thx_Options.map(option,f),thx__$Monoid_Monoid_$Impl_$.get_zero(m),tmp);
};
thx_Options.filter = function(option,f) {
	if(option._hx_index == 0) {
		if(f(option.v)) {
			return option;
		} else {
			return haxe_ds_Option.None;
		}
	} else {
		return haxe_ds_Option.None;
	}
};
thx_Options.toArray = function(option) {
	switch(option._hx_index) {
	case 0:
		return [option.v];
	case 1:
		return [];
	}
};
thx_Options.toBool = function(option) {
	switch(option._hx_index) {
	case 0:
		return true;
	case 1:
		return false;
	}
};
thx_Options.isNone = function(option) {
	return !thx_Options.toBool(option);
};
thx_Options.toOption = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.get = function(option) {
	switch(option._hx_index) {
	case 0:
		return option.v;
	case 1:
		return null;
	}
};
thx_Options.getOrElse = function(option,alt) {
	switch(option._hx_index) {
	case 0:
		return option.v;
	case 1:
		return alt;
	}
};
thx_Options.getOrElseF = function(option,alt) {
	switch(option._hx_index) {
	case 0:
		return option.v;
	case 1:
		return alt();
	}
};
thx_Options.getOrThrow = function(option,err,posInfo) {
	if(null == err) {
		err = new thx_Error("Could not extract value from option",null,posInfo);
	}
	switch(option._hx_index) {
	case 0:
		return option.v;
	case 1:
		throw err;
	}
};
thx_Options.getOrFail = function(option,msg,posInfo) {
	return thx_Options.getOrThrow(option,new thx_Error(msg,null,posInfo),{ fileName : "thx/Options.hx", lineNumber : 208, className : "thx.Options", methodName : "getOrFail"});
};
thx_Options.orElse = function(option,alt) {
	switch(option._hx_index) {
	case 0:
		return option;
	case 1:
		return alt;
	}
};
thx_Options.orElseF = function(option,alt) {
	switch(option._hx_index) {
	case 0:
		return option;
	case 1:
		return alt();
	}
};
thx_Options.all = function(option,f) {
	switch(option._hx_index) {
	case 0:
		return f(option.v);
	case 1:
		return true;
	}
};
thx_Options.any = function(option,f) {
	switch(option._hx_index) {
	case 0:
		return f(option.v);
	case 1:
		return false;
	}
};
thx_Options.traverseValidation = function(option,f) {
	switch(option._hx_index) {
	case 0:
		return thx__$Validation_Validation_$Impl_$.map(f(option.v),function(v) {
			return haxe_ds_Option.Some(v);
		});
	case 1:
		return thx_Either.Right(haxe_ds_Option.None);
	}
};
thx_Options.toSuccess = function(option,error) {
	switch(option._hx_index) {
	case 0:
		return thx_Either.Right(option.v);
	case 1:
		return thx_Either.Left(error);
	}
};
thx_Options.toLazySuccess = function(option,error) {
	switch(option._hx_index) {
	case 0:
		return thx_Either.Right(option.v);
	case 1:
		return thx_Either.Left(error());
	}
};
thx_Options.toSuccessNel = function(option,error) {
	switch(option._hx_index) {
	case 0:
		return thx_Either.Right(option.v);
	case 1:
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error));
	}
};
thx_Options.toLazySuccessNel = function(option,error) {
	switch(option._hx_index) {
	case 0:
		return thx_Either.Right(option.v);
	case 1:
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error()));
	}
};
thx_Options.toFailure = function(error,value) {
	switch(error._hx_index) {
	case 0:
		return thx_Either.Left(error.v);
	case 1:
		return thx_Either.Right(value);
	}
};
thx_Options.toFailureNel = function(error,value) {
	switch(error._hx_index) {
	case 0:
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error.v));
	case 1:
		return thx_Either.Right(value);
	}
};
thx_Options.toRight = function(opt,left) {
	switch(opt._hx_index) {
	case 0:
		return thx_Either.Right(opt.v);
	case 1:
		return thx_Either.Left(left);
	}
};
thx_Options.toLazyRight = function(opt,left) {
	switch(opt._hx_index) {
	case 0:
		return thx_Either.Right(opt.v);
	case 1:
		return thx_Either.Left(left());
	}
};
thx_Options.toLeft = function(opt,right) {
	switch(opt._hx_index) {
	case 0:
		return thx_Either.Left(opt.v);
	case 1:
		return thx_Either.Right(right);
	}
};
thx_Options.each = function(o,f) {
	switch(o._hx_index) {
	case 0:
		f(o.v);
		return o;
	case 1:
		return o;
	}
};
thx_Options.alt2 = function(a,b) {
	if(a._hx_index == 1) {
		return b;
	} else {
		return a;
	}
};
thx_Options.alt3 = function(a,b,c) {
	var a1 = a._hx_index == 1 ? b : a;
	if(a1._hx_index == 1) {
		return c;
	} else {
		var l = a1;
		return l;
	}
};
thx_Options.alt4 = function(a,b,c,d) {
	var a1 = a._hx_index == 1 ? b : a;
	var a2;
	if(a1._hx_index == 1) {
		a2 = c;
	} else {
		var l = a1;
		a2 = l;
	}
	if(a2._hx_index == 1) {
		return d;
	} else {
		var l1 = a2;
		return l1;
	}
};
thx_Options.alts = function(as) {
	return thx_Arrays.reduce(as,thx_Options.alt2,haxe_ds_Option.None);
};
thx_Options.altsF = function(fs) {
	return thx_Arrays.reduce(fs,thx_Options.orElseF,haxe_ds_Option.None);
};
thx_Options.ap2 = function(f,v1,v2) {
	return thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(f)));
};
thx_Options.ap3 = function(f,v1,v2,v3) {
	var f1 = f;
	return thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	}))));
};
thx_Options.ap4 = function(f,v1,v2,v3,v4) {
	var f1 = f;
	var f2 = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f2(a1,b1,c1);
		};
	})))));
};
thx_Options.ap5 = function(f,v1,v2,v3,v4,v5) {
	var f1 = f;
	var f2 = function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	};
	var f3 = function(a1,b1,c1) {
		return function(d1) {
			return f2(a1,b1,c1,d1);
		};
	};
	return thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f3(a2,b2,c2);
		};
	}))))));
};
thx_Options.ap6 = function(f,v1,v2,v3,v4,v5,v6) {
	var f1 = f;
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f2(a1,b1,c1,d1,e1);
		};
	};
	var f4 = function(a2,b2,c2) {
		return function(d2) {
			return f3(a2,b2,c2,d2);
		};
	};
	return thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f4(a3,b3,c3);
		};
	})))))));
};
thx_Options.ap7 = function(f,v1,v2,v3,v4,v5,v6,v7) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f1(a,b,c,d,e,f0,g);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1) {
		return function(f01) {
			return f2(a1,b1,c1,d1,e1,f01);
		};
	};
	var f4 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f3(a2,b2,c2,d2,e2);
		};
	};
	var f5 = function(a3,b3,c3) {
		return function(d3) {
			return f4(a3,b3,c3,d3);
		};
	};
	return thx_Options.ap(v7,thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f5(a4,b4,c4);
		};
	}))))))));
};
thx_Options.ap8 = function(f,v1,v2,v3,v4,v5,v6,v7,v8) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f1(a,b,c,d,e,f0,g,h);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01) {
		return function(g1) {
			return f2(a1,b1,c1,d1,e1,f01,g1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2) {
		return function(f02) {
			return f3(a2,b2,c2,d2,e2,f02);
		};
	};
	var f5 = function(a3,b3,c3,d3) {
		return function(e3) {
			return f4(a3,b3,c3,d3,e3);
		};
	};
	var f6 = function(a4,b4,c4) {
		return function(d4) {
			return f5(a4,b4,c4,d4);
		};
	};
	return thx_Options.ap(v8,thx_Options.ap(v7,thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a5,b5) {
		return function(c5) {
			return f6(a5,b5,c5);
		};
	})))))))));
};
thx_Options.combine = function(a,b) {
	return thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(thx__$Tuple_Tuple2_$Impl_$.of)));
};
thx_Options.combine2 = function(a,b) {
	return thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(thx__$Tuple_Tuple2_$Impl_$.of)));
};
thx_Options.combine3 = function(a,b,c) {
	var f = thx__$Tuple_Tuple3_$Impl_$.of;
	return thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f(a1,b1,c1);
		};
	}))));
};
thx_Options.combine4 = function(a,b,c,d) {
	var f = thx__$Tuple_Tuple4_$Impl_$.of;
	var f1 = function(a1,b1,c1) {
		return function(d1) {
			return f(a1,b1,c1,d1);
		};
	};
	return thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f1(a2,b2,c2);
		};
	})))));
};
thx_Options.combine5 = function(a,b,c,d,e) {
	var f = thx__$Tuple_Tuple5_$Impl_$.of;
	var f1 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f(a1,b1,c1,d1,e1);
		};
	};
	var f2 = function(a2,b2,c2) {
		return function(d2) {
			return f1(a2,b2,c2,d2);
		};
	};
	return thx_Options.ap(e,thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f2(a3,b3,c3);
		};
	}))))));
};
thx_Options.combine6 = function(a,b,c,d,e,f) {
	var f1 = thx__$Tuple_Tuple6_$Impl_$.of;
	var f2 = function(a1,b1,c1,d1,e1) {
		return function(f0) {
			return f1(a1,b1,c1,d1,e1,f0);
		};
	};
	var f3 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f2(a2,b2,c2,d2,e2);
		};
	};
	var f4 = function(a3,b3,c3) {
		return function(d3) {
			return f3(a3,b3,c3,d3);
		};
	};
	return thx_Options.ap(f,thx_Options.ap(e,thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f4(a4,b4,c4);
		};
	})))))));
};
thx_Options.spread2 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1);
	});
};
thx_Options.spread = function(v,f) {
	var f1 = f;
	return thx_Options.map(v,function(t) {
		return f1(t._0,t._1);
	});
};
thx_Options.spread3 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2);
	});
};
thx_Options.spread4 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3);
	});
};
thx_Options.spread5 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3,t._4);
	});
};
thx_Options.spread6 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3,t._4,t._5);
	});
};
var thx_Orderings = function() { };
thx_Orderings.__name__ = "thx.Orderings";
thx_Orderings.negate = function(o) {
	switch(o._hx_index) {
	case 0:
		return thx_OrderingImpl.GT;
	case 1:
		return thx_OrderingImpl.LT;
	case 2:
		return thx_OrderingImpl.EQ;
	}
};
var thx__$ReadonlyArray_ReadonlyArray_$Impl_$ = {};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.__name__ = "thx._ReadonlyArray.ReadonlyArray_Impl_";
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.__properties__ = {get_length:"get_length"};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.empty = function() {
	return [];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.flatten = function(array) {
	return Array.prototype.concat.apply([],array);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var i = _g++;
		if(eq(el,this1[i])) {
			return i;
		}
	}
	return -1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.lastIndexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var len = this1.length;
	var _g = 0;
	while(_g < len) {
		var i = _g++;
		if(eq(el,this1[len - i - 1])) {
			return i;
		}
	}
	return -1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.get_length = function(this1) {
	return this1.length;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.get = function(this1,i) {
	return this1[i];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.head = function(this1) {
	return this1[0];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.tail = function(this1) {
	return this1.slice(1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reduce = function(this1,f,initial) {
	var _g = 0;
	while(_g < this1.length) {
		var v = this1[_g];
		++_g;
		initial = f(initial,v);
	}
	return initial;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reducei = function(this1,f,initial) {
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var i = _g++;
		initial = f(initial,this1[i],i);
	}
	return initial;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reverse = function(this1) {
	var arr = this1.slice();
	arr.reverse();
	return arr;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.toArray = function(this1) {
	return this1.slice();
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.unsafe = function(this1) {
	return this1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.concat = function(this1,that) {
	return this1.concat(that);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertAt = function(this1,pos,el) {
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertAfter = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	if(pos < 0) {
		pos = this1.length - 1;
	}
	var pos1 = pos + 1;
	return this1.slice(0,pos1).concat([el]).concat(this1.slice(pos1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertBefore = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.replace = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	if(pos < 0) {
		throw new thx_Error("unable to find reference element",null,{ fileName : "thx/ReadonlyArray.hx", lineNumber : 94, className : "thx._ReadonlyArray.ReadonlyArray_Impl_", methodName : "replace"});
	}
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.replaceAt = function(this1,pos,el) {
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.remove = function(this1,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,el,eq);
	return this1.slice(0,pos).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.removeAt = function(this1,pos) {
	return this1.slice(0,pos).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.prepend = function(this1,el) {
	return [el].concat(this1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.append = function(this1,el) {
	return this1.concat([el]);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.unshift = function(this1,el) {
	return [el].concat(this1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.shift = function(this1) {
	if(this1.length == 0) {
		var this2 = { _0 : null, _1 : this1};
		return this2;
	}
	var value = this1[0];
	var array = this1.slice(0,0).concat(this1.slice(1));
	var this3 = { _0 : value, _1 : array};
	return this3;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.push = function(this1,el) {
	return this1.concat([el]);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.pop = function(this1) {
	if(this1.length == 0) {
		var this2 = { _0 : null, _1 : this1};
		return this2;
	}
	var value = this1[this1.length - 1];
	var pos = this1.length - 1;
	var array = this1.slice(0,pos).concat(this1.slice(pos + 1));
	var this3 = { _0 : value, _1 : array};
	return this3;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.iterator = function(this1) {
	return HxOverrides.iter(this1);
};
var thx__$Semigroup_Semigroup_$Impl_$ = {};
thx__$Semigroup_Semigroup_$Impl_$.__name__ = "thx._Semigroup.Semigroup_Impl_";
thx__$Semigroup_Semigroup_$Impl_$.__properties__ = {get_append:"get_append"};
thx__$Semigroup_Semigroup_$Impl_$.get_append = function(this1) {
	return this1;
};
var thx__$Set_Set_$Impl_$ = {};
thx__$Set_Set_$Impl_$.__name__ = "thx._Set.Set_Impl_";
thx__$Set_Set_$Impl_$.__properties__ = {get_length:"get_length"};
thx__$Set_Set_$Impl_$.createString = function(it) {
	var map = new haxe_ds_StringMap();
	var set = map;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createInt = function(it) {
	var map = new haxe_ds_IntMap();
	var set = map;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createObject = function(it) {
	var map = new haxe_ds_ObjectMap();
	var set = map;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createEnum = function(arr) {
	var map = new haxe_ds_EnumValueMap();
	var set = map;
	if(null != arr) {
		thx__$Set_Set_$Impl_$.pushMany(set,arr);
	}
	return set;
};
thx__$Set_Set_$Impl_$._new = function(map) {
	return map;
};
thx__$Set_Set_$Impl_$.add = function(this1,v) {
	if(this1.exists(v)) {
		return false;
	} else {
		this1.set(v,true);
		return true;
	}
};
thx__$Set_Set_$Impl_$.copy = function(this1) {
	var inst = thx__$Set_Set_$Impl_$.empty(this1);
	var k = this1.keys();
	while(k.hasNext()) {
		var k1 = k.next();
		inst.set(k1,true);
	}
	return inst;
};
thx__$Set_Set_$Impl_$.empty = function(this1) {
	var inst = Type.createInstance(js_Boot.getClass(this1),[]);
	return inst;
};
thx__$Set_Set_$Impl_$.difference = function(this1,set) {
	var result = thx__$Set_Set_$Impl_$.copy(this1);
	var item = $iterator(thx__$Set_Set_$Impl_$)(set);
	while(item.hasNext()) {
		var item1 = item.next();
		result.remove(item1);
	}
	return result;
};
thx__$Set_Set_$Impl_$.filter = function(this1,predicate) {
	return thx__$Set_Set_$Impl_$.reduce(this1,function(acc,v) {
		if(predicate(v)) {
			thx__$Set_Set_$Impl_$.add(acc,v);
		}
		return acc;
	},thx__$Set_Set_$Impl_$.empty(this1));
};
thx__$Set_Set_$Impl_$.map = function(this1,f) {
	return thx__$Set_Set_$Impl_$.reduce(this1,function(acc,v) {
		acc.push(f(v));
		return acc;
	},[]);
};
thx__$Set_Set_$Impl_$.exists = function(this1,v) {
	return this1.exists(v);
};
thx__$Set_Set_$Impl_$.remove = function(this1,v) {
	return this1.remove(v);
};
thx__$Set_Set_$Impl_$.intersection = function(this1,set) {
	var result = thx__$Set_Set_$Impl_$.empty(this1);
	var item = $iterator(thx__$Set_Set_$Impl_$)(this1);
	while(item.hasNext()) {
		var item1 = item.next();
		if(set.exists(item1)) {
			result.set(item1,true);
		}
	}
	return result;
};
thx__$Set_Set_$Impl_$.push = function(this1,v) {
	this1.set(v,true);
};
thx__$Set_Set_$Impl_$.pushMany = function(this1,values) {
	var value = $getIterator(values);
	while(value.hasNext()) {
		var value1 = value.next();
		this1.set(value1,true);
	}
};
thx__$Set_Set_$Impl_$.reduce = function(this1,handler,acc) {
	var v = $iterator(thx__$Set_Set_$Impl_$)(this1);
	while(v.hasNext()) {
		var v1 = v.next();
		acc = handler(acc,v1);
	}
	return acc;
};
thx__$Set_Set_$Impl_$.iterator = function(this1) {
	return this1.keys();
};
thx__$Set_Set_$Impl_$.union = function(this1,set) {
	var newset = thx__$Set_Set_$Impl_$.copy(this1);
	thx__$Set_Set_$Impl_$.pushMany(newset,thx__$Set_Set_$Impl_$.toArray(set));
	return newset;
};
thx__$Set_Set_$Impl_$.toArray = function(this1) {
	var arr = [];
	var k = this1.keys();
	while(k.hasNext()) {
		var k1 = k.next();
		arr.push(k1);
	}
	return arr;
};
thx__$Set_Set_$Impl_$.toString = function(this1) {
	return "{" + thx__$Set_Set_$Impl_$.toArray(this1).join(", ") + "}";
};
thx__$Set_Set_$Impl_$.get_length = function(this1) {
	var l = 0;
	var i = this1.iterator();
	while(i.hasNext()) {
		i.next();
		++l;
	}
	return l;
};
var thx_Strings = function() { };
thx_Strings.__name__ = "thx.Strings";
thx_Strings.after = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos + searchFor.length);
	}
};
thx_Strings.afterLast = function(value,searchFor) {
	var pos = value.lastIndexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos + searchFor.length);
	}
};
thx_Strings.before = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(0,pos);
	}
};
thx_Strings.beforeLast = function(value,searchFor) {
	var pos = value.lastIndexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(0,pos);
	}
};
thx_Strings.capitalize = function(s) {
	return HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,s.length - 1);
};
thx_Strings.capitalizeWords = function(value,whiteSpaceOnly) {
	if(whiteSpaceOnly == null) {
		whiteSpaceOnly = false;
	}
	if(whiteSpaceOnly) {
		return thx_Strings.UCWORDSWS.map(HxOverrides.substr(value,0,1).toUpperCase() + HxOverrides.substr(value,1,value.length - 1),thx_Strings.upperMatch);
	} else {
		return thx_Strings.UCWORDS.map(HxOverrides.substr(value,0,1).toUpperCase() + HxOverrides.substr(value,1,value.length - 1),thx_Strings.upperMatch);
	}
};
thx_Strings.canonicalizeNewlines = function(value) {
	return value.replace(thx_Strings.CANONICALIZE_LINES.r,"\n");
};
thx_Strings.caseInsensitiveCompare = function(a,b) {
	if(null == a && null == b) {
		return 0;
	}
	if(null == a) {
		return -1;
	} else if(null == b) {
		return 1;
	}
	return haxe_Utf8.compare(a.toLowerCase(),b.toLowerCase());
};
thx_Strings.caseInsensitiveEndsWith = function(s,end) {
	return StringTools.endsWith(s.toLowerCase(),end.toLowerCase());
};
thx_Strings.caseInsensitiveEndsWithAny = function(s,values) {
	var tmp = s.toLowerCase();
	var result = new Array(values.length);
	var _g = 0;
	var _g1 = values.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = values[i].toLowerCase();
	}
	return thx_Strings.endsWithAny(tmp,result);
};
thx_Strings.caseInsensitiveStartsWith = function(s,start) {
	return StringTools.startsWith(s.toLowerCase(),start.toLowerCase());
};
thx_Strings.caseInsensitiveStartsWithAny = function(s,values) {
	var tmp = s.toLowerCase();
	var result = new Array(values.length);
	var _g = 0;
	var _g1 = values.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = values[i].toLowerCase();
	}
	return thx_Strings.startsWithAny(tmp,result);
};
thx_Strings.collapse = function(value) {
	return StringTools.trim(value).replace(thx_Strings.WSG.r," ");
};
thx_Strings.compare = function(a,b) {
	return haxe_Utf8.compare(a,b);
};
thx_Strings.caseInsensitiveContains = function(s,test) {
	return s.toLowerCase().indexOf(test.toLowerCase()) >= 0;
};
thx_Strings.contains = function(s,test) {
	return s.indexOf(test) >= 0;
};
thx_Strings.count = function(s,test) {
	return s.split(test).length - 1;
};
thx_Strings.caseInsensitiveContainsAny = function(s,tests) {
	var s1 = s;
	return thx_Arrays.any(tests,function(test) {
		return s1.toLowerCase().indexOf(test.toLowerCase()) >= 0;
	});
};
thx_Strings.containsAny = function(s,tests) {
	var s1 = s;
	return thx_Arrays.any(tests,function(test) {
		return s1.indexOf(test) >= 0;
	});
};
thx_Strings.caseInsensitiveContainsAll = function(s,tests) {
	var s1 = s;
	return thx_Arrays.all(tests,function(test) {
		return s1.toLowerCase().indexOf(test.toLowerCase()) >= 0;
	});
};
thx_Strings.containsAll = function(s,tests) {
	var s1 = s;
	return thx_Arrays.all(tests,function(test) {
		return s1.indexOf(test) >= 0;
	});
};
thx_Strings.dasherize = function(s) {
	return StringTools.replace(s,"_","-");
};
thx_Strings.diffAt = function(a,b) {
	var a1 = a.length;
	var b1 = b.length;
	var min = a1 < b1 ? a1 : b1;
	var _g = 0;
	var _g1 = min;
	while(_g < _g1) {
		var i = _g++;
		if(a.substring(i,i + 1) != b.substring(i,i + 1)) {
			return i;
		}
	}
	return min;
};
thx_Strings.ellipsis = function(s,maxlen,symbol) {
	if(symbol == null) {
		symbol = "…";
	}
	if(maxlen == null) {
		maxlen = 20;
	}
	var sl = s.length;
	var symboll = symbol.length;
	if(sl > maxlen) {
		if(maxlen < symboll) {
			return HxOverrides.substr(symbol,symboll - maxlen,maxlen);
		} else {
			return HxOverrides.substr(s,0,maxlen - symboll) + symbol;
		}
	} else {
		return s;
	}
};
thx_Strings.ellipsisMiddle = function(s,maxlen,symbol) {
	if(symbol == null) {
		symbol = "…";
	}
	if(maxlen == null) {
		maxlen = 20;
	}
	var sl = s.length;
	var symboll = symbol.length;
	if(sl > maxlen) {
		if(maxlen <= symboll) {
			return thx_Strings.ellipsis(s,maxlen,symbol);
		}
		var hll = Math.ceil((maxlen - symboll) / 2);
		var hlr = Math.floor((maxlen - symboll) / 2);
		return HxOverrides.substr(s,0,hll) + symbol + HxOverrides.substr(s,sl - hlr,hlr);
	} else {
		return s;
	}
};
thx_Strings.endsWithAny = function(s,values) {
	return thx_Iterables.any(values,function(end) {
		return StringTools.endsWith(s,end);
	});
};
thx_Strings.filter = function(s,predicate) {
	var _this = s.split("");
	var _g = [];
	var _g1 = 0;
	while(_g1 < _this.length) {
		var v = _this[_g1];
		++_g1;
		if(predicate(v)) {
			_g.push(v);
		}
	}
	return _g.join("");
};
thx_Strings.filterCharcode = function(s,predicate) {
	var _g = [];
	var _g1 = 0;
	var _g2 = thx_Strings.map(s,function(s1) {
		return HxOverrides.cca(s1,0);
	});
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(predicate(v)) {
			_g.push(v);
		}
	}
	var codes = _g;
	var result = new Array(codes.length);
	var _g3 = 0;
	var _g11 = codes.length;
	while(_g3 < _g11) {
		var i = _g3++;
		result[i] = String.fromCodePoint(codes[i]);
	}
	return result.join("");
};
thx_Strings.from = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos);
	}
};
thx_Strings.hashCode = function(value) {
	var code = 0;
	var _g = 0;
	var _g1 = value.length;
	while(_g < _g1) {
		var i = _g++;
		var c = HxOverrides.cca(value,i);
		code = (haxe__$Int32_Int32_$Impl_$._mul(thx_Strings.HASCODE_MUL,code) + c | 0) % thx_Strings.HASCODE_MAX;
	}
	return code;
};
thx_Strings.hasContent = function(value) {
	if(value != null) {
		return value.length > 0;
	} else {
		return false;
	}
};
thx_Strings.humanize = function(s) {
	return StringTools.replace(thx_Strings.underscore(s),"_"," ");
};
thx_Strings.isAlpha = function(s) {
	if(s.length > 0) {
		return !thx_Strings.IS_ALPHA.match(s);
	} else {
		return false;
	}
};
thx_Strings.isAlphaNum = function(value) {
	return thx_Strings.ALPHANUM.match(value);
};
thx_Strings.isBreakingWhitespace = function(value) {
	return !thx_Strings.IS_BREAKINGWHITESPACE.match(value);
};
thx_Strings.isLowerCase = function(value) {
	return value.toLowerCase() == value;
};
thx_Strings.isUpperCase = function(value) {
	return value.toUpperCase() == value;
};
thx_Strings.ifEmpty = function(value,alt) {
	if(null != value && "" != value) {
		return value;
	} else {
		return alt;
	}
};
thx_Strings.isDigitsOnly = function(value) {
	return thx_Strings.DIGITS.match(value);
};
thx_Strings.isEmpty = function(value) {
	if(value != null) {
		return value == "";
	} else {
		return true;
	}
};
thx_Strings.lowerCaseFirst = function(value) {
	return value.substring(0,1).toLowerCase() + value.substring(1);
};
thx_Strings.random = function(value,length) {
	if(length == null) {
		length = 1;
	}
	return HxOverrides.substr(value,Math.floor((value.length - length + 1) * Math.random()),length);
};
thx_Strings.randomSequence = function(seed,length) {
	var _this = thx_Ints.range(0,length);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = thx_Strings.random(seed);
	}
	return result.join("");
};
thx_Strings.randomSequence64 = function(length) {
	return thx_Strings.randomSequence(haxe_crypto_Base64.CHARS,length);
};
thx_Strings.iterator = function(s) {
	return HxOverrides.iter(s.split(""));
};
thx_Strings.map = function(value,callback) {
	var _this = value.split("");
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = callback(_this[i]);
	}
	return result;
};
thx_Strings.remove = function(value,toremove) {
	return StringTools.replace(value,toremove,"");
};
thx_Strings.removeAfter = function(value,toremove) {
	if(StringTools.endsWith(value,toremove)) {
		return value.substring(0,value.length - toremove.length);
	} else {
		return value;
	}
};
thx_Strings.removeAt = function(value,index,length) {
	return value.substring(0,index) + value.substring(index + length);
};
thx_Strings.removeBefore = function(value,toremove) {
	if(StringTools.startsWith(value,toremove)) {
		return value.substring(toremove.length);
	} else {
		return value;
	}
};
thx_Strings.removeOne = function(value,toremove) {
	var pos = value.indexOf(toremove);
	if(pos < 0) {
		return value;
	}
	return value.substring(0,pos) + value.substring(pos + toremove.length);
};
thx_Strings.repeat = function(s,times) {
	var _g = [];
	var _g1 = 0;
	while(_g1 < times) {
		++_g1;
		_g.push(s);
	}
	return _g.join("");
};
thx_Strings.reverse = function(s) {
	var arr = s.split("");
	arr.reverse();
	return arr.join("");
};
thx_Strings.quote = function(s) {
	if(s.indexOf("\"") < 0) {
		return "\"" + s + "\"";
	} else if(s.indexOf("'") < 0) {
		return "'" + s + "'";
	} else {
		return "\"" + StringTools.replace(s,"\"","\\\"") + "\"";
	}
};
thx_Strings.splitOnce = function(s,separator) {
	var pos = s.indexOf(separator);
	if(pos < 0) {
		return [s];
	}
	return [s.substring(0,pos),s.substring(pos + separator.length)];
};
thx_Strings.startsWithAny = function(s,values) {
	return thx_Iterables.any(values,function(start) {
		return StringTools.startsWith(s,start);
	});
};
thx_Strings.stripTags = function(s) {
	return s.replace(thx_Strings.STRIPTAGS.r,"");
};
thx_Strings.surround = function(s,left,right) {
	return "" + left + s + (null == right ? left : right);
};
thx_Strings.toArray = function(s) {
	return s.split("");
};
thx_Strings.toCharcodes = function(s) {
	return thx_Strings.map(s,function(s1) {
		return HxOverrides.cca(s1,0);
	});
};
thx_Strings.toChunks = function(s,len) {
	var chunks = [];
	while(s.length > 0) {
		chunks.push(HxOverrides.substr(s,0,len));
		s = HxOverrides.substr(s,len,s.length - len);
	}
	return chunks;
};
thx_Strings.toLines = function(s) {
	return thx_Strings.SPLIT_LINES.split(s);
};
thx_Strings.trimChars = function(value,charlist) {
	return thx_Strings.trimCharsRight(thx_Strings.trimCharsLeft(value,charlist),charlist);
};
thx_Strings.trimCharsLeft = function(value,charlist) {
	var pos = 0;
	var _g = 0;
	var _g1 = value.length;
	while(_g < _g1) {
		var i = _g++;
		if(charlist.indexOf(value.charAt(i)) >= 0) {
			++pos;
		} else {
			break;
		}
	}
	return value.substring(pos);
};
thx_Strings.trimCharsRight = function(value,charlist) {
	var len = value.length;
	var pos = len;
	var i;
	var _g = 0;
	while(_g < len) {
		var j = _g++;
		i = len - j - 1;
		if(charlist.indexOf(value.charAt(i)) >= 0) {
			pos = i;
		} else {
			break;
		}
	}
	return value.substring(0,pos);
};
thx_Strings.underscore = function(s) {
	var _this_r = new RegExp("::","g".split("u").join(""));
	s = s.replace(_this_r,"/");
	var _this_r1 = new RegExp("([A-Z]+)([A-Z][a-z])","g".split("u").join(""));
	s = s.replace(_this_r1,"$1_$2");
	var _this_r2 = new RegExp("([a-z\\d])([A-Z])","g".split("u").join(""));
	s = s.replace(_this_r2,"$1_$2");
	var _this_r3 = new RegExp("-","g".split("u").join(""));
	s = s.replace(_this_r3,"_");
	return s.toLowerCase();
};
thx_Strings.upperCaseFirst = function(value) {
	return value.substring(0,1).toUpperCase() + value.substring(1);
};
thx_Strings.upTo = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return value;
	} else {
		return value.substring(0,pos);
	}
};
thx_Strings.wrapColumns = function(s,columns,indent,newline) {
	if(newline == null) {
		newline = "\n";
	}
	if(indent == null) {
		indent = "";
	}
	if(columns == null) {
		columns = 78;
	}
	var _this = thx_Strings.SPLIT_LINES.split(s);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = thx_Strings.wrapLine(StringTools.trim(_this[i].replace(thx_Strings.WSG.r," ")),columns,indent,newline);
	}
	return result.join(newline);
};
thx_Strings.upperMatch = function(re) {
	return re.matched(0).toUpperCase();
};
thx_Strings.wrapLine = function(s,columns,indent,newline) {
	var parts = [];
	var pos = 0;
	var len = s.length;
	var ilen = indent.length;
	columns -= ilen;
	while(true) {
		if(pos + columns >= len - ilen) {
			parts.push(s.substring(pos));
			break;
		}
		var i = 0;
		while(!StringTools.isSpace(s,pos + columns - i) && i < columns) ++i;
		if(i == columns) {
			i = 0;
			while(!StringTools.isSpace(s,pos + columns + i) && pos + columns + i < len) ++i;
			parts.push(s.substring(pos,pos + columns + i));
			pos += columns + i + 1;
		} else {
			parts.push(s.substring(pos,pos + columns - i));
			pos += columns - i + 1;
		}
	}
	return indent + parts.join(newline + indent);
};
thx_Strings.lpad = function(s,char,length) {
	var diff = length - s.length;
	if(diff > 0) {
		return thx_Strings.repeat(char,diff) + s;
	} else {
		return s;
	}
};
thx_Strings.rpad = function(s,char,length) {
	var diff = length - s.length;
	if(diff > 0) {
		return s + thx_Strings.repeat(char,diff);
	} else {
		return s;
	}
};
var thx__$Time_Time_$Impl_$ = {};
thx__$Time_Time_$Impl_$.__name__ = "thx._Time.Time_Impl_";
thx__$Time_Time_$Impl_$.__properties__ = {get_isNegative:"get_isNegative",get_totalMicroseconds:"get_totalMicroseconds",get_totalMilliseconds:"get_totalMilliseconds",get_totalSeconds:"get_totalSeconds",get_totalMinutes:"get_totalMinutes",get_totalHours:"get_totalHours",get_totalDays:"get_totalDays",get_ticksInSecond:"get_ticksInSecond",get_microseconds:"get_microseconds",get_milliseconds:"get_milliseconds",get_seconds:"get_seconds",get_minutes:"get_minutes",get_hours:"get_hours",get_days:"get_days",get_ticks:"get_ticks"};
thx__$Time_Time_$Impl_$.fromDays = function(days) {
	return thx__$Time_Time_$Impl_$.create(24 * days,0,0,0);
};
thx__$Time_Time_$Impl_$.fromHours = function(hours) {
	return thx__$Time_Time_$Impl_$.create(hours,0,0,0);
};
thx__$Time_Time_$Impl_$.fromMinutes = function(minutes) {
	return thx__$Time_Time_$Impl_$.create(0,minutes,0,0);
};
thx__$Time_Time_$Impl_$.fromSeconds = function(seconds) {
	return thx__$Time_Time_$Impl_$.create(0,0,seconds,0);
};
thx__$Time_Time_$Impl_$.fromMilliseconds = function(milliseconds) {
	return thx__$Time_Time_$Impl_$.create(0,0,0,milliseconds);
};
thx__$Time_Time_$Impl_$.timeToTicks = function(hours,minutes,seconds) {
	var x = hours * 3600;
	var a_high = x >> 31;
	var a_low = x;
	var x1 = minutes * 60;
	var b_high = x1 >> 31;
	var b_low = x1;
	var high = a_high + b_high | 0;
	var low = a_low + b_low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a_low) < 0) {
		++high;
		high = high | 0;
	}
	var a_high1 = high;
	var b_high1 = seconds >> 31;
	var b_low1 = seconds;
	var high1 = a_high1 + b_high1 | 0;
	var low1 = low + b_low1 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	var totalSeconds_high = high1;
	var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
	var al = low1 & 65535;
	var ah = low1 >>> 16;
	var bl = b.low & 65535;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low2 = p00;
	var high2 = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low2 = p00 + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p01) < 0) {
		++high2;
		high2 = high2 | 0;
	}
	p10 = p10 << 16;
	low2 = low2 + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p10) < 0) {
		++high2;
		high2 = high2 | 0;
	}
	high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(low1,b.high) + haxe__$Int32_Int32_$Impl_$._mul(totalSeconds_high,b.low) | 0) | 0;
	return new haxe__$Int64__$_$_$Int64(high2,low2);
};
thx__$Time_Time_$Impl_$.is = function(v) {
	return ((v) instanceof haxe__$Int64__$_$_$Int64);
};
thx__$Time_Time_$Impl_$.fromString = function(s) {
	var pattern = new EReg("^([-+])?(?:(\\d+)[.](\\d{1,2})|(\\d+))[:](\\d{2})(?:[:](\\d{2})(?:\\.(\\d+))?)?$","");
	if(!pattern.match(s)) {
		throw new thx_Error("unable to parse Time string: \"" + s + "\"",null,{ fileName : "thx/Time.hx", lineNumber : 40, className : "thx._Time.Time_Impl_", methodName : "fromString"});
	}
	var smticks = pattern.matched(7);
	var mticks = 0;
	if(null != smticks) {
		smticks = "1" + thx_Strings.rpad(smticks,"0",7).substring(0,7);
		mticks = Std.parseInt(smticks) - 10000000;
	}
	var days = 0;
	var hours = 0;
	var minutes = Std.parseInt(pattern.matched(5));
	var seconds = Std.parseInt(pattern.matched(6));
	if(null != pattern.matched(2)) {
		days = Std.parseInt(pattern.matched(2));
		hours = Std.parseInt(pattern.matched(3));
	} else {
		hours = Std.parseInt(pattern.matched(4));
	}
	var this1 = thx__$Time_Time_$Impl_$.create(days * 24 + hours,minutes,seconds);
	var that_high = mticks >> 31;
	var that_low = mticks;
	var high = this1.high + that_high | 0;
	var low = this1.low + that_low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this1.low) < 0) {
		++high;
		high = high | 0;
	}
	var time = new haxe__$Int64__$_$_$Int64(high,low);
	if(pattern.matched(1) == "-") {
		var x = time;
		var high1 = ~x.high;
		var low1 = ~x.low + 1 | 0;
		if(low1 == 0) {
			++high1;
			high1 = high1 | 0;
		}
		return new haxe__$Int64__$_$_$Int64(high1,low1);
	} else {
		return time;
	}
};
thx__$Time_Time_$Impl_$.compare = function(a,b) {
	return thx_Int64s.compare(a,b);
};
thx__$Time_Time_$Impl_$.create = function(hours,minutes,seconds,milliseconds) {
	if(milliseconds == null) {
		milliseconds = 0;
	}
	if(seconds == null) {
		seconds = 0;
	}
	if(minutes == null) {
		minutes = 0;
	}
	var a = thx__$Time_Time_$Impl_$.timeToTicks(hours,minutes,seconds);
	var a_high = milliseconds >> 31;
	var a_low = milliseconds;
	var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64;
	var al = a_low & 65535;
	var ah = a_low >>> 16;
	var bl = b.low & 65535;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = p00 + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		++high;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		++high;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a_low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a_high,b.low) | 0) | 0;
	var b_high = high;
	var b_low = low;
	var high1 = a.high + b_high | 0;
	var low1 = a.low + b_low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a.low) < 0) {
		++high1;
		high1 = high1 | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high1,low1);
};
thx__$Time_Time_$Impl_$.createDays = function(days,hours,minutes,seconds,milliseconds) {
	if(milliseconds == null) {
		milliseconds = 0;
	}
	if(seconds == null) {
		seconds = 0;
	}
	if(minutes == null) {
		minutes = 0;
	}
	if(hours == null) {
		hours = 0;
	}
	return thx__$Time_Time_$Impl_$.create(days * 24 + hours,minutes,seconds,milliseconds);
};
thx__$Time_Time_$Impl_$._new = function(ticks) {
	return ticks;
};
thx__$Time_Time_$Impl_$.abs = function(this1) {
	var b_high = 0;
	var b_low = 0;
	var v = this1.high - b_high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b_low);
	if((this1.high < 0 ? -1 : v) < 0) {
		var high = ~this1.high;
		var low = ~this1.low + 1 | 0;
		if(low == 0) {
			++high;
			high = high | 0;
		}
		return new haxe__$Int64__$_$_$Int64(high,low);
	} else {
		return this1;
	}
};
thx__$Time_Time_$Impl_$.withHours = function(this1,hours) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient,new haxe__$Int64__$_$_$Int64(0,60)).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp = x.low;
	var x1 = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).quotient,new haxe__$Int64__$_$_$Int64(0,60)).modulus;
	if(x1.high != x1.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp1 = x1.low;
	var x2 = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.thousandI64).modulus;
	if(x2.high != x2.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return thx__$Time_Time_$Impl_$.create(hours,tmp,tmp1,x2.low);
};
thx__$Time_Time_$Impl_$.withMinutes = function(this1,minutes) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient,new haxe__$Int64__$_$_$Int64(0,24)).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp = x.low;
	var x1 = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).quotient,new haxe__$Int64__$_$_$Int64(0,60)).modulus;
	if(x1.high != x1.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp1 = x1.low;
	var x2 = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.thousandI64).modulus;
	if(x2.high != x2.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return thx__$Time_Time_$Impl_$.create(tmp,minutes,tmp1,x2.low);
};
thx__$Time_Time_$Impl_$.withSeconds = function(this1,seconds) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient,new haxe__$Int64__$_$_$Int64(0,24)).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp = x.low;
	var x1 = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient,new haxe__$Int64__$_$_$Int64(0,60)).modulus;
	if(x1.high != x1.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp1 = x1.low;
	var x2 = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.thousandI64).modulus;
	if(x2.high != x2.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return thx__$Time_Time_$Impl_$.create(tmp,tmp1,seconds,x2.low);
};
thx__$Time_Time_$Impl_$.withMilliseconds = function(this1,milliseconds) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient,new haxe__$Int64__$_$_$Int64(0,24)).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp = x.low;
	var x1 = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient,new haxe__$Int64__$_$_$Int64(0,60)).modulus;
	if(x1.high != x1.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp1 = x1.low;
	var x2 = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).quotient,new haxe__$Int64__$_$_$Int64(0,60)).modulus;
	if(x2.high != x2.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return thx__$Time_Time_$Impl_$.create(tmp,tmp1,x2.low,milliseconds);
};
thx__$Time_Time_$Impl_$.negate = function(this1) {
	var high = ~this1.high;
	var low = ~this1.low + 1 | 0;
	if(low == 0) {
		++high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
thx__$Time_Time_$Impl_$.add = function(this1,that) {
	var b = that;
	var high = this1.high + b.high | 0;
	var low = this1.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this1.low) < 0) {
		++high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
thx__$Time_Time_$Impl_$.addTicks = function(this1,that) {
	var high = this1.high + that.high | 0;
	var low = this1.low + that.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this1.low) < 0) {
		++high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
thx__$Time_Time_$Impl_$.subtract = function(this1,that) {
	var b = that;
	var high = this1.high - b.high | 0;
	var low = this1.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low) < 0) {
		--high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
thx__$Time_Time_$Impl_$.compareTo = function(this1,that) {
	return thx_Int64s.compare(this1,that);
};
thx__$Time_Time_$Impl_$.equalsTo = function(this1,that) {
	var b = that;
	if(this1.high == b.high) {
		return this1.low == b.low;
	} else {
		return false;
	}
};
thx__$Time_Time_$Impl_$.equals = function(self,that) {
	var a = self;
	var b = that;
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
thx__$Time_Time_$Impl_$.notEqualsTo = function(self,that) {
	var a = self;
	var b = that;
	if(!(a.high != b.high)) {
		return a.low != b.low;
	} else {
		return true;
	}
};
thx__$Time_Time_$Impl_$.notEquals = function(this1,that) {
	var b = that;
	if(!(this1.high != b.high)) {
		return this1.low != b.low;
	} else {
		return true;
	}
};
thx__$Time_Time_$Impl_$.greaterThan = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
thx__$Time_Time_$Impl_$.greater = function(this1,that) {
	return thx_Int64s.compare(this1,that) > 0;
};
thx__$Time_Time_$Impl_$.greaterEqualsTo = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
thx__$Time_Time_$Impl_$.greaterEquals = function(this1,that) {
	return thx_Int64s.compare(this1,that) >= 0;
};
thx__$Time_Time_$Impl_$.lessThan = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
thx__$Time_Time_$Impl_$.less = function(this1,that) {
	return thx_Int64s.compare(this1,that) < 0;
};
thx__$Time_Time_$Impl_$.lessEqualsTo = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
thx__$Time_Time_$Impl_$.lessEquals = function(this1,that) {
	return thx_Int64s.compare(this1,that) <= 0;
};
thx__$Time_Time_$Impl_$.toDateTimeUtc = function(this1) {
	return this1;
};
thx__$Time_Time_$Impl_$.toString = function(this1) {
	var timeAbs = thx__$Time_Time_$Impl_$.abs(this1);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(timeAbs,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var ticksInSecondAbs = x.low;
	var decimals = ticksInSecondAbs != 0 ? "." + thx_Strings.trimCharsRight(thx_Ints.lpad(ticksInSecondAbs,"0",7),"0") : "";
	var b_high = 0;
	var b_low = 0;
	var v = this1.high - b_high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b_low);
	var tmp = this1.high < 0 ? -1 : v;
	var tmp1 = "" + haxe__$Int64_Int64_$Impl_$.toString(haxe__$Int64_Int64_$Impl_$.divMod(timeAbs,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient) + ":";
	var x1 = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(timeAbs,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient,new haxe__$Int64__$_$_$Int64(0,60)).modulus;
	if(x1.high != x1.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp2 = tmp1 + thx_Ints.lpad(x1.low,"0",2) + ":";
	var x2 = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(timeAbs,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).quotient,new haxe__$Int64__$_$_$Int64(0,60)).modulus;
	if(x2.high != x2.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return (tmp < 0 ? "-" : "") + (tmp2 + thx_Ints.lpad(x2.low,"0",2)) + decimals;
};
thx__$Time_Time_$Impl_$.toGmtString = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var h = thx_Ints.lpad(x.low,"0",2);
	var b_high = 0;
	var b_low = 0;
	var v = this1.high - b_high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b_low);
	if((this1.high < 0 ? -1 : v) >= 0) {
		h = "+" + h;
	}
	var x1 = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient,new haxe__$Int64__$_$_$Int64(0,60)).modulus;
	if(x1.high != x1.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return "" + h + ":" + thx_Ints.lpad(x1.low,"0",2);
};
thx__$Time_Time_$Impl_$.get_ticks = function(this1) {
	return this1;
};
thx__$Time_Time_$Impl_$.get_days = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).quotient;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$Time_Time_$Impl_$.get_hours = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient,new haxe__$Int64__$_$_$Int64(0,24)).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$Time_Time_$Impl_$.get_minutes = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient,new haxe__$Int64__$_$_$Int64(0,60)).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$Time_Time_$Impl_$.get_seconds = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).quotient,new haxe__$Int64__$_$_$Int64(0,60)).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$Time_Time_$Impl_$.get_milliseconds = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.thousandI64).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$Time_Time_$Impl_$.get_microseconds = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMicrosecondI64).quotient,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.tenThousandI64).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$Time_Time_$Impl_$.get_ticksInSecond = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$Time_Time_$Impl_$.get_totalDays = function(this1) {
	return haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).quotient;
};
thx__$Time_Time_$Impl_$.get_totalHours = function(this1) {
	return haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient;
};
thx__$Time_Time_$Impl_$.get_totalMinutes = function(this1) {
	return haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient;
};
thx__$Time_Time_$Impl_$.get_totalSeconds = function(this1) {
	return haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).quotient;
};
thx__$Time_Time_$Impl_$.get_totalMilliseconds = function(this1) {
	return haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient;
};
thx__$Time_Time_$Impl_$.get_totalMicroseconds = function(this1) {
	return haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMicrosecondI64).quotient;
};
thx__$Time_Time_$Impl_$.get_isNegative = function(this1) {
	var b_high = 0;
	var b_low = 0;
	var v = this1.high - b_high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b_low);
	return (this1.high < 0 ? -1 : v) < 0;
};
var thx_TimePeriod = $hxEnums["thx.TimePeriod"] = { __ename__ : "thx.TimePeriod", __constructs__ : ["Second","Minute","Hour","Day","Week","Month","Year"]
	,Second: {_hx_index:0,__enum__:"thx.TimePeriod",toString:$estr}
	,Minute: {_hx_index:1,__enum__:"thx.TimePeriod",toString:$estr}
	,Hour: {_hx_index:2,__enum__:"thx.TimePeriod",toString:$estr}
	,Day: {_hx_index:3,__enum__:"thx.TimePeriod",toString:$estr}
	,Week: {_hx_index:4,__enum__:"thx.TimePeriod",toString:$estr}
	,Month: {_hx_index:5,__enum__:"thx.TimePeriod",toString:$estr}
	,Year: {_hx_index:6,__enum__:"thx.TimePeriod",toString:$estr}
};
var thx_Timer = function() { };
thx_Timer.__name__ = "thx.Timer";
thx_Timer.debounce = function(callback,delayms,leading) {
	if(leading == null) {
		leading = false;
	}
	var cancel = thx_Functions.noop;
	var poll = function() {
		cancel();
		cancel = thx_Timer.delay(callback,delayms);
	};
	return function() {
		if(leading) {
			leading = false;
			callback();
		}
		poll();
	};
};
thx_Timer.throttle = function(callback,delayms,leading) {
	if(leading == null) {
		leading = false;
	}
	var waiting = false;
	var poll = function() {
		waiting = true;
		thx_Timer.delay(callback,delayms);
	};
	return function() {
		if(leading) {
			leading = false;
			callback();
			return;
		}
		if(waiting) {
			return;
		}
		poll();
	};
};
thx_Timer.repeat = function(callback,delayms) {
	var id = setInterval(callback,delayms);
	return function() {
		clearTimeout(id);
	};
};
thx_Timer.delay = function(callback,delayms) {
	var id = setTimeout(callback,delayms);
	return function() {
		clearTimeout(id);
	};
};
thx_Timer.frame = function(callback) {
	var cancelled = false;
	var f = thx_Functions.noop;
	var current = performance.now();
	var next;
	f = function() {
		if(cancelled) {
			return;
		}
		next = performance.now();
		callback(next - current);
		current = next;
		requestAnimationFrame(f);
	};
	requestAnimationFrame(f);
	return function() {
		cancelled = true;
	};
};
thx_Timer.nextFrame = function(callback) {
	var id = requestAnimationFrame(callback);
	return function() {
		cancelAnimationFrame(id);
	};
};
thx_Timer.immediate = function(callback) {
	var id = setImmediate(callback);
	return function() {
		clearTimeout(id);
	};
};
thx_Timer.clear = function(id) {
	clearTimeout(id);
	return;
};
thx_Timer.time = function() {
	return performance.now();
};
thx_Timer.resolution = function() {
	if(null != thx_Timer._resolution) {
		return thx_Timer._resolution;
	}
	var start = performance.now();
	var end;
	while(true) {
		end = performance.now();
		if(!(end - start == 0)) {
			break;
		}
	}
	return thx_Timer._resolution = end - start;
};
var thx__$Timestamp_Timestamp_$Impl_$ = {};
thx__$Timestamp_Timestamp_$Impl_$.__name__ = "thx._Timestamp.Timestamp_Impl_";
thx__$Timestamp_Timestamp_$Impl_$.create = function(year,month,day,hour,minute,second) {
	return thx_Dates.create(year,month,day,hour,minute,second).getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.now = function() {
	return new Date().getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.fromDate = function(d) {
	return d.getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.fromString = function(s) {
	return HxOverrides.strDate(s).getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.toDate = function(this1) {
	return new Date(this1);
};
thx__$Timestamp_Timestamp_$Impl_$.toString = function(this1) {
	return HxOverrides.dateStr(new Date(this1));
};
thx__$Timestamp_Timestamp_$Impl_$.snapNext = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		return Math.ceil(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.ceil(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.ceil(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + 1,0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() + 7 - wd,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		return thx_Dates.create(d2.getFullYear(),d2.getMonth() + 1,1,0,0,0).getTime();
	case 6:
		var d3 = new Date(this1);
		return thx_Dates.create(d3.getFullYear() + 1,0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.snapPrev = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		return Math.floor(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.floor(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.floor(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate(),0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() - wd,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		return thx_Dates.create(d2.getFullYear(),d2.getMonth(),1,0,0,0).getTime();
	case 6:
		var d3 = new Date(this1);
		return thx_Dates.create(d3.getFullYear(),0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.snapTo = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		return Math.round(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.round(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.round(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		var mod = d.getHours() >= 12 ? 1 : 0;
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + mod,0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		var mod1 = wd < 3 ? -wd : wd > 3 ? 7 - wd : d1.getHours() < 12 ? -wd : 7 - wd;
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() + mod1,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		var mod2 = d2.getDate() > Math.round(DateTools.getMonthDays(d2) / 2) ? 1 : 0;
		return thx_Dates.create(d2.getFullYear(),d2.getMonth() + mod2,1,0,0,0).getTime();
	case 6:
		var d3 = new Date(this1);
		var mod3 = this1 > new Date(d3.getFullYear(),6,2,0,0,0).getTime() ? 1 : 0;
		return thx_Dates.create(d3.getFullYear() + mod3,0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.r = function(t,v) {
	return Math.round(t / v) * v;
};
thx__$Timestamp_Timestamp_$Impl_$.f = function(t,v) {
	return Math.floor(t / v) * v;
};
thx__$Timestamp_Timestamp_$Impl_$.c = function(t,v) {
	return Math.ceil(t / v) * v;
};
var thx__$Tuple_Tuple0_$Impl_$ = {};
thx__$Tuple_Tuple0_$Impl_$.__name__ = "thx._Tuple.Tuple0_Impl_";
thx__$Tuple_Tuple0_$Impl_$._new = function() {
	var this1 = thx_Nil.nil;
	return this1;
};
thx__$Tuple_Tuple0_$Impl_$.with = function(this1,v) {
	return v;
};
thx__$Tuple_Tuple0_$Impl_$.toString = function(this1) {
	return "Tuple0()";
};
thx__$Tuple_Tuple0_$Impl_$.toNil = function(this1) {
	return this1;
};
thx__$Tuple_Tuple0_$Impl_$.nilToTuple = function(v) {
	var this1 = thx_Nil.nil;
	return this1;
};
var thx__$Tuple_Tuple1_$Impl_$ = {};
thx__$Tuple_Tuple1_$Impl_$.__name__ = "thx._Tuple.Tuple1_Impl_";
thx__$Tuple_Tuple1_$Impl_$.__properties__ = {get__0:"get__0"};
thx__$Tuple_Tuple1_$Impl_$._new = function(_0) {
	return _0;
};
thx__$Tuple_Tuple1_$Impl_$.get__0 = function(this1) {
	return this1;
};
thx__$Tuple_Tuple1_$Impl_$.with = function(this1,v) {
	var this2 = { _0 : this1, _1 : v};
	return this2;
};
thx__$Tuple_Tuple1_$Impl_$.toString = function(this1) {
	return "Tuple1(" + Std.string(this1) + ")";
};
thx__$Tuple_Tuple1_$Impl_$.arrayToTuple = function(v) {
	var this1 = v[0];
	return this1;
};
var thx__$Tuple_Tuple2_$Impl_$ = {};
thx__$Tuple_Tuple2_$Impl_$.__name__ = "thx._Tuple.Tuple2_Impl_";
thx__$Tuple_Tuple2_$Impl_$.__properties__ = {get_right:"get_right",get_left:"get_left"};
thx__$Tuple_Tuple2_$Impl_$.of = function(_0,_1) {
	var this1 = { _0 : _0, _1 : _1};
	return this1;
};
thx__$Tuple_Tuple2_$Impl_$._new = function(_0,_1) {
	var this1 = { _0 : _0, _1 : _1};
	return this1;
};
thx__$Tuple_Tuple2_$Impl_$.get_left = function(this1) {
	return this1._0;
};
thx__$Tuple_Tuple2_$Impl_$.get_right = function(this1) {
	return this1._1;
};
thx__$Tuple_Tuple2_$Impl_$.flip = function(this1) {
	return { _0 : this1._1, _1 : this1._0};
};
thx__$Tuple_Tuple2_$Impl_$.dropLeft = function(this1) {
	return this1._1;
};
thx__$Tuple_Tuple2_$Impl_$.dropRight = function(this1) {
	return this1._0;
};
thx__$Tuple_Tuple2_$Impl_$.with = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : v};
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.toString = function(this1) {
	return "Tuple2(" + Std.string(this1._0) + "," + Std.string(this1._1) + ")";
};
thx__$Tuple_Tuple2_$Impl_$.map = function(this1,f) {
	var this2 = { _0 : this1._0, _1 : f(this1._1)};
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.squeeze = function(f) {
	return function(tp) {
		return f(tp._0,tp._1);
	};
};
thx__$Tuple_Tuple2_$Impl_$.arrayToTuple2 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1]};
	return this1;
};
var thx__$Tuple_Tuple3_$Impl_$ = {};
thx__$Tuple_Tuple3_$Impl_$.__name__ = "thx._Tuple.Tuple3_Impl_";
thx__$Tuple_Tuple3_$Impl_$.of = function(_0,_1,_2) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$._new = function(_0,_1,_2) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$.flip = function(this1) {
	return { _0 : this1._2, _1 : this1._1, _2 : this1._0};
};
thx__$Tuple_Tuple3_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$.with = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : v};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$.toString = function(this1) {
	return "Tuple3(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + ")";
};
thx__$Tuple_Tuple3_$Impl_$.arrayToTuple3 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2]};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$.map = function(this1,f) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : f(this1._2)};
	return this2;
};
var thx__$Tuple_Tuple4_$Impl_$ = {};
thx__$Tuple_Tuple4_$Impl_$.__name__ = "thx._Tuple.Tuple4_Impl_";
thx__$Tuple_Tuple4_$Impl_$.of = function(_0,_1,_2,_3) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
	return this1;
};
thx__$Tuple_Tuple4_$Impl_$._new = function(_0,_1,_2,_3) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
	return this1;
};
thx__$Tuple_Tuple4_$Impl_$.flip = function(this1) {
	return { _0 : this1._3, _1 : this1._2, _2 : this1._1, _3 : this1._0};
};
thx__$Tuple_Tuple4_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$.with = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : v};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$.toString = function(this1) {
	return "Tuple4(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + ")";
};
thx__$Tuple_Tuple4_$Impl_$.arrayToTuple4 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3]};
	return this1;
};
var thx__$Tuple_Tuple5_$Impl_$ = {};
thx__$Tuple_Tuple5_$Impl_$.__name__ = "thx._Tuple.Tuple5_Impl_";
thx__$Tuple_Tuple5_$Impl_$.of = function(_0,_1,_2,_3,_4) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
	return this1;
};
thx__$Tuple_Tuple5_$Impl_$._new = function(_0,_1,_2,_3,_4) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
	return this1;
};
thx__$Tuple_Tuple5_$Impl_$.flip = function(this1) {
	return { _0 : this1._4, _1 : this1._3, _2 : this1._2, _3 : this1._1, _4 : this1._0};
};
thx__$Tuple_Tuple5_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$.with = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4, _5 : v};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$.toString = function(this1) {
	return "Tuple5(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + ")";
};
thx__$Tuple_Tuple5_$Impl_$.arrayToTuple5 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4]};
	return this1;
};
var thx__$Tuple_Tuple6_$Impl_$ = {};
thx__$Tuple_Tuple6_$Impl_$.__name__ = "thx._Tuple.Tuple6_Impl_";
thx__$Tuple_Tuple6_$Impl_$.of = function(_0,_1,_2,_3,_4,_5) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
	return this1;
};
thx__$Tuple_Tuple6_$Impl_$._new = function(_0,_1,_2,_3,_4,_5) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
	return this1;
};
thx__$Tuple_Tuple6_$Impl_$.flip = function(this1) {
	return { _0 : this1._5, _1 : this1._4, _2 : this1._3, _3 : this1._2, _4 : this1._1, _5 : this1._0};
};
thx__$Tuple_Tuple6_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4, _4 : this1._5};
	return this2;
};
thx__$Tuple_Tuple6_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4};
	return this2;
};
thx__$Tuple_Tuple6_$Impl_$.toString = function(this1) {
	return "Tuple6(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + "," + Std.string(this1._5) + ")";
};
thx__$Tuple_Tuple6_$Impl_$.arrayToTuple6 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4], _5 : v[5]};
	return this1;
};
var thx_Types = function() { };
thx_Types.__name__ = "thx.Types";
thx_Types.isAnonymousObject = function(v) {
	if(Reflect.isObject(v)) {
		return null == js_Boot.getClass(v);
	} else {
		return false;
	}
};
thx_Types.isObject = function(v) {
	if(Reflect.isObject(v)) {
		return !thx_Types.isPrimitive(v);
	} else {
		return false;
	}
};
thx_Types.isPrimitive = function(v) {
	var _g = Type.typeof(v);
	switch(_g._hx_index) {
	case 1:case 2:case 3:
		return true;
	case 6:
		var _g2 = _g.c;
		var c = _g2;
		if(c.__name__ == "String") {
			return true;
		} else {
			var c1 = _g2;
			if(c1.__name__ == "Date") {
				return true;
			} else {
				return false;
			}
		}
		break;
	case 7:
		return false;
	case 0:case 4:case 5:case 8:
		return false;
	}
};
thx_Types.isEnumValue = function(v) {
	if(Type.typeof(v)._hx_index == 7) {
		return true;
	} else {
		return false;
	}
};
thx_Types.hasSuperClass = function(cls,sup) {
	while(null != cls) {
		if(cls == sup) {
			return true;
		}
		cls = cls.__super__;
	}
	return false;
};
thx_Types.sameType = function(a,b) {
	return thx_Types.toString(Type.typeof(a)) == thx_Types.toString(Type.typeof(b));
};
thx_Types.typeInheritance = function(type) {
	switch(type._hx_index) {
	case 1:
		return ["Int"];
	case 2:
		return ["Float"];
	case 3:
		return ["Bool"];
	case 4:
		return ["{}"];
	case 5:
		return ["Function"];
	case 6:
		var c = type.c;
		var classes = [];
		while(null != c) {
			classes.push(c);
			c = c.__super__;
		}
		var f = Type.getClassName;
		var result = new Array(classes.length);
		var _g = 0;
		var _g1 = classes.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(classes[i]);
		}
		return result;
	case 7:
		var e = type.e;
		return [e.__ename__];
	default:
		throw new js__$Boot_HaxeError("invalid type " + Std.string(type));
	}
};
thx_Types.toString = function(type) {
	switch(type._hx_index) {
	case 0:
		return "Null";
	case 1:
		return "Int";
	case 2:
		return "Float";
	case 3:
		return "Bool";
	case 4:
		return "{}";
	case 5:
		return "Function";
	case 6:
		var c = type.c;
		return c.__name__;
	case 7:
		var e = type.e;
		return e.__ename__;
	default:
		throw new js__$Boot_HaxeError("invalid type " + Std.string(type));
	}
};
thx_Types.valueTypeInheritance = function(value) {
	return thx_Types.typeInheritance(Type.typeof(value));
};
thx_Types.valueTypeToString = function(value) {
	return thx_Types.toString(Type.typeof(value));
};
thx_Types.anyValueToString = function(value) {
	if(js_Boot.__instanceof(value,ValueType)) {
		return thx_Types.toString(value);
	}
	if(js_Boot.__instanceof(value,Class)) {
		return value.__name__;
	}
	if(js_Boot.__instanceof(value,Enum)) {
		return value.__ename__;
	}
	return thx_Types.toString(Type.typeof(value));
};
var thx__$Validation_Validation_$Impl_$ = {};
thx__$Validation_Validation_$Impl_$.__name__ = "thx._Validation.Validation_Impl_";
thx__$Validation_Validation_$Impl_$.__properties__ = {get_either:"get_either"};
thx__$Validation_Validation_$Impl_$.get_either = function(this1) {
	return this1;
};
thx__$Validation_Validation_$Impl_$.pure = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.success = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.failure = function(e) {
	return thx_Either.Left(e);
};
thx__$Validation_Validation_$Impl_$.successNel = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.failureNel = function(e) {
	return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
};
thx__$Validation_Validation_$Impl_$.nn = function(a,e) {
	if(a == null) {
		return thx_Either.Left(e);
	} else {
		return thx_Either.Right(a);
	}
};
thx__$Validation_Validation_$Impl_$.nnNel = function(a,e) {
	if(a == null) {
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
	} else {
		return thx_Either.Right(a);
	}
};
thx__$Validation_Validation_$Impl_$.map = function(this1,f) {
	return thx_Eithers.map(this1,f);
};
thx__$Validation_Validation_$Impl_$.ap = function(this1,v,s) {
	switch(this1._hx_index) {
	case 0:
		var _g = this1.value;
		var _g1 = v;
		switch(_g1._hx_index) {
		case 0:
			return thx_Either.Left((thx__$Semigroup_Semigroup_$Impl_$.get_append(s))(_g,_g1.value));
		case 1:
			return thx_Either.Left(_g);
		}
		break;
	case 1:
		var _g11 = this1.value;
		var _g2 = v;
		switch(_g2._hx_index) {
		case 0:
			return thx_Either.Left(_g2.value);
		case 1:
			return thx_Either.Right(_g2.value(_g11));
		}
		break;
	}
};
thx__$Validation_Validation_$Impl_$.flatMapV = function(this1,f) {
	switch(this1._hx_index) {
	case 0:
		return thx_Either.Left(this1.value);
	case 1:
		return f(this1.value);
	}
};
thx__$Validation_Validation_$Impl_$.orElseV = function(this1,other,s) {
	var _g = other;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.value;
		switch(_g._hx_index) {
		case 0:
			return thx_Either.Left((thx__$Semigroup_Semigroup_$Impl_$.get_append(s))(_g1,_g.value));
		case 1:
			return other;
		}
		break;
	case 1:
		return this1;
	}
};
thx__$Validation_Validation_$Impl_$.foldLeft = function(this1,b,f) {
	return thx_Eithers.foldLeft(this1,b,f);
};
thx__$Validation_Validation_$Impl_$.foldMap = function(this1,f,m) {
	return thx_Eithers.foldMap(this1,f,m);
};
thx__$Validation_Validation_$Impl_$.leftMap = function(this1,f) {
	return thx_Eithers.leftMap(this1,f);
};
thx__$Validation_Validation_$Impl_$.wrapNel = function(this1) {
	return thx_Eithers.leftMap(this1,thx__$Nel_Nel_$Impl_$.pure);
};
thx__$Validation_Validation_$Impl_$.ensure = function(this1,p,error) {
	return thx_Eithers.ensure(this1,p,error);
};
thx__$Validation_Validation_$Impl_$.vnel = function(e) {
	return e;
};
thx__$Validation_Validation_$Impl_$.val1 = function(f,v1) {
	return thx__$Validation_Validation_$Impl_$.map(v1,f);
};
thx__$Validation_Validation_$Impl_$.val2 = function(f,v1,v2,s) {
	return thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(f)),s);
};
thx__$Validation_Validation_$Impl_$.val3 = function(f,v1,v2,v3,s) {
	var f1 = f;
	return thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	})),s),s);
};
thx__$Validation_Validation_$Impl_$.val4 = function(f,v1,v2,v3,v4,s) {
	var f1 = f;
	var f2 = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f2(a1,b1,c1);
		};
	})),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val5 = function(f,v1,v2,v3,v4,v5,s) {
	var f1 = f;
	var f2 = function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	};
	var f3 = function(a1,b1,c1) {
		return function(d1) {
			return f2(a1,b1,c1,d1);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f3(a2,b2,c2);
		};
	})),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val6 = function(f,v1,v2,v3,v4,v5,v6,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f2(a1,b1,c1,d1,e1);
		};
	};
	var f4 = function(a2,b2,c2) {
		return function(d2) {
			return f3(a2,b2,c2,d2);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f4(a3,b3,c3);
		};
	})),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val7 = function(f,v1,v2,v3,v4,v5,v6,v7,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f1(a,b,c,d,e,f0,g);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1) {
		return function(f01) {
			return f2(a1,b1,c1,d1,e1,f01);
		};
	};
	var f4 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f3(a2,b2,c2,d2,e2);
		};
	};
	var f5 = function(a3,b3,c3) {
		return function(d3) {
			return f4(a3,b3,c3,d3);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f5(a4,b4,c4);
		};
	})),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val8 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f1(a,b,c,d,e,f0,g,h);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01) {
		return function(g1) {
			return f2(a1,b1,c1,d1,e1,f01,g1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2) {
		return function(f02) {
			return f3(a2,b2,c2,d2,e2,f02);
		};
	};
	var f5 = function(a3,b3,c3,d3) {
		return function(e3) {
			return f4(a3,b3,c3,d3,e3);
		};
	};
	var f6 = function(a4,b4,c4) {
		return function(d4) {
			return f5(a4,b4,c4,d4);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a5,b5) {
		return function(c5) {
			return f6(a5,b5,c5);
		};
	})),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val9 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f1(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1) {
		return function(h1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02) {
		return function(g2) {
			return f3(a2,b2,c2,d2,e2,f02,g2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3) {
		return function(f03) {
			return f4(a3,b3,c3,d3,e3,f03);
		};
	};
	var f6 = function(a4,b4,c4,d4) {
		return function(e4) {
			return f5(a4,b4,c4,d4,e4);
		};
	};
	var f7 = function(a5,b5,c5) {
		return function(d5) {
			return f6(a5,b5,c5,d5);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a6,b6) {
		return function(c6) {
			return f7(a6,b6,c6);
		};
	})),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val10 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f1(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1) {
		return function(i1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2) {
		return function(h2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03) {
		return function(g3) {
			return f4(a3,b3,c3,d3,e3,f03,g3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4) {
		return function(f04) {
			return f5(a4,b4,c4,d4,e4,f04);
		};
	};
	var f7 = function(a5,b5,c5,d5) {
		return function(e5) {
			return f6(a5,b5,c5,d5,e5);
		};
	};
	var f8 = function(a6,b6,c6) {
		return function(d6) {
			return f7(a6,b6,c6,d6);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a7,b7) {
		return function(c7) {
			return f8(a7,b7,c7);
		};
	})),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val11 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1) {
		return function(j1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2) {
		return function(i2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3) {
		return function(h3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04) {
		return function(g4) {
			return f5(a4,b4,c4,d4,e4,f04,g4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5) {
		return function(f05) {
			return f6(a5,b5,c5,d5,e5,f05);
		};
	};
	var f8 = function(a6,b6,c6,d6) {
		return function(e6) {
			return f7(a6,b6,c6,d6,e6);
		};
	};
	var f9 = function(a7,b7,c7) {
		return function(d7) {
			return f8(a7,b7,c7,d7);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a8,b8) {
		return function(c8) {
			return f9(a8,b8,c8);
		};
	})),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val12 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1) {
		return function(k1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2) {
		return function(j2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3) {
		return function(i3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4) {
		return function(h4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05) {
		return function(g5) {
			return f6(a5,b5,c5,d5,e5,f05,g5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6) {
		return function(f06) {
			return f7(a6,b6,c6,d6,e6,f06);
		};
	};
	var f9 = function(a7,b7,c7,d7) {
		return function(e7) {
			return f8(a7,b7,c7,d7,e7);
		};
	};
	var f10 = function(a8,b8,c8) {
		return function(d8) {
			return f9(a8,b8,c8,d8);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a9,b9) {
		return function(c9) {
			return f10(a9,b9,c9);
		};
	})),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val13 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l) {
		return function(m) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1) {
		return function(l1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2) {
		return function(k2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3) {
		return function(j3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4) {
		return function(i4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5) {
		return function(h5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06) {
		return function(g6) {
			return f7(a6,b6,c6,d6,e6,f06,g6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7) {
		return function(f07) {
			return f8(a7,b7,c7,d7,e7,f07);
		};
	};
	var f10 = function(a8,b8,c8,d8) {
		return function(e8) {
			return f9(a8,b8,c8,d8,e8);
		};
	};
	var f11 = function(a9,b9,c9) {
		return function(d9) {
			return f10(a9,b9,c9,d9);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a10,b10) {
		return function(c10) {
			return f11(a10,b10,c10);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val14 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m) {
		return function(n) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1) {
		return function(m1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2) {
		return function(l2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3) {
		return function(k3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4,i4) {
		return function(j4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5,h5) {
		return function(i5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5,i5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06,g6) {
		return function(h6) {
			return f7(a6,b6,c6,d6,e6,f06,g6,h6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7,f07) {
		return function(g7) {
			return f8(a7,b7,c7,d7,e7,f07,g7);
		};
	};
	var f10 = function(a8,b8,c8,d8,e8) {
		return function(f08) {
			return f9(a8,b8,c8,d8,e8,f08);
		};
	};
	var f11 = function(a9,b9,c9,d9) {
		return function(e9) {
			return f10(a9,b9,c9,d9,e9);
		};
	};
	var f12 = function(a10,b10,c10) {
		return function(d10) {
			return f11(a10,b10,c10,d10);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v14,thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a11,b11) {
		return function(c11) {
			return f12(a11,b11,c11);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val15 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n) {
		return function(o) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1) {
		return function(n1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2) {
		return function(m2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3) {
		return function(l3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4) {
		return function(k4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5,h5,i5) {
		return function(j5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06,g6,h6) {
		return function(i6) {
			return f7(a6,b6,c6,d6,e6,f06,g6,h6,i6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7,f07,g7) {
		return function(h7) {
			return f8(a7,b7,c7,d7,e7,f07,g7,h7);
		};
	};
	var f10 = function(a8,b8,c8,d8,e8,f08) {
		return function(g8) {
			return f9(a8,b8,c8,d8,e8,f08,g8);
		};
	};
	var f11 = function(a9,b9,c9,d9,e9) {
		return function(f09) {
			return f10(a9,b9,c9,d9,e9,f09);
		};
	};
	var f12 = function(a10,b10,c10,d10) {
		return function(e10) {
			return f11(a10,b10,c10,d10,e10);
		};
	};
	var f13 = function(a11,b11,c11) {
		return function(d11) {
			return f12(a11,b11,c11,d11);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v15,thx__$Validation_Validation_$Impl_$.ap(v14,thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a12,b12) {
		return function(c12) {
			return f13(a12,b12,c12);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val16 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o) {
		return function(p) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1) {
		return function(o1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2) {
		return function(n2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3) {
		return function(m3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4) {
		return function(l4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5) {
		return function(k5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06,g6,h6,i6) {
		return function(j6) {
			return f7(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7,f07,g7,h7) {
		return function(i7) {
			return f8(a7,b7,c7,d7,e7,f07,g7,h7,i7);
		};
	};
	var f10 = function(a8,b8,c8,d8,e8,f08,g8) {
		return function(h8) {
			return f9(a8,b8,c8,d8,e8,f08,g8,h8);
		};
	};
	var f11 = function(a9,b9,c9,d9,e9,f09) {
		return function(g9) {
			return f10(a9,b9,c9,d9,e9,f09,g9);
		};
	};
	var f12 = function(a10,b10,c10,d10,e10) {
		return function(f010) {
			return f11(a10,b10,c10,d10,e10,f010);
		};
	};
	var f13 = function(a11,b11,c11,d11) {
		return function(e11) {
			return f12(a11,b11,c11,d11,e11);
		};
	};
	var f14 = function(a12,b12,c12) {
		return function(d12) {
			return f13(a12,b12,c12,d12);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v16,thx__$Validation_Validation_$Impl_$.ap(v15,thx__$Validation_Validation_$Impl_$.ap(v14,thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a13,b13) {
		return function(c13) {
			return f14(a13,b13,c13);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val17 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p) {
		return function(q) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1) {
		return function(p1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2) {
		return function(o2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2,o2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3) {
		return function(n3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3,n3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4) {
		return function(m4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4,m4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5) {
		return function(l5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5,l5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6) {
		return function(k6) {
			return f7(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6,k6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7,f07,g7,h7,i7) {
		return function(j7) {
			return f8(a7,b7,c7,d7,e7,f07,g7,h7,i7,j7);
		};
	};
	var f10 = function(a8,b8,c8,d8,e8,f08,g8,h8) {
		return function(i8) {
			return f9(a8,b8,c8,d8,e8,f08,g8,h8,i8);
		};
	};
	var f11 = function(a9,b9,c9,d9,e9,f09,g9) {
		return function(h9) {
			return f10(a9,b9,c9,d9,e9,f09,g9,h9);
		};
	};
	var f12 = function(a10,b10,c10,d10,e10,f010) {
		return function(g10) {
			return f11(a10,b10,c10,d10,e10,f010,g10);
		};
	};
	var f13 = function(a11,b11,c11,d11,e11) {
		return function(f011) {
			return f12(a11,b11,c11,d11,e11,f011);
		};
	};
	var f14 = function(a12,b12,c12,d12) {
		return function(e12) {
			return f13(a12,b12,c12,d12,e12);
		};
	};
	var f15 = function(a13,b13,c13) {
		return function(d13) {
			return f14(a13,b13,c13,d13);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v17,thx__$Validation_Validation_$Impl_$.ap(v16,thx__$Validation_Validation_$Impl_$.ap(v15,thx__$Validation_Validation_$Impl_$.ap(v14,thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a14,b14) {
		return function(c14) {
			return f15(a14,b14,c14);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val18 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q) {
		return function(r) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1) {
		return function(q1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2,o2) {
		return function(p2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3,n3) {
		return function(o3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3,n3,o3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4,m4) {
		return function(n4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4,m4,n4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5,l5) {
		return function(m5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5,l5,m5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6,k6) {
		return function(l6) {
			return f7(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6,k6,l6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7,f07,g7,h7,i7,j7) {
		return function(k7) {
			return f8(a7,b7,c7,d7,e7,f07,g7,h7,i7,j7,k7);
		};
	};
	var f10 = function(a8,b8,c8,d8,e8,f08,g8,h8,i8) {
		return function(j8) {
			return f9(a8,b8,c8,d8,e8,f08,g8,h8,i8,j8);
		};
	};
	var f11 = function(a9,b9,c9,d9,e9,f09,g9,h9) {
		return function(i9) {
			return f10(a9,b9,c9,d9,e9,f09,g9,h9,i9);
		};
	};
	var f12 = function(a10,b10,c10,d10,e10,f010,g10) {
		return function(h10) {
			return f11(a10,b10,c10,d10,e10,f010,g10,h10);
		};
	};
	var f13 = function(a11,b11,c11,d11,e11,f011) {
		return function(g11) {
			return f12(a11,b11,c11,d11,e11,f011,g11);
		};
	};
	var f14 = function(a12,b12,c12,d12,e12) {
		return function(f012) {
			return f13(a12,b12,c12,d12,e12,f012);
		};
	};
	var f15 = function(a13,b13,c13,d13) {
		return function(e13) {
			return f14(a13,b13,c13,d13,e13);
		};
	};
	var f16 = function(a14,b14,c14) {
		return function(d14) {
			return f15(a14,b14,c14,d14);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v18,thx__$Validation_Validation_$Impl_$.ap(v17,thx__$Validation_Validation_$Impl_$.ap(v16,thx__$Validation_Validation_$Impl_$.ap(v15,thx__$Validation_Validation_$Impl_$.ap(v14,thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a15,b15) {
		return function(c15) {
			return f16(a15,b15,c15);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val19 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r) {
		return function(s1) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s1);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1) {
		return function(r1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1,r1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2) {
		return function(q2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3,n3,o3) {
		return function(p3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3,n3,o3,p3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4,m4,n4) {
		return function(o4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4,m4,n4,o4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5,l5,m5) {
		return function(n5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5,l5,m5,n5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6,k6,l6) {
		return function(m6) {
			return f7(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6,k6,l6,m6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7,f07,g7,h7,i7,j7,k7) {
		return function(l7) {
			return f8(a7,b7,c7,d7,e7,f07,g7,h7,i7,j7,k7,l7);
		};
	};
	var f10 = function(a8,b8,c8,d8,e8,f08,g8,h8,i8,j8) {
		return function(k8) {
			return f9(a8,b8,c8,d8,e8,f08,g8,h8,i8,j8,k8);
		};
	};
	var f11 = function(a9,b9,c9,d9,e9,f09,g9,h9,i9) {
		return function(j9) {
			return f10(a9,b9,c9,d9,e9,f09,g9,h9,i9,j9);
		};
	};
	var f12 = function(a10,b10,c10,d10,e10,f010,g10,h10) {
		return function(i10) {
			return f11(a10,b10,c10,d10,e10,f010,g10,h10,i10);
		};
	};
	var f13 = function(a11,b11,c11,d11,e11,f011,g11) {
		return function(h11) {
			return f12(a11,b11,c11,d11,e11,f011,g11,h11);
		};
	};
	var f14 = function(a12,b12,c12,d12,e12,f012) {
		return function(g12) {
			return f13(a12,b12,c12,d12,e12,f012,g12);
		};
	};
	var f15 = function(a13,b13,c13,d13,e13) {
		return function(f013) {
			return f14(a13,b13,c13,d13,e13,f013);
		};
	};
	var f16 = function(a14,b14,c14,d14) {
		return function(e14) {
			return f15(a14,b14,c14,d14,e14);
		};
	};
	var f17 = function(a15,b15,c15) {
		return function(d15) {
			return f16(a15,b15,c15,d15);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v19,thx__$Validation_Validation_$Impl_$.ap(v18,thx__$Validation_Validation_$Impl_$.ap(v17,thx__$Validation_Validation_$Impl_$.ap(v16,thx__$Validation_Validation_$Impl_$.ap(v15,thx__$Validation_Validation_$Impl_$.ap(v14,thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a16,b16) {
		return function(c16) {
			return f17(a16,b16,c16);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val20 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s1) {
		return function(t) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s1,t);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1,r1) {
		return function(s2) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1,r1,s2);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2) {
		return function(r2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2,r2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3,n3,o3,p3) {
		return function(q3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3,n3,o3,p3,q3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4,m4,n4,o4) {
		return function(p4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4,m4,n4,o4,p4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5,l5,m5,n5) {
		return function(o5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5,l5,m5,n5,o5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6,k6,l6,m6) {
		return function(n6) {
			return f7(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6,k6,l6,m6,n6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7,f07,g7,h7,i7,j7,k7,l7) {
		return function(m7) {
			return f8(a7,b7,c7,d7,e7,f07,g7,h7,i7,j7,k7,l7,m7);
		};
	};
	var f10 = function(a8,b8,c8,d8,e8,f08,g8,h8,i8,j8,k8) {
		return function(l8) {
			return f9(a8,b8,c8,d8,e8,f08,g8,h8,i8,j8,k8,l8);
		};
	};
	var f11 = function(a9,b9,c9,d9,e9,f09,g9,h9,i9,j9) {
		return function(k9) {
			return f10(a9,b9,c9,d9,e9,f09,g9,h9,i9,j9,k9);
		};
	};
	var f12 = function(a10,b10,c10,d10,e10,f010,g10,h10,i10) {
		return function(j10) {
			return f11(a10,b10,c10,d10,e10,f010,g10,h10,i10,j10);
		};
	};
	var f13 = function(a11,b11,c11,d11,e11,f011,g11,h11) {
		return function(i11) {
			return f12(a11,b11,c11,d11,e11,f011,g11,h11,i11);
		};
	};
	var f14 = function(a12,b12,c12,d12,e12,f012,g12) {
		return function(h12) {
			return f13(a12,b12,c12,d12,e12,f012,g12,h12);
		};
	};
	var f15 = function(a13,b13,c13,d13,e13,f013) {
		return function(g13) {
			return f14(a13,b13,c13,d13,e13,f013,g13);
		};
	};
	var f16 = function(a14,b14,c14,d14,e14) {
		return function(f014) {
			return f15(a14,b14,c14,d14,e14,f014);
		};
	};
	var f17 = function(a15,b15,c15,d15) {
		return function(e15) {
			return f16(a15,b15,c15,d15,e15);
		};
	};
	var f18 = function(a16,b16,c16) {
		return function(d16) {
			return f17(a16,b16,c16,d16);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v20,thx__$Validation_Validation_$Impl_$.ap(v19,thx__$Validation_Validation_$Impl_$.ap(v18,thx__$Validation_Validation_$Impl_$.ap(v17,thx__$Validation_Validation_$Impl_$.ap(v16,thx__$Validation_Validation_$Impl_$.ap(v15,thx__$Validation_Validation_$Impl_$.ap(v14,thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a17,b17) {
		return function(c17) {
			return f18(a17,b17,c17);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
var thx_ValidationExtensions = function() { };
thx_ValidationExtensions.__name__ = "thx.ValidationExtensions";
thx_ValidationExtensions.leftMapNel = function(n,f) {
	return thx_Eithers.leftMap(n,function(n1) {
		return thx__$Nel_Nel_$Impl_$.map(n1,f);
	});
};
thx_ValidationExtensions.ensureNel = function(v,p,error) {
	if(v._hx_index == 1) {
		var a = v.value;
		if(p(a)) {
			return v;
		} else {
			return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error));
		}
	} else {
		return v;
	}
};
thx_ValidationExtensions.appendVNel = function(target,item) {
	switch(target._hx_index) {
	case 0:
		var _g = target.value;
		switch(item._hx_index) {
		case 0:
			var errors1 = _g;
			var errors2 = item.value;
			return thx_Either.Left(thx__$Nel_Nel_$Impl_$.append(errors1,errors2));
		case 1:
			var errors = _g;
			return thx_Either.Left(errors);
		}
		break;
	case 1:
		var _g3 = target.value;
		switch(item._hx_index) {
		case 0:
			var errors3 = item.value;
			return thx_Either.Left(errors3);
		case 1:
			var values = _g3;
			var value = item.value;
			return thx_Either.Right(thx_Arrays.append(values,value));
		}
		break;
	}
};
thx_ValidationExtensions.appendValidation = function(target,item) {
	return thx_ValidationExtensions.appendVNel(target,thx_Eithers.toVNel(item));
};
thx_ValidationExtensions.appendVNels = function(target,items) {
	return thx_Arrays.reduce(items,thx_ValidationExtensions.appendVNel,target);
};
thx_ValidationExtensions.appendValidations = function(target,items) {
	return thx_Arrays.reduce(items,thx_ValidationExtensions.appendValidation,target);
};
var thx_error_ErrorWrapper = function(message,innerError,stack,pos) {
	thx_Error.call(this,message,stack,pos);
	this.innerError = innerError;
};
thx_error_ErrorWrapper.__name__ = "thx.error.ErrorWrapper";
thx_error_ErrorWrapper.__super__ = thx_Error;
thx_error_ErrorWrapper.prototype = $extend(thx_Error.prototype,{
	innerError: null
	,__class__: thx_error_ErrorWrapper
});
var thx_fp__$Map_Map_$Impl_$ = {};
thx_fp__$Map_Map_$Impl_$.__name__ = "thx.fp._Map.Map_Impl_";
thx_fp__$Map_Map_$Impl_$.empty = function() {
	return thx_fp_MapImpl.Tip;
};
thx_fp__$Map_Map_$Impl_$.singleton = function(k,v) {
	return thx_fp_MapImpl.Bin(1,k,v,thx_fp_MapImpl.Tip,thx_fp_MapImpl.Tip);
};
thx_fp__$Map_Map_$Impl_$.bin = function(k,v,lhs,rhs) {
	return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k,v,lhs,rhs);
};
thx_fp__$Map_Map_$Impl_$.fromNative = function(map,comparator) {
	var r = thx_fp_MapImpl.Tip;
	var key = map.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		r = thx_fp__$Map_Map_$Impl_$.insert(r,key1,map.get(key1),comparator);
	}
	return r;
};
thx_fp__$Map_Map_$Impl_$.lookup = function(this1,key,comparator) {
	switch(this1._hx_index) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		var _g4 = this1.rhs;
		var _g3 = this1.lhs;
		var _g2 = this1.value;
		var c = comparator(key,this1.key);
		switch(c._hx_index) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.lookup(_g3,key,comparator);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.lookup(_g4,key,comparator);
		case 2:
			return haxe_ds_Option.Some(_g2);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.lookupTuple = function(this1,key,comparator) {
	switch(this1._hx_index) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		var _g4 = this1.rhs;
		var _g3 = this1.lhs;
		var _g2 = this1.value;
		var _g1 = this1.key;
		var c = comparator(key,_g1);
		switch(c._hx_index) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.lookupTuple(_g3,key,comparator);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.lookupTuple(_g4,key,comparator);
		case 2:
			var this2 = { _0 : _g1, _1 : _g2};
			return haxe_ds_Option.Some(this2);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.delete = function(this1,key,comparator) {
	switch(this1._hx_index) {
	case 0:
		return thx_fp_MapImpl.Tip;
	case 1:
		var _g4 = this1.rhs;
		var _g3 = this1.lhs;
		var _g2 = this1.value;
		var _g1 = this1.key;
		switch(comparator(key,_g1)._hx_index) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.balance(_g1,_g2,thx_fp__$Map_Map_$Impl_$.delete(_g3,key,comparator),_g4);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.balance(_g1,_g2,_g3,thx_fp__$Map_Map_$Impl_$.delete(_g4,key,comparator));
		case 2:
			return thx_fp__$Map_Map_$Impl_$.glue(_g3,_g4);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.insert = function(this1,kx,x,comparator) {
	switch(this1._hx_index) {
	case 0:
		return thx_fp_MapImpl.Bin(1,kx,x,thx_fp_MapImpl.Tip,thx_fp_MapImpl.Tip);
	case 1:
		var _g4 = this1.rhs;
		var _g3 = this1.lhs;
		var _g2 = this1.value;
		var _g1 = this1.key;
		var _g = this1.size;
		switch(comparator(kx,_g1)._hx_index) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.balance(_g1,_g2,thx_fp__$Map_Map_$Impl_$.insert(_g3,kx,x,comparator),_g4);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.balance(_g1,_g2,_g3,thx_fp__$Map_Map_$Impl_$.insert(_g4,kx,x,comparator));
		case 2:
			return thx_fp_MapImpl.Bin(_g,kx,x,_g3,_g4);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeft = function(this1,b,f) {
	switch(this1._hx_index) {
	case 0:
		return b;
	case 1:
		return thx_fp__$Map_Map_$Impl_$.foldLeft(this1.rhs,thx_fp__$Map_Map_$Impl_$.foldLeft(this1.lhs,f(b,this1.value),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.map = function(this1,f) {
	switch(this1._hx_index) {
	case 0:
		return thx_fp_MapImpl.Tip;
	case 1:
		return thx_fp_MapImpl.Bin(this1.size,this1.key,f(this1.value),thx_fp__$Map_Map_$Impl_$.map(this1.lhs,f),thx_fp__$Map_Map_$Impl_$.map(this1.rhs,f));
	}
};
thx_fp__$Map_Map_$Impl_$.values = function(this1) {
	return thx_fp__$Map_Map_$Impl_$.foldLeft(this1,[],function(acc,v) {
		acc.push(v);
		return acc;
	});
};
thx_fp__$Map_Map_$Impl_$.foldLeftKeys = function(this1,b,f) {
	switch(this1._hx_index) {
	case 0:
		return b;
	case 1:
		return thx_fp__$Map_Map_$Impl_$.foldLeftKeys(this1.rhs,thx_fp__$Map_Map_$Impl_$.foldLeftKeys(this1.lhs,f(b,this1.key),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeftAll = function(this1,b,f) {
	switch(this1._hx_index) {
	case 0:
		return b;
	case 1:
		return thx_fp__$Map_Map_$Impl_$.foldLeftAll(this1.rhs,thx_fp__$Map_Map_$Impl_$.foldLeftAll(this1.lhs,f(b,this1.key,this1.value),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeftTuples = function(this1,b,f) {
	switch(this1._hx_index) {
	case 0:
		return b;
	case 1:
		var this2 = { _0 : this1.key, _1 : this1.value};
		return thx_fp__$Map_Map_$Impl_$.foldLeftTuples(this1.rhs,thx_fp__$Map_Map_$Impl_$.foldLeftTuples(this1.lhs,f(b,this2),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.size = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return 0;
	case 1:
		return this1.size;
	}
};
thx_fp__$Map_Map_$Impl_$.balance = function(k,x,lhs,rhs) {
	var ls = thx_fp__$Map_Map_$Impl_$.size(lhs);
	var rs = thx_fp__$Map_Map_$Impl_$.size(rhs);
	var xs = ls + rs + 1;
	if(ls + rs <= 1) {
		return thx_fp_MapImpl.Bin(xs,k,x,lhs,rhs);
	} else if(rs >= 5 * ls) {
		return thx_fp__$Map_Map_$Impl_$.rotateLeft(k,x,lhs,rhs);
	} else if(ls >= 5 * rs) {
		return thx_fp__$Map_Map_$Impl_$.rotateRight(k,x,lhs,rhs);
	} else {
		return thx_fp_MapImpl.Bin(xs,k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.glue = function(this1,that) {
	if(this1._hx_index == 0) {
		return that;
	} else if(that._hx_index == 0) {
		return this1;
	} else if(thx_fp__$Map_Map_$Impl_$.size(this1) > thx_fp__$Map_Map_$Impl_$.size(that)) {
		var t = thx_fp__$Map_Map_$Impl_$.deleteFindMax(this1);
		return thx_fp__$Map_Map_$Impl_$.balance(t.k,t.x,t.t,that);
	} else {
		var t1 = thx_fp__$Map_Map_$Impl_$.deleteFindMin(that);
		return thx_fp__$Map_Map_$Impl_$.balance(t1.k,t1.x,this1,t1.t);
	}
};
thx_fp__$Map_Map_$Impl_$.deleteFindMin = function(map) {
	switch(map._hx_index) {
	case 0:
		throw new thx_Error("can not return the minimal element of an empty map",null,{ fileName : "thx/fp/Map.hx", lineNumber : 161, className : "thx.fp._Map.Map_Impl_", methodName : "deleteFindMin"});
	case 1:
		var _g4 = map.rhs;
		var _g3 = map.lhs;
		var _g2 = map.value;
		var _g1 = map.key;
		if(_g3._hx_index == 0) {
			var r = _g4;
			var k = _g1;
			var x = _g2;
			return { k : k, x : x, t : r};
		} else {
			var r1 = _g4;
			var k1 = _g1;
			var x1 = _g2;
			var l = _g3;
			var t = thx_fp__$Map_Map_$Impl_$.deleteFindMin(l);
			return { k : t.k, x : t.x, t : thx_fp__$Map_Map_$Impl_$.balance(k1,x1,t.t,r1)};
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.deleteFindMax = function(map) {
	switch(map._hx_index) {
	case 0:
		throw new thx_Error("can not return the maximal element of an empty map",null,{ fileName : "thx/fp/Map.hx", lineNumber : 171, className : "thx.fp._Map.Map_Impl_", methodName : "deleteFindMax"});
	case 1:
		var _g4 = map.rhs;
		var _g3 = map.lhs;
		var _g2 = map.value;
		var _g1 = map.key;
		if(_g4._hx_index == 0) {
			var k = _g1;
			var x = _g2;
			var l = _g3;
			return { k : k, x : x, t : l};
		} else {
			var k1 = _g1;
			var x1 = _g2;
			var l1 = _g3;
			var r = _g4;
			var t = thx_fp__$Map_Map_$Impl_$.deleteFindMax(r);
			return { k : t.k, x : t.x, t : thx_fp__$Map_Map_$Impl_$.balance(k1,x1,l1,t.t)};
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.rotateLeft = function(k,x,lhs,rhs) {
	if(rhs._hx_index == 1) {
		var ry = rhs.rhs;
		var ly = rhs.lhs;
		if(thx_fp__$Map_Map_$Impl_$.size(ly) < 2 * thx_fp__$Map_Map_$Impl_$.size(ry)) {
			return thx_fp__$Map_Map_$Impl_$.singleLeft(k,x,lhs,rhs);
		} else {
			return thx_fp__$Map_Map_$Impl_$.doubleLeft(k,x,lhs,rhs);
		}
	} else {
		return thx_fp__$Map_Map_$Impl_$.doubleLeft(k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.rotateRight = function(k,x,lhs,rhs) {
	if(lhs._hx_index == 1) {
		var ry = lhs.rhs;
		var ly = lhs.lhs;
		if(thx_fp__$Map_Map_$Impl_$.size(ry) < 2 * thx_fp__$Map_Map_$Impl_$.size(ly)) {
			return thx_fp__$Map_Map_$Impl_$.singleRight(k,x,lhs,rhs);
		} else {
			return thx_fp__$Map_Map_$Impl_$.doubleRight(k,x,lhs,rhs);
		}
	} else {
		return thx_fp__$Map_Map_$Impl_$.doubleRight(k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.singleLeft = function(k1,x1,t1,rhs) {
	if(rhs._hx_index == 1) {
		var t3 = rhs.rhs;
		var t2 = rhs.lhs;
		var x2 = rhs.value;
		var k2 = rhs.key;
		var lhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k1,x1,t1,t2);
		return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(t3) + 1,k2,x2,lhs,t3);
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 193, className : "thx.fp._Map.Map_Impl_", methodName : "singleLeft"});
	}
};
thx_fp__$Map_Map_$Impl_$.singleRight = function(k1,x1,lhs,t3) {
	if(lhs._hx_index == 1) {
		var t2 = lhs.rhs;
		var t1 = lhs.lhs;
		var x2 = lhs.value;
		var k2 = lhs.key;
		var rhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t2) + thx_fp__$Map_Map_$Impl_$.size(t3) + 1,k1,x1,t2,t3);
		return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k2,x2,t1,rhs);
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 199, className : "thx.fp._Map.Map_Impl_", methodName : "singleRight"});
	}
};
thx_fp__$Map_Map_$Impl_$.doubleLeft = function(k1,x1,t1,rhs) {
	if(rhs._hx_index == 1) {
		var _g3 = rhs.lhs;
		if(_g3._hx_index == 1) {
			var t4 = rhs.rhs;
			var k2 = rhs.key;
			var x2 = rhs.value;
			var t3 = _g3.rhs;
			var t2 = _g3.lhs;
			var x3 = _g3.value;
			var k3 = _g3.key;
			var lhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k1,x1,t1,t2);
			var rhs1 = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t3) + thx_fp__$Map_Map_$Impl_$.size(t4) + 1,k2,x2,t3,t4);
			return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(rhs1) + 1,k3,x3,lhs,rhs1);
		} else {
			throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 206, className : "thx.fp._Map.Map_Impl_", methodName : "doubleLeft"});
		}
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 206, className : "thx.fp._Map.Map_Impl_", methodName : "doubleLeft"});
	}
};
thx_fp__$Map_Map_$Impl_$.doubleRight = function(k1,x1,lhs,t4) {
	if(lhs._hx_index == 1) {
		var _g4 = lhs.rhs;
		if(_g4._hx_index == 1) {
			var k2 = lhs.key;
			var x2 = lhs.value;
			var t1 = lhs.lhs;
			var t3 = _g4.rhs;
			var t2 = _g4.lhs;
			var x3 = _g4.value;
			var k3 = _g4.key;
			var lhs1 = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k2,x2,t1,t2);
			var rhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t3) + thx_fp__$Map_Map_$Impl_$.size(t4) + 1,k1,x1,t3,t4);
			return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs1) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k3,x3,lhs1,rhs);
		} else {
			throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 213, className : "thx.fp._Map.Map_Impl_", methodName : "doubleRight"});
		}
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 213, className : "thx.fp._Map.Map_Impl_", methodName : "doubleRight"});
	}
};
var thx_fp_MapImpl = $hxEnums["thx.fp.MapImpl"] = { __ename__ : "thx.fp.MapImpl", __constructs__ : ["Tip","Bin"]
	,Tip: {_hx_index:0,__enum__:"thx.fp.MapImpl",toString:$estr}
	,Bin: ($_=function(size,key,value,lhs,rhs) { return {_hx_index:1,size:size,key:key,value:value,lhs:lhs,rhs:rhs,__enum__:"thx.fp.MapImpl",toString:$estr}; },$_.__params__ = ["size","key","value","lhs","rhs"],$_)
};
var utest_Assert = function() { };
utest_Assert.__name__ = "utest.Assert";
utest_Assert.processResult = function(cond,getMessage,pos) {
	if(utest_Assert.results == null) {
		throw new js__$Boot_HaxeError("Assert at " + pos.fileName + ":" + pos.lineNumber + " out of context. Most likely you are trying to assert after a test timeout.");
	}
	if(cond) {
		utest_Assert.results.add(utest_Assertation.Success(pos));
	} else {
		utest_Assert.results.add(utest_Assertation.Failure(getMessage(),pos));
	}
};
utest_Assert.isTrue = function(cond,msg,pos) {
	if(utest_Assert.results == null) {
		throw new js__$Boot_HaxeError("Assert at " + pos.fileName + ":" + pos.lineNumber + " out of context. Most likely you are trying to assert after a test timeout.");
	}
	if(cond) {
		utest_Assert.results.add(utest_Assertation.Success(pos));
	} else {
		utest_Assert.results.add(utest_Assertation.Failure(msg != null ? msg : "expected true",pos));
	}
};
utest_Assert.isFalse = function(value,msg,pos) {
	if(utest_Assert.results == null) {
		throw new js__$Boot_HaxeError("Assert at " + pos.fileName + ":" + pos.lineNumber + " out of context. Most likely you are trying to assert after a test timeout.");
	}
	if(value == false) {
		utest_Assert.results.add(utest_Assertation.Success(pos));
	} else {
		utest_Assert.results.add(utest_Assertation.Failure(msg != null ? msg : "expected false",pos));
	}
};
utest_Assert.isNull = function(value,msg,pos) {
	if(utest_Assert.results == null) {
		throw new js__$Boot_HaxeError("Assert at " + pos.fileName + ":" + pos.lineNumber + " out of context. Most likely you are trying to assert after a test timeout.");
	}
	if(value == null) {
		utest_Assert.results.add(utest_Assertation.Success(pos));
	} else {
		utest_Assert.results.add(utest_Assertation.Failure(msg != null ? msg : "expected null but it is " + utest_Assert.q(value),pos));
	}
};
utest_Assert.notNull = function(value,msg,pos) {
	if(utest_Assert.results == null) {
		throw new js__$Boot_HaxeError("Assert at " + pos.fileName + ":" + pos.lineNumber + " out of context. Most likely you are trying to assert after a test timeout.");
	}
	if(value != null) {
		utest_Assert.results.add(utest_Assertation.Success(pos));
	} else {
		utest_Assert.results.add(utest_Assertation.Failure(msg != null ? msg : "expected not null",pos));
	}
};
utest_Assert.is = function(value,type,msg,pos) {
	if(utest_Assert.results == null) {
		throw new js__$Boot_HaxeError("Assert at " + pos.fileName + ":" + pos.lineNumber + " out of context. Most likely you are trying to assert after a test timeout.");
	}
	if(js_Boot.__instanceof(value,type)) {
		utest_Assert.results.add(utest_Assertation.Success(pos));
	} else {
		utest_Assert.results.add(utest_Assertation.Failure(msg != null ? msg : "expected type " + utest_Assert.typeToString(type) + " but it is " + utest_Assert.typeToString(value),pos));
	}
};
utest_Assert.notEquals = function(expected,value,msg,pos) {
	if(utest_Assert.results == null) {
		throw new js__$Boot_HaxeError("Assert at " + pos.fileName + ":" + pos.lineNumber + " out of context. Most likely you are trying to assert after a test timeout.");
	}
	if(expected != value) {
		utest_Assert.results.add(utest_Assertation.Success(pos));
	} else {
		utest_Assert.results.add(utest_Assertation.Failure(msg != null ? msg : "expected " + utest_Assert.q(expected) + " and test value " + utest_Assert.q(value) + " should be different",pos));
	}
};
utest_Assert.equals = function(expected,value,msg,pos) {
	if(utest_Assert.results == null) {
		throw new js__$Boot_HaxeError("Assert at " + pos.fileName + ":" + pos.lineNumber + " out of context. Most likely you are trying to assert after a test timeout.");
	}
	if(expected == value) {
		utest_Assert.results.add(utest_Assertation.Success(pos));
	} else {
		utest_Assert.results.add(utest_Assertation.Failure(msg != null ? msg : "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value),pos));
	}
};
utest_Assert.match = function(pattern,value,msg,pos) {
	var cond = pattern.match(value);
	if(utest_Assert.results == null) {
		throw new js__$Boot_HaxeError("Assert at " + pos.fileName + ":" + pos.lineNumber + " out of context. Most likely you are trying to assert after a test timeout.");
	}
	if(cond) {
		utest_Assert.results.add(utest_Assertation.Success(pos));
	} else {
		utest_Assert.results.add(utest_Assertation.Failure(msg != null ? msg : "the value " + utest_Assert.q(value) + " does not match the provided pattern",pos));
	}
};
utest_Assert.floatEquals = function(expected,value,approx,msg,pos) {
	if(utest_Assert.results == null) {
		throw new js__$Boot_HaxeError("Assert at " + pos.fileName + ":" + pos.lineNumber + " out of context. Most likely you are trying to assert after a test timeout.");
	}
	if(utest_Assert._floatEquals(expected,value,approx)) {
		utest_Assert.results.add(utest_Assertation.Success(pos));
	} else {
		utest_Assert.results.add(utest_Assertation.Failure(msg != null ? msg : "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value),pos));
	}
};
utest_Assert._floatEquals = function(expected,value,approx) {
	if(isNaN(expected)) {
		return isNaN(value);
	} else if(isNaN(value)) {
		return false;
	} else if(!isFinite(expected) && !isFinite(value)) {
		return expected > 0 == value > 0;
	}
	if(null == approx) {
		approx = 1e-5;
	}
	return Math.abs(value - expected) <= approx;
};
utest_Assert.getTypeName = function(v) {
	var _g = Type.typeof(v);
	switch(_g._hx_index) {
	case 0:
		return "`null`";
	case 1:
		return "Int";
	case 2:
		return "Float";
	case 3:
		return "Bool";
	case 4:
		return "Object";
	case 5:
		return "function";
	case 6:
		var c = _g.c;
		return c.__name__;
	case 7:
		var e = _g.e;
		return e.__ename__;
	case 8:
		return "`Unknown`";
	}
};
utest_Assert.isIterable = function(v,isAnonym) {
	var fields = isAnonym ? Reflect.fields(v) : Type.getInstanceFields(js_Boot.getClass(v));
	if(!Lambda.has(fields,"iterator")) {
		return false;
	}
	return Reflect.isFunction(Reflect.field(v,"iterator"));
};
utest_Assert.isIterator = function(v,isAnonym) {
	var fields = isAnonym ? Reflect.fields(v) : Type.getInstanceFields(js_Boot.getClass(v));
	if(!Lambda.has(fields,"next") || !Lambda.has(fields,"hasNext")) {
		return false;
	}
	if(Reflect.isFunction(Reflect.field(v,"next"))) {
		return Reflect.isFunction(Reflect.field(v,"hasNext"));
	} else {
		return false;
	}
};
utest_Assert.sameAs = function(expected,value,status,approx) {
	var texpected = utest_Assert.getTypeName(expected);
	var tvalue = utest_Assert.getTypeName(value);
	status.expectedValue = expected;
	status.actualValue = value;
	if(texpected != tvalue && !(texpected == "Int" && tvalue == "Float" || texpected == "Float" && tvalue == "Int")) {
		status.error = "expected type " + texpected + " but it is " + tvalue + (status.path == "" ? "" : " for field " + status.path);
		return false;
	}
	var _g = Type.typeof(expected);
	switch(_g._hx_index) {
	case 1:case 2:
		if(!utest_Assert._floatEquals(expected,value,approx)) {
			status.error = "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		return true;
	case 0:case 3:
		if(expected != value) {
			status.error = "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		return true;
	case 4:
		if(status.recursive || status.path == "") {
			var tfields = Reflect.fields(value);
			var fields = Reflect.fields(expected);
			var path = status.path;
			var _g1 = 0;
			while(_g1 < fields.length) {
				var field = fields[_g1];
				++_g1;
				HxOverrides.remove(tfields,field);
				status.path = path == "" ? field : path + "." + field;
				if(!Object.prototype.hasOwnProperty.call(value,field)) {
					status.error = "expected field " + status.path + " does not exist in " + utest_Assert.q(value);
					return false;
				}
				var e = Reflect.field(expected,field);
				if(Reflect.isFunction(e)) {
					continue;
				}
				var v = Reflect.field(value,field);
				if(!utest_Assert.sameAs(e,v,status,approx)) {
					return false;
				}
			}
			if(tfields.length > 0) {
				status.error = "the tested object has extra field(s) (" + tfields.join(", ") + ") not included in the expected ones";
				return false;
			}
		}
		if(utest_Assert.isIterator(expected,true)) {
			if(!utest_Assert.isIterator(value,true)) {
				status.error = "expected Iterable but it is not " + (status.path == "" ? "" : " for field " + status.path);
				return false;
			}
			if(status.recursive || status.path == "") {
				var evalues = Lambda.array({ iterator : function() {
					return expected;
				}});
				var vvalues = Lambda.array({ iterator : function() {
					return value;
				}});
				if(evalues.length != vvalues.length) {
					status.error = "expected " + evalues.length + " values in Iterator but they are " + vvalues.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path1 = status.path;
				var _g2 = 0;
				var _g11 = evalues.length;
				while(_g2 < _g11) {
					var i = _g2++;
					status.path = path1 == "" ? "iterator[" + i + "]" : path1 + "[" + i + "]";
					if(!utest_Assert.sameAs(evalues[i],vvalues[i],status,approx)) {
						status.error = "expected " + utest_Assert.q(status.expectedValue) + " but it is " + utest_Assert.q(status.actualValue) + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(utest_Assert.isIterable(expected,true)) {
			if(!utest_Assert.isIterable(value,true)) {
				status.error = "expected Iterator but it is not " + (status.path == "" ? "" : " for field " + status.path);
				return false;
			}
			if(status.recursive || status.path == "") {
				var evalues1 = Lambda.array(expected);
				var vvalues1 = Lambda.array(value);
				if(evalues1.length != vvalues1.length) {
					status.error = "expected " + evalues1.length + " values in Iterable but they are " + vvalues1.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path2 = status.path;
				var _g3 = 0;
				var _g12 = evalues1.length;
				while(_g3 < _g12) {
					var i1 = _g3++;
					status.path = path2 == "" ? "iterable[" + i1 + "]" : path2 + "[" + i1 + "]";
					if(!utest_Assert.sameAs(evalues1[i1],vvalues1[i1],status,approx)) {
						return false;
					}
				}
			}
			return true;
		}
		return true;
	case 5:
		if(!Reflect.compareMethods(expected,value)) {
			status.error = "expected same function reference" + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		return true;
	case 6:
		var c = _g.c;
		var cexpected = c.__name__;
		var c1 = js_Boot.getClass(value);
		var cvalue = c1.__name__;
		if(cexpected != cvalue) {
			status.error = "expected instance of " + utest_Assert.q(cexpected) + " but it is " + utest_Assert.q(cvalue) + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		if(typeof(expected) == "string") {
			if(expected == value) {
				return true;
			} else {
				status.error = "expected string '" + Std.string(expected) + "' but it is '" + Std.string(value) + "'";
				return false;
			}
		}
		if(((expected) instanceof Array) && expected.__enum__ == null) {
			if(status.recursive || status.path == "") {
				if(expected.length != value.length) {
					status.error = "expected " + Std.string(expected.length) + " elements but they are " + Std.string(value.length) + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path3 = status.path;
				var _g4 = 0;
				var _g13 = expected.length;
				while(_g4 < _g13) {
					var i2 = _g4++;
					status.path = path3 == "" ? "array[" + i2 + "]" : path3 + "[" + i2 + "]";
					if(!utest_Assert.sameAs(expected[i2],value[i2],status,approx)) {
						status.error = "expected array element at [" + i2 + "] to have " + utest_Assert.q(status.expectedValue) + " but it is " + utest_Assert.q(status.actualValue) + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(((expected) instanceof Date)) {
			if(expected.getTime() != value.getTime()) {
				status.error = "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path);
				return false;
			}
			return true;
		}
		if(((expected) instanceof haxe_io_Bytes)) {
			if(status.recursive || status.path == "") {
				var ebytes = expected;
				var vbytes = value;
				if(ebytes.length != vbytes.length) {
					return false;
				}
				var _g5 = 0;
				var _g14 = ebytes.length;
				while(_g5 < _g14) {
					var i3 = _g5++;
					if(ebytes.b[i3] != vbytes.b[i3]) {
						status.error = "expected byte " + ebytes.b[i3] + " but it is " + vbytes.b[i3] + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(js_Boot.__implements(expected,haxe_IMap)) {
			if(status.recursive || status.path == "") {
				var map = js_Boot.__cast(expected , haxe_IMap);
				var vmap = js_Boot.__cast(value , haxe_IMap);
				var _g6 = [];
				var k = map.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					_g6.push(k1);
				}
				var keys = _g6;
				var _g15 = [];
				var k2 = vmap.keys();
				while(k2.hasNext()) {
					var k3 = k2.next();
					_g15.push(k3);
				}
				var vkeys = _g15;
				if(keys.length != vkeys.length) {
					status.error = "expected " + keys.length + " keys but they are " + vkeys.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path4 = status.path;
				var _g21 = 0;
				while(_g21 < keys.length) {
					var key = keys[_g21];
					++_g21;
					status.path = path4 == "" ? "hash[" + Std.string(key) + "]" : path4 + "[" + Std.string(key) + "]";
					if(!utest_Assert.sameAs(map.get(key),vmap.get(key),status,approx)) {
						status.error = "expected " + utest_Assert.q(status.expectedValue) + " but it is " + utest_Assert.q(status.actualValue) + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(utest_Assert.isIterator(expected,false)) {
			if(status.recursive || status.path == "") {
				var evalues2 = Lambda.array({ iterator : function() {
					return expected;
				}});
				var vvalues2 = Lambda.array({ iterator : function() {
					return value;
				}});
				if(evalues2.length != vvalues2.length) {
					status.error = "expected " + evalues2.length + " values in Iterator but they are " + vvalues2.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path5 = status.path;
				var _g7 = 0;
				var _g16 = evalues2.length;
				while(_g7 < _g16) {
					var i4 = _g7++;
					status.path = path5 == "" ? "iterator[" + i4 + "]" : path5 + "[" + i4 + "]";
					if(!utest_Assert.sameAs(evalues2[i4],vvalues2[i4],status,approx)) {
						status.error = "expected " + utest_Assert.q(status.expectedValue) + " but it is " + utest_Assert.q(status.actualValue) + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(utest_Assert.isIterable(expected,false)) {
			if(status.recursive || status.path == "") {
				var evalues3 = Lambda.array(expected);
				var vvalues3 = Lambda.array(value);
				if(evalues3.length != vvalues3.length) {
					status.error = "expected " + evalues3.length + " values in Iterable but they are " + vvalues3.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path6 = status.path;
				var _g8 = 0;
				var _g17 = evalues3.length;
				while(_g8 < _g17) {
					var i5 = _g8++;
					status.path = path6 == "" ? "iterable[" + i5 + "]" : path6 + "[" + i5 + "]";
					if(!utest_Assert.sameAs(evalues3[i5],vvalues3[i5],status,approx)) {
						return false;
					}
				}
			}
			return true;
		}
		if(status.recursive || status.path == "") {
			var fields1 = Type.getInstanceFields(js_Boot.getClass(expected));
			var path7 = status.path;
			var _g9 = 0;
			while(_g9 < fields1.length) {
				var field1 = fields1[_g9];
				++_g9;
				status.path = path7 == "" ? field1 : path7 + "." + field1;
				var e1 = Reflect.field(expected,field1);
				if(Reflect.isFunction(e1)) {
					continue;
				}
				var v1 = Reflect.field(value,field1);
				if(!utest_Assert.sameAs(e1,v1,status,approx)) {
					return false;
				}
			}
		}
		return true;
	case 7:
		var e2 = _g.e;
		var eexpected = e2.__ename__;
		var e3 = Type.getEnum(value);
		var evalue = e3.__ename__;
		if(eexpected != evalue) {
			status.error = "expected enumeration of " + utest_Assert.q(eexpected) + " but it is " + utest_Assert.q(evalue) + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		if(status.recursive || status.path == "") {
			if(expected._hx_index != value._hx_index) {
				var e4 = expected;
				var tmp = "expected enum constructor " + utest_Assert.q($hxEnums[e4.__enum__].__constructs__[e4._hx_index]) + " but it is ";
				var e5 = value;
				status.error = tmp + utest_Assert.q($hxEnums[e5.__enum__].__constructs__[e5._hx_index]) + (status.path == "" ? "" : " for field " + status.path);
				return false;
			}
			var eparams = Type.enumParameters(expected);
			var vparams = Type.enumParameters(value);
			var path8 = status.path;
			var _g10 = 0;
			var _g18 = eparams.length;
			while(_g10 < _g18) {
				var i6 = _g10++;
				status.path = path8 == "" ? "enum[" + i6 + "]" : path8 + "[" + i6 + "]";
				if(!utest_Assert.sameAs(eparams[i6],vparams[i6],status,approx)) {
					status.error = "expected enum param " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path) + " with " + status.error;
					return false;
				}
			}
		}
		return true;
	case 8:
		throw new js__$Boot_HaxeError("Unable to compare two unknown types");
	}
};
utest_Assert.q = function(v) {
	if(typeof(v) == "string") {
		return "\"" + StringTools.replace(v,"\"","\\\"") + "\"";
	} else {
		return Std.string(v);
	}
};
utest_Assert.same = function(expected,value,recursive,msg,approx,pos) {
	if(null == approx) {
		approx = 1e-5;
	}
	var status = { recursive : null == recursive ? true : recursive, path : "", error : null, expectedValue : expected, actualValue : value};
	if(utest_Assert.sameAs(expected,value,status,approx)) {
		utest_Assert.pass(msg,pos);
	} else {
		utest_Assert.fail(msg == null ? status.error : msg,pos);
	}
};
utest_Assert.raises = function(method,type,msgNotThrown,msgWrongType,pos) {
	var name = type != null ? type.__name__ : "Dynamic";
	try {
		method();
	} catch( ex ) {
		haxe_CallStack.lastException = ex;
		var ex1 = ((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex;
		if(null == type) {
			utest_Assert.pass(null,pos);
		} else {
			if(null == msgWrongType) {
				msgWrongType = "expected throw of type " + name + " but it is " + Std.string(ex1);
			}
			utest_Assert.isTrue(js_Boot.__instanceof(ex1,type),msgWrongType,pos);
		}
		return;
	}
	if(null == msgNotThrown) {
		msgNotThrown = "exception of type " + name + " not raised";
	}
	utest_Assert.fail(msgNotThrown,pos);
};
utest_Assert.allows = function(possibilities,value,msg,pos) {
	if(Lambda.has(possibilities,value)) {
		utest_Assert.isTrue(true,msg,pos);
	} else {
		utest_Assert.fail(msg == null ? "value " + utest_Assert.q(value) + " not found in the expected possibilities " + Std.string(possibilities) : msg,pos);
	}
};
utest_Assert.contains = function(match,values,msg,pos) {
	if(Lambda.has(values,match)) {
		utest_Assert.isTrue(true,msg,pos);
	} else {
		utest_Assert.fail(msg == null ? "values " + utest_Assert.q(values) + " do not contain " + Std.string(match) : msg,pos);
	}
};
utest_Assert.notContains = function(match,values,msg,pos) {
	if(!Lambda.has(values,match)) {
		utest_Assert.isTrue(true,msg,pos);
	} else {
		utest_Assert.fail(msg == null ? "values " + utest_Assert.q(values) + " do contain " + Std.string(match) : msg,pos);
	}
};
utest_Assert.stringContains = function(match,value,msg,pos) {
	if(value != null && value.indexOf(match) >= 0) {
		utest_Assert.isTrue(true,msg,pos);
	} else {
		utest_Assert.fail(msg == null ? "value " + utest_Assert.q(value) + " does not contain " + utest_Assert.q(match) : msg,pos);
	}
};
utest_Assert.stringSequence = function(sequence,value,msg,pos) {
	if(null == value) {
		utest_Assert.fail(msg == null ? "null argument value" : msg,pos);
		return;
	}
	var p = 0;
	var _g = 0;
	while(_g < sequence.length) {
		var s = sequence[_g];
		++_g;
		var p2 = value.indexOf(s,p);
		if(p2 < 0) {
			if(msg == null) {
				msg = "expected '" + s + "' after ";
				if(p > 0) {
					var cut = HxOverrides.substr(value,0,p);
					if(cut.length > 30) {
						cut = "..." + HxOverrides.substr(cut,-27,null);
					}
					msg += " '" + cut + "'";
				} else {
					msg += " begin";
				}
			}
			utest_Assert.fail(msg,pos);
			return;
		}
		p = p2 + s.length;
	}
	utest_Assert.isTrue(true,msg,pos);
};
utest_Assert.pass = function(msg,pos) {
	if(msg == null) {
		msg = "pass expected";
	}
	utest_Assert.isTrue(true,msg,pos);
};
utest_Assert.fail = function(msg,pos) {
	if(msg == null) {
		msg = "failure expected";
	}
	utest_Assert.isTrue(false,msg,pos);
};
utest_Assert.warn = function(msg) {
	utest_Assert.results.add(utest_Assertation.Warning(msg));
};
utest_Assert.createAsync = function(f,timeout) {
	return function() {
	};
};
utest_Assert.createEvent = function(f,timeout) {
	return function(e) {
	};
};
utest_Assert.typeToString = function(t) {
	try {
		var _t = js_Boot.getClass(t);
		if(_t != null) {
			t = _t;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
	}
	try {
		return t.__name__;
	} catch( e1 ) {
		haxe_CallStack.lastException = e1;
	}
	try {
		var _t1 = Type.getEnum(t);
		if(_t1 != null) {
			t = _t1;
		}
	} catch( e2 ) {
		haxe_CallStack.lastException = e2;
	}
	try {
		return t.__ename__;
	} catch( e3 ) {
		haxe_CallStack.lastException = e3;
	}
	try {
		return Std.string(Type.typeof(t));
	} catch( e4 ) {
		haxe_CallStack.lastException = e4;
	}
	try {
		return Std.string(t);
	} catch( e5 ) {
		haxe_CallStack.lastException = e5;
	}
	return "<unable to retrieve type name>";
};
var utest_Assertation = $hxEnums["utest.Assertation"] = { __ename__ : "utest.Assertation", __constructs__ : ["Success","Failure","Error","SetupError","TeardownError","TimeoutError","AsyncError","Warning","Ignore"]
	,Success: ($_=function(pos) { return {_hx_index:0,pos:pos,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["pos"],$_)
	,Failure: ($_=function(msg,pos) { return {_hx_index:1,msg:msg,pos:pos,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["msg","pos"],$_)
	,Error: ($_=function(e,stack) { return {_hx_index:2,e:e,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["e","stack"],$_)
	,SetupError: ($_=function(e,stack) { return {_hx_index:3,e:e,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["e","stack"],$_)
	,TeardownError: ($_=function(e,stack) { return {_hx_index:4,e:e,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["e","stack"],$_)
	,TimeoutError: ($_=function(missedAsyncs,stack) { return {_hx_index:5,missedAsyncs:missedAsyncs,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["missedAsyncs","stack"],$_)
	,AsyncError: ($_=function(e,stack) { return {_hx_index:6,e:e,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["e","stack"],$_)
	,Warning: ($_=function(msg) { return {_hx_index:7,msg:msg,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["msg"],$_)
	,Ignore: ($_=function(reason) { return {_hx_index:8,reason:reason,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["reason"],$_)
};
var utest_Async = function(timeoutMs) {
	if(timeoutMs == null) {
		timeoutMs = 250;
	}
	this.branches = [];
	this.callbacks = [];
	this.timedOut = false;
	this.resolved = false;
	this.timeoutMs = timeoutMs;
	this.startTime = Date.now() / 1000;
	this.timer = haxe_Timer.delay($bind(this,this.setTimedOutState),timeoutMs);
};
utest_Async.__name__ = "utest.Async";
utest_Async.getResolved = function() {
	if(utest_Async.resolvedInstance == null) {
		utest_Async.resolvedInstance = new utest_Async();
		utest_Async.resolvedInstance.done({ fileName : "utest/Async.hx", lineNumber : 30, className : "utest.Async", methodName : "getResolved"});
	}
	return utest_Async.resolvedInstance;
};
utest_Async.prototype = {
	resolved: null
	,timedOut: null
	,callbacks: null
	,timeoutMs: null
	,startTime: null
	,timer: null
	,branches: null
	,done: function(pos) {
		if(this.resolved) {
			if(this.timedOut) {
				throw new js__$Boot_HaxeError("Cannot done() at " + pos.fileName + ":" + pos.lineNumber + " because async is timed out.");
			} else {
				throw new js__$Boot_HaxeError("Cannot done() at " + pos.fileName + ":" + pos.lineNumber + " because async is done already.");
			}
		}
		this.resolved = true;
		this.timer.stop();
		var _g = 0;
		var _g1 = this.callbacks;
		while(_g < _g1.length) {
			var cb = _g1[_g];
			++_g;
			cb();
		}
	}
	,setTimeout: function(timeoutMs,pos) {
		if(this.resolved) {
			throw new js__$Boot_HaxeError("Cannot setTimeout(" + timeoutMs + ") at " + pos.fileName + ":" + pos.lineNumber + " because async is done.");
		}
		if(this.timedOut) {
			throw new js__$Boot_HaxeError("Cannot setTimeout(" + timeoutMs + ") at " + pos.fileName + ":" + pos.lineNumber + " because async is timed out.");
		}
		this.timer.stop();
		this.timeoutMs = timeoutMs;
		var delay = timeoutMs - Math.round(1000 * (Date.now() / 1000 - this.startTime));
		this.timer = haxe_Timer.delay($bind(this,this.setTimedOutState),delay);
	}
	,branch: function(fn) {
		var branch = new utest_Async(this.timeoutMs);
		this.branches.push(branch);
		branch.then($bind(this,this.checkBranches));
		if(fn != null) {
			fn(branch);
		}
		return branch;
	}
	,checkBranches: function() {
		var _gthis = this;
		if(this.resolved) {
			return;
		}
		var _g = 0;
		var _g1 = this.branches;
		while(_g < _g1.length) {
			var branch = _g1[_g];
			++_g;
			if(!branch.resolved) {
				return;
			}
			if(branch.timedOut) {
				this.setTimedOutState();
				return;
			}
		}
		var branchCount = this.branches.length;
		haxe_Timer.delay(function() {
			if(branchCount == _gthis.branches.length) {
				_gthis.done({ fileName : "utest/Async.hx", lineNumber : 97, className : "utest.Async", methodName : "checkBranches"});
			}
		},5);
	}
	,then: function(cb) {
		if(this.resolved) {
			cb();
		} else {
			this.callbacks.push(cb);
		}
	}
	,setTimedOutState: function() {
		if(this.resolved) {
			return;
		}
		this.timedOut = true;
		this.done({ fileName : "utest/Async.hx", lineNumber : 115, className : "utest.Async", methodName : "setTimedOutState"});
	}
	,__class__: utest_Async
};
var utest__$Dispatcher_EventException = $hxEnums["utest._Dispatcher.EventException"] = { __ename__ : "utest._Dispatcher.EventException", __constructs__ : ["StopPropagation"]
	,StopPropagation: {_hx_index:0,__enum__:"utest._Dispatcher.EventException",toString:$estr}
};
var utest_Dispatcher = function() {
	this.handlers = [];
};
utest_Dispatcher.__name__ = "utest.Dispatcher";
utest_Dispatcher.stop = function() {
	throw new js__$Boot_HaxeError(utest__$Dispatcher_EventException.StopPropagation);
};
utest_Dispatcher.prototype = {
	handlers: null
	,add: function(h) {
		this.handlers.push(h);
		return h;
	}
	,remove: function(h) {
		var _g = 0;
		var _g1 = this.handlers.length;
		while(_g < _g1) {
			var i = _g++;
			if(Reflect.compareMethods(this.handlers[i],h)) {
				return this.handlers.splice(i,1)[0];
			}
		}
		return null;
	}
	,clear: function() {
		this.handlers = [];
	}
	,dispatch: function(e) {
		try {
			var list = this.handlers.slice();
			var _g = 0;
			while(_g < list.length) {
				var l = list[_g];
				++_g;
				l(e);
			}
			return true;
		} catch( exc ) {
			haxe_CallStack.lastException = exc;
			if(js_Boot.__instanceof(((exc) instanceof js__$Boot_HaxeError) ? exc.val : exc,utest__$Dispatcher_EventException)) {
				return false;
			} else {
				throw exc;
			}
		}
	}
	,has: function() {
		return this.handlers.length > 0;
	}
	,__class__: utest_Dispatcher
};
var utest_Notifier = function() {
	this.handlers = [];
};
utest_Notifier.__name__ = "utest.Notifier";
utest_Notifier.stop = function() {
	throw new js__$Boot_HaxeError(utest__$Dispatcher_EventException.StopPropagation);
};
utest_Notifier.prototype = {
	handlers: null
	,add: function(h) {
		this.handlers.push(h);
		return h;
	}
	,remove: function(h) {
		var _g = 0;
		var _g1 = this.handlers.length;
		while(_g < _g1) {
			var i = _g++;
			if(Reflect.compareMethods(this.handlers[i],h)) {
				return this.handlers.splice(i,1)[0];
			}
		}
		return null;
	}
	,clear: function() {
		this.handlers = [];
	}
	,dispatch: function() {
		try {
			var list = this.handlers.slice();
			var _g = 0;
			while(_g < list.length) {
				var l = list[_g];
				++_g;
				l();
			}
			return true;
		} catch( exc ) {
			haxe_CallStack.lastException = exc;
			if(js_Boot.__instanceof(((exc) instanceof js__$Boot_HaxeError) ? exc.val : exc,utest__$Dispatcher_EventException)) {
				return false;
			} else {
				throw exc;
			}
		}
	}
	,has: function() {
		return this.handlers.length > 0;
	}
	,__class__: utest_Notifier
};
var utest_TestHandler = function(fixture) {
	this.wasBound = false;
	this.finished = false;
	if(fixture == null) {
		throw new js__$Boot_HaxeError("fixture argument is null");
	}
	this.fixture = fixture;
	this.results = new haxe_ds_List();
	this.asyncStack = new haxe_ds_List();
	this.onTested = new utest_Dispatcher();
	this.onTimeout = new utest_Dispatcher();
	this.onComplete = new utest_Dispatcher();
	this.onPrecheck = new utest_Dispatcher();
	if(fixture.ignoringInfo != null) {
		this.results.add(utest_Assertation.Ignore(fixture.ignoringInfo));
	}
};
utest_TestHandler.__name__ = "utest.TestHandler";
utest_TestHandler.exceptionStack = function(pops) {
	if(pops == null) {
		pops = 2;
	}
	var stack = haxe_CallStack.exceptionStack();
	while(pops-- > 0) stack.pop();
	return stack;
};
utest_TestHandler.prototype = {
	results: null
	,fixture: null
	,finished: null
	,asyncStack: null
	,onTested: null
	,onTimeout: null
	,onComplete: null
	,onPrecheck: null
	,precheck: null
	,wasBound: null
	,execute: function() {
		var _gthis = this;
		if(this.fixture.ignoringInfo != null) {
			this.executeFinally();
			return;
		}
		var isSync = true;
		var expectingAsync = true;
		var run = function() {
			if(isSync) {
				expectingAsync = false;
				return;
			}
			_gthis.executeFixtureMethod();
			_gthis.executeFinally();
		};
		try {
			this.executeMethod(this.fixture.setup);
			this.executeAsyncMethod(this.fixture.setupAsync,run);
			if(!expectingAsync) {
				this.executeFixtureMethod();
			}
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.SetupError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,utest_TestHandler.exceptionStack()));
		}
		isSync = false;
		if(!expectingAsync) {
			this.executeFinally();
		}
	}
	,executeFixtureMethod: function() {
		try {
			this.executeMethod(this.fixture.method);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.Error(((e) instanceof js__$Boot_HaxeError) ? e.val : e,utest_TestHandler.exceptionStack()));
		}
	}
	,executeFinally: function() {
		this.onPrecheck.dispatch(this);
		this.checkTested();
	}
	,checkTested: function() {
		if(this.expiration == null || this.asyncStack.length == 0) {
			this.tested();
		} else if(Date.now() / 1000 > this.expiration) {
			this.timeout();
		} else {
			haxe_Timer.delay($bind(this,this.checkTested),10);
		}
	}
	,expiration: null
	,setTimeout: function(timeout) {
		var newExpire = Date.now() / 1000 + timeout / 1000;
		this.expiration = this.expiration == null ? newExpire : newExpire > this.expiration ? newExpire : this.expiration;
	}
	,bindHandler: function() {
		if(this.wasBound) {
			return;
		}
		utest_Assert.results = this.results;
		utest_Assert.createAsync = $bind(this,this.addAsync);
		utest_Assert.createEvent = $bind(this,this.addEvent);
		this.wasBound = true;
	}
	,unbindHandler: function() {
		if(!this.wasBound) {
			return;
		}
		utest_Assert.results = null;
		utest_Assert.createAsync = function(f,t) {
			return function() {
			};
		};
		utest_Assert.createEvent = function(f1,t1) {
			return function(e) {
			};
		};
		this.wasBound = false;
	}
	,addAsync: function(f,timeout) {
		if(timeout == null) {
			timeout = 250;
		}
		if(null == f) {
			f = function() {
			};
		}
		this.asyncStack.add(f);
		var handler = this;
		this.setTimeout(timeout);
		return function() {
			if(!handler.asyncStack.remove(f)) {
				handler.results.add(utest_Assertation.AsyncError("async function already executed",[]));
				return;
			}
			try {
				handler.bindHandler();
				f();
			} catch( e ) {
				haxe_CallStack.lastException = e;
				handler.results.add(utest_Assertation.AsyncError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,utest_TestHandler.exceptionStack(0)));
			}
		};
	}
	,addEvent: function(f,timeout) {
		if(timeout == null) {
			timeout = 250;
		}
		this.asyncStack.add(f);
		var handler = this;
		this.setTimeout(timeout);
		return function(e) {
			if(!handler.asyncStack.remove(f)) {
				handler.results.add(utest_Assertation.AsyncError("event already executed",[]));
				return;
			}
			try {
				handler.bindHandler();
				f(e);
			} catch( e1 ) {
				haxe_CallStack.lastException = e1;
				handler.results.add(utest_Assertation.AsyncError(((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1,utest_TestHandler.exceptionStack(0)));
			}
		};
	}
	,executeMethod: function(name) {
		if(name == null) {
			return;
		}
		this.bindHandler();
		Reflect.field(this.fixture.target,name).apply(this.fixture.target,[]);
	}
	,executeAsyncMethod: function(name,done) {
		if(name == null) {
			done();
			return;
		}
		this.bindHandler();
		Reflect.field(this.fixture.target,name).apply(this.fixture.target,[done]);
	}
	,tested: function() {
		if(this.results.length == 0) {
			this.results.add(utest_Assertation.Warning("no assertions"));
		}
		this.onTested.dispatch(this);
		this.completed();
	}
	,timeout: function() {
		this.results.add(utest_Assertation.TimeoutError(this.asyncStack.length,[]));
		this.onTimeout.dispatch(this);
		this.completed();
	}
	,completed: function() {
		var _gthis = this;
		if(this.fixture.ignoringInfo != null) {
			this.completedFinally();
			return;
		}
		var isSync = true;
		var expectingAsync = true;
		var complete = function() {
			if(isSync) {
				expectingAsync = false;
				return;
			}
			_gthis.completedFinally();
		};
		try {
			this.executeMethod(this.fixture.teardown);
			this.executeAsyncMethod(this.fixture.teardownAsync,complete);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.TeardownError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,utest_TestHandler.exceptionStack(2)));
		}
		isSync = false;
		if(!expectingAsync) {
			this.completedFinally();
		}
	}
	,completedFinally: function() {
		this.finished = true;
		this.unbindHandler();
		this.onComplete.dispatch(this);
	}
	,__class__: utest_TestHandler
};
var utest_ITestHandler = function(fixture) {
	utest_TestHandler.call(this,fixture);
	if(!fixture.isITest) {
		throw new js__$Boot_HaxeError("Invalid fixture type for utest.ITestHandler");
	}
	this.testCase = js_Boot.__cast(fixture.target , utest_ITest);
	this.test = fixture.test;
	if(this.test == null) {
		throw new js__$Boot_HaxeError("Fixture is missing test data");
	}
};
utest_ITestHandler.__name__ = "utest.ITestHandler";
utest_ITestHandler.__super__ = utest_TestHandler;
utest_ITestHandler.prototype = $extend(utest_TestHandler.prototype,{
	testCase: null
	,test: null
	,setupAsync: null
	,testAsync: null
	,teardownAsync: null
	,execute: function() {
		if(this.fixture.ignoringInfo != null) {
			this.executeFinally();
			return;
		}
		this.bindHandler();
		this.runSetup();
	}
	,runSetup: function() {
		try {
			this.setupAsync = this.fixture.setupMethod();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.SetupError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,haxe_CallStack.exceptionStack()));
			this.completedFinally();
			return;
		}
		this.setupAsync.then($bind(this,this.checkSetup));
	}
	,checkSetup: function() {
		if(this.setupAsync.timedOut) {
			this.results.add(utest_Assertation.SetupError("Setup timeout",[]));
			this.completedFinally();
		} else {
			this.runTest();
		}
	}
	,runTest: function() {
		try {
			this.testAsync = this.test.execute();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.Error(((e) instanceof js__$Boot_HaxeError) ? e.val : e,haxe_CallStack.exceptionStack()));
			this.runTeardown();
			return;
		}
		this.testAsync.then($bind(this,this.checkTest));
	}
	,checkTest: function() {
		this.onPrecheck.dispatch(this);
		if(this.testAsync.timedOut) {
			this.results.add(utest_Assertation.TimeoutError(1,[]));
			this.onTimeout.dispatch(this);
		} else if(this.testAsync.resolved) {
			if(this.results.length == 0) {
				this.results.add(utest_Assertation.Warning("no assertions"));
			}
			this.onTested.dispatch(this);
		} else {
			throw new js__$Boot_HaxeError("Unexpected test state");
		}
		this.runTeardown();
	}
	,runTeardown: function() {
		try {
			this.teardownAsync = this.fixture.teardownMethod();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.TeardownError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,haxe_CallStack.exceptionStack()));
			this.completedFinally();
			return;
		}
		this.teardownAsync.then($bind(this,this.checkTeardown));
	}
	,checkTeardown: function() {
		if(this.teardownAsync.timedOut) {
			this.results.add(utest_Assertation.TeardownError("Teardown timeout",[]));
		}
		this.completedFinally();
	}
	,bindHandler: function() {
		if(this.wasBound) {
			return;
		}
		utest_Assert.results = this.results;
		var msg = " is not allowed in tests extending utest.ITest. Add `async:utest.Async` argument to the test method instead.";
		utest_Assert.createAsync = function(f,t) {
			throw new js__$Boot_HaxeError("Assert.createAsync() " + msg);
		};
		utest_Assert.createEvent = function(f1,t1) {
			throw new js__$Boot_HaxeError("Assert.createEvent() " + msg);
		};
		this.wasBound = true;
	}
	,__class__: utest_ITestHandler
});
var utest__$IgnoredFixture_IgnoredFixture_$Impl_$ = {};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.__name__ = "utest._IgnoredFixture.IgnoredFixture_Impl_";
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.__properties__ = {get_ignoreReason:"get_ignoreReason",get_isIgnored:"get_isIgnored"};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.NotIgnored = function() {
	return null;
};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.Ignored = function(reason) {
	var this1 = reason != null ? reason : "";
	return this1;
};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$._new = function(reason) {
	return reason;
};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.get_isIgnored = function(this1) {
	return this1 != null;
};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.get_ignoreReason = function(this1) {
	return this1;
};
var utest_Runner = function() {
	this.executedFixtures = 0;
	this.pos = 0;
	this.complete = false;
	this.globalPattern = null;
	this.iTestFixtures = new haxe_ds_ObjectMap();
	this.fixtures = [];
	this.onProgress = new utest_Dispatcher();
	this.onStart = new utest_Dispatcher();
	this.onComplete = new utest_Dispatcher();
	this.onPrecheck = new utest_Dispatcher();
	this.onTestStart = new utest_Dispatcher();
	this.onTestComplete = new utest_Dispatcher();
	this.length = 0;
};
utest_Runner.__name__ = "utest.Runner";
utest_Runner.prototype = {
	fixtures: null
	,iTestFixtures: null
	,onProgress: null
	,onStart: null
	,onComplete: null
	,onPrecheck: null
	,onTestStart: null
	,onTestComplete: null
	,length: null
	,globalPattern: null
	,complete: null
	,addCase: function(test,setup,teardown,prefix,pattern,setupAsync,teardownAsync) {
		if(teardownAsync == null) {
			teardownAsync = "teardownAsync";
		}
		if(setupAsync == null) {
			setupAsync = "setupAsync";
		}
		if(prefix == null) {
			prefix = "test";
		}
		if(teardown == null) {
			teardown = "teardown";
		}
		if(setup == null) {
			setup = "setup";
		}
		if(js_Boot.__implements(test,utest_ITest)) {
			this.addITest(test,pattern);
		} else {
			this.addCaseOld(test,setup,teardown,prefix,pattern,setupAsync,teardownAsync);
		}
	}
	,addITest: function(testCase,pattern) {
		if(this.iTestFixtures.h.__keys__[testCase.__id__] != null) {
			throw new js__$Boot_HaxeError("Cannot add the same test twice.");
		}
		var fixtures = [];
		var init = testCase.__initializeUtest__();
		var c = js_Boot.getClass(testCase);
		var className = c.__name__;
		var _g = 0;
		var _g1 = init.tests;
		while(_g < _g1.length) {
			var test = _g1[_g];
			++_g;
			if(!this.isTestFixtureName(className,test.name,["test","spec"],pattern,this.globalPattern)) {
				continue;
			}
			var fixture = utest_TestFixture.ofData(testCase,test,init.accessories);
			this.addFixture(fixture);
			fixtures.push(fixture);
		}
		if(fixtures.length > 0) {
			this.iTestFixtures.set(testCase,{ setupClass : utest_utils_AccessoriesUtils.getSetupClass(init.accessories), fixtures : fixtures, teardownClass : utest_utils_AccessoriesUtils.getTeardownClass(init.accessories)});
		}
	}
	,addCaseOld: function(test,setup,teardown,prefix,pattern,setupAsync,teardownAsync) {
		if(teardownAsync == null) {
			teardownAsync = "teardownAsync";
		}
		if(setupAsync == null) {
			setupAsync = "setupAsync";
		}
		if(prefix == null) {
			prefix = "test";
		}
		if(teardown == null) {
			teardown = "teardown";
		}
		if(setup == null) {
			setup = "setup";
		}
		if(!Reflect.isObject(test)) {
			throw new js__$Boot_HaxeError("can't add a null object as a test case");
		}
		if(!this.isMethod(test,setup)) {
			setup = null;
		}
		if(!this.isMethod(test,setupAsync)) {
			setupAsync = null;
		}
		if(!this.isMethod(test,teardown)) {
			teardown = null;
		}
		if(!this.isMethod(test,teardownAsync)) {
			teardownAsync = null;
		}
		var fields = Type.getInstanceFields(js_Boot.getClass(test));
		var c = js_Boot.getClass(test);
		var className = c.__name__;
		var _g = 0;
		while(_g < fields.length) {
			var field = fields[_g];
			++_g;
			if(!this.isMethod(test,field)) {
				continue;
			}
			if(!this.isTestFixtureName(className,field,[prefix],pattern,this.globalPattern)) {
				continue;
			}
			this.addFixture(new utest_TestFixture(test,field,setup,teardown,setupAsync,teardownAsync));
		}
	}
	,isTestFixtureName: function(caseName,testName,prefixes,pattern,globalPattern) {
		if(pattern == null && globalPattern == null) {
			var _g = 0;
			while(_g < prefixes.length) {
				var prefix = prefixes[_g];
				++_g;
				if(StringTools.startsWith(testName,prefix)) {
					return true;
				}
			}
			return false;
		}
		if(pattern == null) {
			pattern = globalPattern;
		}
		return pattern.match("" + caseName + "." + testName);
	}
	,addFixture: function(fixture) {
		this.fixtures.push(fixture);
		this.length++;
	}
	,getFixture: function(index) {
		return this.fixtures[index];
	}
	,isMethod: function(test,name) {
		try {
			return Reflect.isFunction(Reflect.field(test,name));
		} catch( e ) {
			haxe_CallStack.lastException = e;
			return false;
		}
	}
	,run: function() {
		this.onStart.dispatch(this);
		var iTestRunner = new utest__$Runner_ITestRunner(this);
		iTestRunner.run();
		this.waitForCompletion();
	}
	,waitForCompletion: function() {
		if(!this.complete) {
			haxe_Timer.delay($bind(this,this.waitForCompletion),100);
		}
	}
	,pos: null
	,executedFixtures: null
	,runNext: function(finishedHandler) {
		var currentCase = null;
		var _g = this.pos;
		var _g1 = this.fixtures.length;
		while(_g < _g1) {
			_g++;
			var fixture = this.fixtures[this.pos++];
			if(fixture.isITest) {
				continue;
			}
			if(currentCase != fixture.target) {
				currentCase = fixture.target;
				var c = js_Boot.getClass(currentCase);
				c.__name__;
			}
			var handler = this.runFixture(fixture);
			if(!handler.finished) {
				handler.onComplete.add($bind(this,this.runNext));
				return;
			}
		}
		this.complete = true;
		this.onComplete.dispatch(this);
	}
	,runFixture: function(fixture) {
		var handler = fixture.isITest ? new utest_ITestHandler(fixture) : new utest_TestHandler(fixture);
		handler.onComplete.add($bind(this,this.testComplete));
		handler.onPrecheck.add(($_=this.onPrecheck,$bind($_,$_.dispatch)));
		this.onTestStart.dispatch(handler);
		handler.execute();
		return handler;
	}
	,testComplete: function(h) {
		++this.executedFixtures;
		this.onTestComplete.dispatch(h);
		this.onProgress.dispatch({ result : utest_TestResult.ofHandler(h), done : this.executedFixtures, totals : this.length});
	}
	,__class__: utest_Runner
};
var utest__$Runner_ITestRunner = function(runner) {
	this.runner = runner;
};
utest__$Runner_ITestRunner.__name__ = "utest._Runner.ITestRunner";
utest__$Runner_ITestRunner.prototype = {
	runner: null
	,cases: null
	,currentCase: null
	,currentCaseFixtures: null
	,teardownClass: null
	,setupAsync: null
	,teardownAsync: null
	,run: function() {
		this.cases = this.runner.iTestFixtures.keys();
		this.runCases();
	}
	,runCases: function() {
		while(this.cases.hasNext()) {
			this.currentCase = this.cases.next();
			var c = js_Boot.getClass(this.currentCase);
			c.__name__;
			var data = this.runner.iTestFixtures.h[this.currentCase.__id__];
			this.currentCaseFixtures = data.fixtures;
			this.teardownClass = data.teardownClass;
			try {
				this.setupAsync = data.setupClass();
			} catch( e ) {
				haxe_CallStack.lastException = e;
				this.setupFailed(utest_Assertation.SetupError("setupClass failed: " + Std.string(((e) instanceof js__$Boot_HaxeError) ? e.val : e),haxe_CallStack.exceptionStack()));
				return;
			}
			if(this.setupAsync.resolved) {
				if(!this.runFixtures()) {
					return;
				}
			} else {
				this.setupAsync.then($bind(this,this.checkSetup));
				return;
			}
		}
		this.runner.runNext();
	}
	,checkSetup: function() {
		if(this.setupAsync.timedOut) {
			this.setupFailed(utest_Assertation.SetupError("setupClass timeout",[]));
		} else {
			this.runFixtures();
		}
	}
	,setupFailed: function(assertation) {
		this.runner.executedFixtures += this.currentCaseFixtures.length;
		this.runner.onProgress.dispatch({ totals : this.runner.length, result : utest_TestResult.ofFailedSetupClass(this.currentCase,assertation), done : this.runner.executedFixtures});
		this.runCases();
	}
	,runFixtures: function(finishedHandler) {
		while(this.currentCaseFixtures.length > 0) {
			var handler = this.runner.runFixture(this.currentCaseFixtures.pop());
			if(!handler.finished) {
				handler.onComplete.add($bind(this,this.runFixtures));
				return false;
			}
		}
		try {
			this.teardownAsync = this.teardownClass();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.teardownFailed(utest_Assertation.TeardownError("teardownClass failed: " + Std.string(((e) instanceof js__$Boot_HaxeError) ? e.val : e),haxe_CallStack.exceptionStack()));
			return true;
		}
		if(this.teardownAsync.resolved && finishedHandler == null) {
			return true;
		}
		this.teardownAsync.then($bind(this,this.checkTeardown));
		return false;
	}
	,checkTeardown: function() {
		if(this.teardownAsync.timedOut) {
			this.teardownFailed(utest_Assertation.TeardownError("teardownClass timeout",[]));
		}
		this.runCases();
	}
	,teardownFailed: function(assertation) {
		this.runner.onProgress.dispatch({ totals : this.runner.length, result : utest_TestResult.ofFailedTeardownClass(this.currentCase,assertation), done : this.runner.executedFixtures});
	}
	,__class__: utest__$Runner_ITestRunner
};
var utest_AccessoryName = function() { };
utest_AccessoryName.__name__ = "utest.AccessoryName";
var utest_TestFixture = function(target,method,setup,teardown,setupAsync,teardownAsync) {
	this.isITest = false;
	this.target = target;
	this.method = method;
	this.setup = setup;
	this.setupAsync = setupAsync;
	this.teardown = teardown;
	this.teardownAsync = teardownAsync;
	this.ignoringInfo = this.getIgnored();
};
utest_TestFixture.__name__ = "utest.TestFixture";
utest_TestFixture.ofData = function(target,test,accessories) {
	var fixture = new utest_TestFixture(target,test.name);
	fixture.isITest = true;
	fixture.test = test;
	fixture.setupMethod = utest_utils_AccessoriesUtils.getSetup(accessories);
	fixture.teardownMethod = utest_utils_AccessoriesUtils.getTeardown(accessories);
	return fixture;
};
utest_TestFixture.prototype = {
	target: null
	,method: null
	,setup: null
	,setupAsync: null
	,teardown: null
	,teardownAsync: null
	,ignoringInfo: null
	,isITest: null
	,test: null
	,setupMethod: null
	,teardownMethod: null
	,checkMethod: function(name,arg) {
		var field = Reflect.field(this.target,name);
		if(field == null) {
			throw new js__$Boot_HaxeError(arg + " function " + name + " is not a field of target");
		}
		if(!Reflect.isFunction(field)) {
			throw new js__$Boot_HaxeError(arg + " function " + name + " is not a function");
		}
	}
	,getIgnored: function() {
		var metas = haxe_rtti_Meta.getFields(js_Boot.getClass(this.target));
		var metasForTestMetas = Reflect.getProperty(metas,this.method);
		if(metasForTestMetas == null || !Object.prototype.hasOwnProperty.call(metasForTestMetas,"Ignored")) {
			return utest__$IgnoredFixture_IgnoredFixture_$Impl_$.NotIgnored();
		}
		var ignoredArgs = Reflect.getProperty(metasForTestMetas,"Ignored");
		if(ignoredArgs == null || ignoredArgs.length == 0 || ignoredArgs[0] == null) {
			return utest__$IgnoredFixture_IgnoredFixture_$Impl_$.Ignored();
		}
		var ignoredReason = Std.string(ignoredArgs[0]);
		return utest__$IgnoredFixture_IgnoredFixture_$Impl_$.Ignored(ignoredReason);
	}
	,__class__: utest_TestFixture
};
var utest_TestResult = function() {
};
utest_TestResult.__name__ = "utest.TestResult";
utest_TestResult.ofHandler = function(handler) {
	var r = new utest_TestResult();
	var c = js_Boot.getClass(handler.fixture.target);
	var path = c.__name__.split(".");
	r.cls = path.pop();
	r.pack = path.join(".");
	r.method = handler.fixture.method;
	r.setup = handler.fixture.setup;
	r.setupAsync = handler.fixture.setupAsync;
	r.teardown = handler.fixture.teardown;
	r.teardownAsync = handler.fixture.teardownAsync;
	r.assertations = handler.results;
	return r;
};
utest_TestResult.ofFailedSetupClass = function(testCase,assertation) {
	var r = new utest_TestResult();
	var c = js_Boot.getClass(testCase);
	var path = c.__name__.split(".");
	r.cls = path.pop();
	r.pack = path.join(".");
	r.method = "setup";
	r.assertations = new haxe_ds_List();
	r.assertations.add(assertation);
	return r;
};
utest_TestResult.ofFailedTeardownClass = function(testCase,assertation) {
	var r = new utest_TestResult();
	var c = js_Boot.getClass(testCase);
	var path = c.__name__.split(".");
	r.cls = path.pop();
	r.pack = path.join(".");
	r.method = "setup";
	r.assertations = new haxe_ds_List();
	r.assertations.add(assertation);
	return r;
};
utest_TestResult.prototype = {
	pack: null
	,cls: null
	,method: null
	,setup: null
	,setupAsync: null
	,teardown: null
	,teardownAsync: null
	,assertations: null
	,allOk: function() {
		var head = this.assertations.h;
		while(head != null) {
			var val = head.item;
			if(val._hx_index == 0) {
				break;
			} else {
				return false;
			}
		}
		return true;
	}
	,__class__: utest_TestResult
};
var utest_UTest = function() { };
utest_UTest.__name__ = "utest.UTest";
utest_UTest.run = function(cases,callback) {
	var runner = new utest_Runner();
	var _g = 0;
	while(_g < cases.length) {
		var eachCase = cases[_g];
		++_g;
		runner.addCase(eachCase);
	}
	utest_ui_Report.create(runner);
	if(null != callback) {
		runner.onComplete.add(function(_) {
			callback();
		});
	}
	runner.run();
};
var utest_ui_Report = function() { };
utest_ui_Report.__name__ = "utest.ui.Report";
utest_ui_Report.create = function(runner,displaySuccessResults,headerDisplayMode) {
	var report = new utest_ui_text_PrintReport(runner);
	if(null == displaySuccessResults) {
		report.displaySuccessResults = utest_ui_common_SuccessResultsDisplayMode.ShowSuccessResultsWithNoErrors;
	} else {
		report.displaySuccessResults = displaySuccessResults;
	}
	if(null == headerDisplayMode) {
		report.displayHeader = utest_ui_common_HeaderDisplayMode.ShowHeaderWithResults;
	} else {
		report.displayHeader = headerDisplayMode;
	}
	return report;
};
var utest_ui_common_ClassResult = function(className,setupName,teardownName) {
	this.fixtures = new haxe_ds_StringMap();
	this.className = className;
	this.setupName = setupName;
	this.hasSetup = setupName != null;
	this.teardownName = teardownName;
	this.hasTeardown = teardownName != null;
	this.methods = 0;
	this.stats = new utest_ui_common_ResultStats();
};
utest_ui_common_ClassResult.__name__ = "utest.ui.common.ClassResult";
utest_ui_common_ClassResult.prototype = {
	fixtures: null
	,className: null
	,setupName: null
	,teardownName: null
	,hasSetup: null
	,hasTeardown: null
	,methods: null
	,stats: null
	,add: function(result) {
		var key = result.methodName;
		var _this = this.fixtures;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			throw new js__$Boot_HaxeError("invalid duplicated fixture: " + this.className + "." + result.methodName);
		}
		this.stats.wire(result.stats);
		this.methods++;
		var key1 = result.methodName;
		var _this1 = this.fixtures;
		if(__map_reserved[key1] != null) {
			_this1.setReserved(key1,result);
		} else {
			_this1.h[key1] = result;
		}
	}
	,get: function(method) {
		var _this = this.fixtures;
		if(__map_reserved[method] != null) {
			return _this.getReserved(method);
		} else {
			return _this.h[method];
		}
	}
	,exists: function(method) {
		var _this = this.fixtures;
		if(__map_reserved[method] != null) {
			return _this.existsReserved(method);
		} else {
			return _this.h.hasOwnProperty(method);
		}
	}
	,methodNames: function(errorsHavePriority) {
		if(errorsHavePriority == null) {
			errorsHavePriority = true;
		}
		var names = [];
		var name = this.fixtures.keys();
		while(name.hasNext()) {
			var name1 = name.next();
			names.push(name1);
		}
		if(errorsHavePriority) {
			var me = this;
			names.sort(function(a,b) {
				var as = me.get(a).stats;
				var bs = me.get(b).stats;
				if(as.hasErrors) {
					if(!bs.hasErrors) {
						return -1;
					} else if(as.errors == bs.errors) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.errors,bs.errors);
					}
				} else if(bs.hasErrors) {
					return 1;
				} else if(as.hasFailures) {
					if(!bs.hasFailures) {
						return -1;
					} else if(as.failures == bs.failures) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.failures,bs.failures);
					}
				} else if(bs.hasFailures) {
					return 1;
				} else if(as.hasWarnings) {
					if(!bs.hasWarnings) {
						return -1;
					} else if(as.warnings == bs.warnings) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.warnings,bs.warnings);
					}
				} else if(bs.hasWarnings) {
					return 1;
				} else {
					return Reflect.compare(a,b);
				}
			});
		} else {
			names.sort(function(a1,b1) {
				return Reflect.compare(a1,b1);
			});
		}
		return names;
	}
	,__class__: utest_ui_common_ClassResult
};
var utest_ui_common_FixtureResult = function(methodName) {
	this.methodName = methodName;
	this.list = new haxe_ds_List();
	this.hasTestError = false;
	this.hasSetupError = false;
	this.hasTeardownError = false;
	this.hasTimeoutError = false;
	this.hasAsyncError = false;
	this.stats = new utest_ui_common_ResultStats();
};
utest_ui_common_FixtureResult.__name__ = "utest.ui.common.FixtureResult";
utest_ui_common_FixtureResult.prototype = {
	methodName: null
	,hasTestError: null
	,hasSetupError: null
	,hasTeardownError: null
	,hasTimeoutError: null
	,hasAsyncError: null
	,stats: null
	,list: null
	,iterator: function() {
		return new haxe_ds__$List_ListIterator(this.list.h);
	}
	,add: function(assertation) {
		this.list.add(assertation);
		switch(assertation._hx_index) {
		case 0:
			this.stats.addSuccesses(1);
			break;
		case 1:
			this.stats.addFailures(1);
			break;
		case 2:
			this.stats.addErrors(1);
			break;
		case 3:
			this.stats.addErrors(1);
			this.hasSetupError = true;
			break;
		case 4:
			this.stats.addErrors(1);
			this.hasTeardownError = true;
			break;
		case 5:
			this.stats.addErrors(1);
			this.hasTimeoutError = true;
			break;
		case 6:
			this.stats.addErrors(1);
			this.hasAsyncError = true;
			break;
		case 7:
			this.stats.addWarnings(1);
			break;
		case 8:
			this.stats.addIgnores(1);
			break;
		}
	}
	,__class__: utest_ui_common_FixtureResult
};
var utest_ui_common_HeaderDisplayMode = $hxEnums["utest.ui.common.HeaderDisplayMode"] = { __ename__ : "utest.ui.common.HeaderDisplayMode", __constructs__ : ["AlwaysShowHeader","NeverShowHeader","ShowHeaderWithResults"]
	,AlwaysShowHeader: {_hx_index:0,__enum__:"utest.ui.common.HeaderDisplayMode",toString:$estr}
	,NeverShowHeader: {_hx_index:1,__enum__:"utest.ui.common.HeaderDisplayMode",toString:$estr}
	,ShowHeaderWithResults: {_hx_index:2,__enum__:"utest.ui.common.HeaderDisplayMode",toString:$estr}
};
var utest_ui_common_SuccessResultsDisplayMode = $hxEnums["utest.ui.common.SuccessResultsDisplayMode"] = { __ename__ : "utest.ui.common.SuccessResultsDisplayMode", __constructs__ : ["AlwaysShowSuccessResults","NeverShowSuccessResults","ShowSuccessResultsWithNoErrors"]
	,AlwaysShowSuccessResults: {_hx_index:0,__enum__:"utest.ui.common.SuccessResultsDisplayMode",toString:$estr}
	,NeverShowSuccessResults: {_hx_index:1,__enum__:"utest.ui.common.SuccessResultsDisplayMode",toString:$estr}
	,ShowSuccessResultsWithNoErrors: {_hx_index:2,__enum__:"utest.ui.common.SuccessResultsDisplayMode",toString:$estr}
};
var utest_ui_common_IReport = function() { };
utest_ui_common_IReport.__name__ = "utest.ui.common.IReport";
utest_ui_common_IReport.__isInterface__ = true;
utest_ui_common_IReport.prototype = {
	displaySuccessResults: null
	,displayHeader: null
	,setHandler: null
	,__class__: utest_ui_common_IReport
};
var utest_ui_common_PackageResult = function(packageName) {
	this.isEmpty = true;
	this.packageName = packageName;
	this.classes = new haxe_ds_StringMap();
	this.packages = new haxe_ds_StringMap();
	this.stats = new utest_ui_common_ResultStats();
};
utest_ui_common_PackageResult.__name__ = "utest.ui.common.PackageResult";
utest_ui_common_PackageResult.prototype = {
	packageName: null
	,isEmpty: null
	,classes: null
	,packages: null
	,stats: null
	,addResult: function(result,flattenPackage) {
		this.isEmpty = false;
		var pack = this.getOrCreatePackage(result.pack,flattenPackage,this);
		var cls = this.getOrCreateClass(pack,result.cls,result.setup,result.teardown);
		var fix = this.createFixture(result.method,result.assertations);
		cls.add(fix);
	}
	,addClass: function(result) {
		this.isEmpty = false;
		var key = result.className;
		var _this = this.classes;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,result);
		} else {
			_this.h[key] = result;
		}
		this.stats.wire(result.stats);
	}
	,addPackage: function(result) {
		this.isEmpty = false;
		var key = result.packageName;
		var _this = this.packages;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,result);
		} else {
			_this.h[key] = result;
		}
		this.stats.wire(result.stats);
	}
	,existsPackage: function(name) {
		var _this = this.packages;
		if(__map_reserved[name] != null) {
			return _this.existsReserved(name);
		} else {
			return _this.h.hasOwnProperty(name);
		}
	}
	,existsClass: function(name) {
		var _this = this.classes;
		if(__map_reserved[name] != null) {
			return _this.existsReserved(name);
		} else {
			return _this.h.hasOwnProperty(name);
		}
	}
	,getPackage: function(name) {
		if(this.packageName == null && name == "") {
			return this;
		}
		var _this = this.packages;
		if(__map_reserved[name] != null) {
			return _this.getReserved(name);
		} else {
			return _this.h[name];
		}
	}
	,getClass: function(name) {
		var _this = this.classes;
		if(__map_reserved[name] != null) {
			return _this.getReserved(name);
		} else {
			return _this.h[name];
		}
	}
	,classNames: function(errorsHavePriority) {
		if(errorsHavePriority == null) {
			errorsHavePriority = true;
		}
		var names = [];
		var name = this.classes.keys();
		while(name.hasNext()) {
			var name1 = name.next();
			names.push(name1);
		}
		if(errorsHavePriority) {
			var me = this;
			names.sort(function(a,b) {
				var as = me.getClass(a).stats;
				var bs = me.getClass(b).stats;
				if(as.hasErrors) {
					if(!bs.hasErrors) {
						return -1;
					} else if(as.errors == bs.errors) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.errors,bs.errors);
					}
				} else if(bs.hasErrors) {
					return 1;
				} else if(as.hasFailures) {
					if(!bs.hasFailures) {
						return -1;
					} else if(as.failures == bs.failures) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.failures,bs.failures);
					}
				} else if(bs.hasFailures) {
					return 1;
				} else if(as.hasWarnings) {
					if(!bs.hasWarnings) {
						return -1;
					} else if(as.warnings == bs.warnings) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.warnings,bs.warnings);
					}
				} else if(bs.hasWarnings) {
					return 1;
				} else {
					return Reflect.compare(a,b);
				}
			});
		} else {
			names.sort(function(a1,b1) {
				return Reflect.compare(a1,b1);
			});
		}
		return names;
	}
	,packageNames: function(errorsHavePriority) {
		if(errorsHavePriority == null) {
			errorsHavePriority = true;
		}
		var names = [];
		if(this.packageName == null) {
			names.push("");
		}
		var name = this.packages.keys();
		while(name.hasNext()) {
			var name1 = name.next();
			names.push(name1);
		}
		if(errorsHavePriority) {
			var me = this;
			names.sort(function(a,b) {
				var as = me.getPackage(a).stats;
				var bs = me.getPackage(b).stats;
				if(as.hasErrors) {
					if(!bs.hasErrors) {
						return -1;
					} else if(as.errors == bs.errors) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.errors,bs.errors);
					}
				} else if(bs.hasErrors) {
					return 1;
				} else if(as.hasFailures) {
					if(!bs.hasFailures) {
						return -1;
					} else if(as.failures == bs.failures) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.failures,bs.failures);
					}
				} else if(bs.hasFailures) {
					return 1;
				} else if(as.hasWarnings) {
					if(!bs.hasWarnings) {
						return -1;
					} else if(as.warnings == bs.warnings) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.warnings,bs.warnings);
					}
				} else if(bs.hasWarnings) {
					return 1;
				} else {
					return Reflect.compare(a,b);
				}
			});
		} else {
			names.sort(function(a1,b1) {
				return Reflect.compare(a1,b1);
			});
		}
		return names;
	}
	,createFixture: function(method,assertations) {
		var f = new utest_ui_common_FixtureResult(method);
		var assertation = $getIterator(assertations);
		while(assertation.hasNext()) {
			var assertation1 = assertation.next();
			f.add(assertation1);
		}
		return f;
	}
	,getOrCreateClass: function(pack,cls,setup,teardown) {
		if(pack.existsClass(cls)) {
			return pack.getClass(cls);
		}
		var c = new utest_ui_common_ClassResult(cls,setup,teardown);
		pack.addClass(c);
		return c;
	}
	,getOrCreatePackage: function(pack,flat,ref) {
		if(pack == null || pack == "") {
			return ref;
		}
		if(flat) {
			if(ref.existsPackage(pack)) {
				return ref.getPackage(pack);
			}
			var p = new utest_ui_common_PackageResult(pack);
			ref.addPackage(p);
			return p;
		} else {
			var parts = pack.split(".");
			var _g = 0;
			while(_g < parts.length) {
				var part = parts[_g];
				++_g;
				ref = this.getOrCreatePackage(part,true,ref);
			}
			return ref;
		}
	}
	,__class__: utest_ui_common_PackageResult
};
var utest_ui_common_ReportTools = function() { };
utest_ui_common_ReportTools.__name__ = "utest.ui.common.ReportTools";
utest_ui_common_ReportTools.hasHeader = function(report,stats) {
	switch(report.displayHeader._hx_index) {
	case 0:
		return true;
	case 1:
		return false;
	case 2:
		if(!stats.isOk) {
			return true;
		}
		switch(report.displaySuccessResults._hx_index) {
		case 1:
			return false;
		case 0:case 2:
			return true;
		}
		break;
	}
};
utest_ui_common_ReportTools.skipResult = function(report,stats,isOk) {
	if(!stats.isOk) {
		return false;
	}
	switch(report.displaySuccessResults._hx_index) {
	case 0:
		return false;
	case 1:
		return true;
	case 2:
		return !isOk;
	}
};
utest_ui_common_ReportTools.hasOutput = function(report,stats) {
	if(!stats.isOk) {
		return true;
	}
	return utest_ui_common_ReportTools.hasHeader(report,stats);
};
var utest_ui_common_ResultAggregator = function(runner,flattenPackage) {
	if(flattenPackage == null) {
		flattenPackage = false;
	}
	if(runner == null) {
		throw new js__$Boot_HaxeError("runner argument is null");
	}
	this.flattenPackage = flattenPackage;
	this.runner = runner;
	runner.onStart.add($bind(this,this.start));
	runner.onProgress.add($bind(this,this.progress));
	runner.onComplete.add($bind(this,this.complete));
	this.onStart = new utest_Notifier();
	this.onComplete = new utest_Dispatcher();
	this.onProgress = new utest_Dispatcher();
};
utest_ui_common_ResultAggregator.__name__ = "utest.ui.common.ResultAggregator";
utest_ui_common_ResultAggregator.prototype = {
	runner: null
	,flattenPackage: null
	,root: null
	,onStart: null
	,onComplete: null
	,onProgress: null
	,start: function(runner) {
		this.checkNonITest();
		this.root = new utest_ui_common_PackageResult(null);
		this.onStart.dispatch();
	}
	,checkNonITest: function() {
		var first = null;
		var total = 0;
		var _g = 0;
		var _g1 = this.runner.length;
		while(_g < _g1) {
			var i = _g++;
			var fixture = this.runner.getFixture(i);
			if(!fixture.isITest) {
				++total;
				if(first == null) {
					var c = js_Boot.getClass(fixture.target);
					first = c.__name__;
				}
			}
		}
		if(total > 0) {
			var baseMsg = "implement utest.ITest. Non-ITest tests are deprecated. Implement utest.ITest or extend utest.Test.";
			var msg;
			switch(total) {
			case 1:
				msg = "" + first + " doesn't " + baseMsg;
				break;
			case 2:
				msg = "" + first + " and 1 other don't " + baseMsg;
				break;
			default:
				msg = "" + first + " and " + total + " others don't " + baseMsg;
			}
			haxe_Log.trace(msg,{ fileName : "utest/ui/common/ResultAggregator.hx", lineNumber : 54, className : "utest.ui.common.ResultAggregator", methodName : "checkNonITest"});
		}
	}
	,getOrCreatePackage: function(pack,flat,ref) {
		if(ref == null) {
			ref = this.root;
		}
		if(pack == null || pack == "") {
			return ref;
		}
		if(flat) {
			if(ref.existsPackage(pack)) {
				return ref.getPackage(pack);
			}
			var p = new utest_ui_common_PackageResult(pack);
			ref.addPackage(p);
			return p;
		} else {
			var parts = pack.split(".");
			var _g = 0;
			while(_g < parts.length) {
				var part = parts[_g];
				++_g;
				ref = this.getOrCreatePackage(part,true,ref);
			}
			return ref;
		}
	}
	,getOrCreateClass: function(pack,cls,setup,teardown) {
		if(pack.existsClass(cls)) {
			return pack.getClass(cls);
		}
		var c = new utest_ui_common_ClassResult(cls,setup,teardown);
		pack.addClass(c);
		return c;
	}
	,createFixture: function(result) {
		var f = new utest_ui_common_FixtureResult(result.method);
		var _g_head = result.assertations.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			f.add(val);
		}
		return f;
	}
	,progress: function(e) {
		this.root.addResult(e.result,this.flattenPackage);
		this.onProgress.dispatch(e);
	}
	,complete: function(runner) {
		if(this.root.isEmpty) {
			this.root.addResult(this.createNoTestsResult(),false);
		}
		this.onComplete.dispatch(this.root);
	}
	,createNoTestsResult: function() {
		var result = new utest_TestResult();
		result.pack = "";
		result.cls = "";
		result.method = "";
		result.assertations = new haxe_ds_List();
		var pos = { fileName : "", lineNumber : 1, className : "utest.Runner", methodName : "run"};
		result.assertations.add(utest_Assertation.Failure("No tests executed.",pos));
		return result;
	}
	,__class__: utest_ui_common_ResultAggregator
};
var utest_ui_common_ResultStats = function() {
	this.assertations = 0;
	this.successes = 0;
	this.failures = 0;
	this.errors = 0;
	this.warnings = 0;
	this.ignores = 0;
	this.isOk = true;
	this.hasFailures = false;
	this.hasErrors = false;
	this.hasWarnings = false;
	this.hasIgnores = false;
	this.onAddSuccesses = new utest_Dispatcher();
	this.onAddFailures = new utest_Dispatcher();
	this.onAddErrors = new utest_Dispatcher();
	this.onAddWarnings = new utest_Dispatcher();
	this.onAddIgnores = new utest_Dispatcher();
};
utest_ui_common_ResultStats.__name__ = "utest.ui.common.ResultStats";
utest_ui_common_ResultStats.prototype = {
	assertations: null
	,successes: null
	,failures: null
	,errors: null
	,warnings: null
	,ignores: null
	,onAddSuccesses: null
	,onAddFailures: null
	,onAddErrors: null
	,onAddWarnings: null
	,onAddIgnores: null
	,isOk: null
	,hasFailures: null
	,hasErrors: null
	,hasWarnings: null
	,hasIgnores: null
	,addSuccesses: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.successes += v;
		this.onAddSuccesses.dispatch(v);
	}
	,addFailures: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.failures += v;
		this.hasFailures = this.failures > 0;
		this.isOk = !(this.hasFailures || this.hasErrors || this.hasWarnings);
		this.onAddFailures.dispatch(v);
	}
	,addErrors: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.errors += v;
		this.hasErrors = this.errors > 0;
		this.isOk = !(this.hasFailures || this.hasErrors || this.hasWarnings);
		this.onAddErrors.dispatch(v);
	}
	,addIgnores: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.ignores += v;
		this.hasIgnores = this.ignores > 0;
		this.onAddIgnores.dispatch(v);
	}
	,addWarnings: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.warnings += v;
		this.hasWarnings = this.warnings > 0;
		this.isOk = !(this.hasFailures || this.hasErrors || this.hasWarnings);
		this.onAddWarnings.dispatch(v);
	}
	,sum: function(other) {
		this.addSuccesses(other.successes);
		this.addFailures(other.failures);
		this.addErrors(other.errors);
		this.addWarnings(other.warnings);
		this.addIgnores(other.ignores);
	}
	,subtract: function(other) {
		this.addSuccesses(-other.successes);
		this.addFailures(-other.failures);
		this.addErrors(-other.errors);
		this.addWarnings(-other.warnings);
		this.addIgnores(-other.ignores);
	}
	,wire: function(dependant) {
		dependant.onAddSuccesses.add($bind(this,this.addSuccesses));
		dependant.onAddFailures.add($bind(this,this.addFailures));
		dependant.onAddErrors.add($bind(this,this.addErrors));
		dependant.onAddWarnings.add($bind(this,this.addWarnings));
		dependant.onAddIgnores.add($bind(this,this.addIgnores));
		this.sum(dependant);
	}
	,unwire: function(dependant) {
		dependant.onAddSuccesses.remove($bind(this,this.addSuccesses));
		dependant.onAddFailures.remove($bind(this,this.addFailures));
		dependant.onAddErrors.remove($bind(this,this.addErrors));
		dependant.onAddWarnings.remove($bind(this,this.addWarnings));
		dependant.onAddIgnores.remove($bind(this,this.addIgnores));
		this.subtract(dependant);
	}
	,__class__: utest_ui_common_ResultStats
};
var utest_ui_text_PlainTextReport = function(runner,outputHandler) {
	this.aggregator = new utest_ui_common_ResultAggregator(runner,true);
	runner.onStart.add($bind(this,this.start));
	this.aggregator.onComplete.add($bind(this,this.complete));
	if(null != outputHandler) {
		this.setHandler(outputHandler);
	}
	this.displaySuccessResults = utest_ui_common_SuccessResultsDisplayMode.AlwaysShowSuccessResults;
	this.displayHeader = utest_ui_common_HeaderDisplayMode.AlwaysShowHeader;
};
utest_ui_text_PlainTextReport.__name__ = "utest.ui.text.PlainTextReport";
utest_ui_text_PlainTextReport.__interfaces__ = [utest_ui_common_IReport];
utest_ui_text_PlainTextReport.prototype = {
	displaySuccessResults: null
	,displayHeader: null
	,handler: null
	,aggregator: null
	,newline: null
	,indent: null
	,setHandler: function(handler) {
		this.handler = handler;
	}
	,startTime: null
	,start: function(e) {
		this.startTime = this.getTime();
	}
	,getTime: function() {
		return Date.now() / 1000;
	}
	,indents: function(c) {
		var s = "";
		while(--c >= 0) s += this.indent;
		return s;
	}
	,dumpStack: function(stack) {
		if(stack.length == 0) {
			return "";
		}
		var parts = haxe_CallStack.toString(stack).split("\n");
		var r = [];
		var _g = 0;
		while(_g < parts.length) {
			var part = parts[_g];
			++_g;
			if(part.indexOf(" utest.") >= 0) {
				continue;
			}
			r.push(part);
		}
		return r.join(this.newline);
	}
	,addHeader: function(buf,result) {
		if(!utest_ui_common_ReportTools.hasHeader(this,result.stats)) {
			return;
		}
		var end = this.getTime();
		var time = ((end - this.startTime) * 1000 | 0) / 1000;
		buf.b += Std.string("\nassertations: " + result.stats.assertations + this.newline);
		buf.b += Std.string("successes: " + result.stats.successes + this.newline);
		buf.b += Std.string("errors: " + result.stats.errors + this.newline);
		buf.b += Std.string("failures: " + result.stats.failures + this.newline);
		buf.b += Std.string("warnings: " + result.stats.warnings + this.newline);
		buf.b += Std.string("execution time: " + time + this.newline);
		buf.b += Std.string(this.newline);
		buf.b += Std.string("results: " + (result.stats.isOk ? "ALL TESTS OK (success: true)" : "SOME TESTS FAILURES (success: false)"));
		buf.b += Std.string(this.newline);
	}
	,result: null
	,getResults: function() {
		var buf = new StringBuf();
		this.addHeader(buf,this.result);
		var _g = 0;
		var _g1 = this.result.packageNames();
		while(_g < _g1.length) {
			var pname = _g1[_g];
			++_g;
			var pack = this.result.getPackage(pname);
			if(utest_ui_common_ReportTools.skipResult(this,pack.stats,this.result.stats.isOk)) {
				continue;
			}
			var _g2 = 0;
			var _g11 = pack.classNames();
			while(_g2 < _g11.length) {
				var cname = _g11[_g2];
				++_g2;
				var cls = pack.getClass(cname);
				if(utest_ui_common_ReportTools.skipResult(this,cls.stats,this.result.stats.isOk)) {
					continue;
				}
				buf.b += Std.string((pname == "" ? "" : pname + ".") + cname + this.newline);
				var _g3 = 0;
				var _g12 = cls.methodNames();
				while(_g3 < _g12.length) {
					var mname = _g12[_g3];
					++_g3;
					var fix = cls.get(mname);
					if(utest_ui_common_ReportTools.skipResult(this,fix.stats,this.result.stats.isOk)) {
						continue;
					}
					buf.b += Std.string(this.indents(1) + mname + ": ");
					if(fix.stats.isOk) {
						buf.b += "OK ";
					} else if(fix.stats.hasErrors) {
						buf.b += "ERROR ";
					} else if(fix.stats.hasFailures) {
						buf.b += "FAILURE ";
					} else if(fix.stats.hasWarnings) {
						buf.b += "WARNING ";
					}
					var messages = "";
					var _g4 = fix.iterator();
					while(_g4.head != null) {
						var val = _g4.head.item;
						_g4.head = _g4.head.next;
						switch(val._hx_index) {
						case 0:
							buf.b += ".";
							break;
						case 1:
							buf.b += "F";
							messages += this.indents(2) + "line: " + val.pos.lineNumber + ", " + val.msg + this.newline;
							break;
						case 2:
							buf.b += "E";
							messages += this.indents(2) + Std.string(val.e) + this.dumpStack(val.stack) + this.newline;
							break;
						case 3:
							buf.b += "S";
							messages += this.indents(2) + Std.string(val.e) + this.dumpStack(val.stack) + this.newline;
							break;
						case 4:
							buf.b += "T";
							messages += this.indents(2) + Std.string(val.e) + this.dumpStack(val.stack) + this.newline;
							break;
						case 5:
							buf.b += "O";
							messages += this.indents(2) + "missed async calls: " + val.missedAsyncs + this.dumpStack(val.stack) + this.newline;
							break;
						case 6:
							buf.b += "A";
							messages += this.indents(2) + Std.string(val.e) + this.dumpStack(val.stack) + this.newline;
							break;
						case 7:
							buf.b += "W";
							messages += this.indents(2) + val.msg + this.newline;
							break;
						case 8:
							var _g6 = val.reason;
							buf.b += "I";
							if(_g6 != null && _g6 != "") {
								messages += this.indents(2) + ("With reason: " + _g6) + this.newline;
							}
							break;
						}
					}
					buf.b = (buf.b += Std.string(this.newline)) + (messages == null ? "null" : "" + messages);
				}
			}
		}
		return buf.b;
	}
	,complete: function(result) {
		this.result = result;
		if(this.handler != null) {
			this.handler(this);
		}
		if(typeof phantom != "undefined") {
			phantom.exit(result.stats.isOk ? 0 : 1);
		}
		if(typeof process != "undefined") {
			process.exit(result.stats.isOk ? 0 : 1);
		}
	}
	,__class__: utest_ui_text_PlainTextReport
};
var utest_ui_text_PrintReport = function(runner) {
	utest_ui_text_PlainTextReport.call(this,runner,$bind(this,this._handler));
	this.newline = "\n";
	this.indent = "  ";
};
utest_ui_text_PrintReport.__name__ = "utest.ui.text.PrintReport";
utest_ui_text_PrintReport.__super__ = utest_ui_text_PlainTextReport;
utest_ui_text_PrintReport.prototype = $extend(utest_ui_text_PlainTextReport.prototype,{
	_handler: function(report) {
		this._trace(report.getResults());
	}
	,_trace: function(s) {
		s = StringTools.replace(s,"  ",this.indent);
		s = StringTools.replace(s,"\n",this.newline);
		haxe_Log.trace(s,{ fileName : "utest/ui/text/PrintReport.hx", lineNumber : 52, className : "utest.ui.text.PrintReport", methodName : "_trace"});
	}
	,__class__: utest_ui_text_PrintReport
});
var utest_utils_AccessoriesUtils = function() { };
utest_utils_AccessoriesUtils.__name__ = "utest.utils.AccessoriesUtils";
utest_utils_AccessoriesUtils.getSetupClass = function(accessories) {
	if(accessories.setupClass == null) {
		return utest_Async.getResolved;
	} else {
		return accessories.setupClass;
	}
};
utest_utils_AccessoriesUtils.getSetup = function(accessories) {
	if(accessories.setup == null) {
		return utest_Async.getResolved;
	} else {
		return accessories.setup;
	}
};
utest_utils_AccessoriesUtils.getTeardown = function(accessories) {
	if(accessories.teardown == null) {
		return utest_Async.getResolved;
	} else {
		return accessories.teardown;
	}
};
utest_utils_AccessoriesUtils.getTeardownClass = function(accessories) {
	if(accessories.teardownClass == null) {
		return utest_Async.getResolved;
	} else {
		return accessories.teardownClass;
	}
};
var utest_utils_AsyncUtils = function() { };
utest_utils_AsyncUtils.__name__ = "utest.utils.AsyncUtils";
utest_utils_AsyncUtils.orResolved = function(_async) {
	if(_async == null) {
		return utest_Async.getResolved();
	} else {
		return _async;
	}
};
var utest_utils_Print = function() { };
utest_utils_Print.__name__ = "utest.utils.Print";
utest_utils_Print.immediately = function(msg) {
	console.log(msg);
};
utest_utils_Print.startCase = function(caseName) {
};
utest_utils_Print.startTest = function(name) {
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
if(typeof $global.$haxeUID == "undefined") $global.$haxeUID = 0;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = String;
String.__name__ = "String";
Array.__name__ = "Array";
Date.prototype.__class__ = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
var scope = ("undefined" !== typeof window && window) || ("undefined" !== typeof global && global) || Function("return this")();
if(!scope.setImmediate) {
	scope.setImmediate = function(callback) {
		scope.setTimeout(callback,0);
	};
}
var lastTime = 0;
var vendors = ["webkit","moz"];
var x = 0;
while(x < vendors.length && !scope.requestAnimationFrame) {
	scope.requestAnimationFrame = scope[vendors[x] + "RequestAnimationFrame"];
	scope.cancelAnimationFrame = scope[vendors[x] + "CancelAnimationFrame"] || scope[vendors[x] + "CancelRequestAnimationFrame"];
	++x;
}
if(!scope.requestAnimationFrame) {
	scope.requestAnimationFrame = function(callback1) {
		var currTime = new Date().getTime();
		var timeToCall = Math.max(0,16 - (currTime - lastTime));
		var id = scope.setTimeout(function() {
			callback1(currTime + timeToCall);
		},timeToCall);
		lastTime = currTime + timeToCall;
		return id;
	};
}
if(!scope.cancelAnimationFrame) {
	scope.cancelAnimationFrame = function(id1) {
		scope.clearTimeout(id1);
	};
}
if(typeof(scope.performance) == "undefined") {
	scope.performance = { };
}
if(typeof(scope.performance.now) == "undefined") {
	var nowOffset = new Date().getTime();
	if(scope.performance.timing && scope.performance.timing.navigationStart) {
		nowOffset = scope.performance.timing.navigationStart;
	}
	var now = function() {
		return new Date() - nowOffset;
	};
	scope.performance.now = now;
}
DateTools.DAYS_OF_MONTH = [31,28,31,30,31,30,31,31,30,31,30,31];
_$Debug_LogLevel_$Impl_$.Debug = 10;
_$Debug_LogLevel_$Impl_$.Info = 20;
_$Debug_LogLevel_$Impl_$.Warning = 30;
_$Debug_LogLevel_$Impl_$.Error = 40;
_$Debug_LogLevel_$Impl_$.Critical = 50;
_$Debug_LogLevel_$Impl_$.longest = 10;
haxe__$Int32_Int32_$Impl_$._mul = Math.imul != null ? Math.imul : function(a,b) {
	return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerSecond = 1000;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerMinute = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerSecond * 60;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerHour = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerMinute * 60;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerDay = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerHour * 24;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.tenI64 = new haxe__$Int64__$_$_$Int64(0,10);
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.hundredI64 = new haxe__$Int64__$_$_$Int64(0,100);
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.thousandI64 = new haxe__$Int64__$_$_$Int64(0,1000);
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.tenThousandI64 = new haxe__$Int64__$_$_$Int64(0,10000);
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millionI64 = new haxe__$Int64__$_$_$Int64(0,1000000);
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMicrosecondI64 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.tenI64;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecond = 10000;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64 = (function($this) {
	var $r;
	var x = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecond;
	$r = new haxe__$Int64__$_$_$Int64(x >> 31,x);
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64 = (function($this) {
	var $r;
	var a = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64;
	var b_high = 0;
	var b_low = 1000;
	var al = a.low & 65535;
	var ah = a.low >>> 16;
	var bl = b_low & 65535;
	var bh = b_low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = p00 + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		++high;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		++high;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b_high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b_low) | 0) | 0;
	$r = new haxe__$Int64__$_$_$Int64(high,low);
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64 = (function($this) {
	var $r;
	var a = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
	var b_high = 0;
	var b_low = 60;
	var al = a.low & 65535;
	var ah = a.low >>> 16;
	var bl = b_low & 65535;
	var bh = b_low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = p00 + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		++high;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		++high;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b_high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b_low) | 0) | 0;
	$r = new haxe__$Int64__$_$_$Int64(high,low);
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64 = (function($this) {
	var $r;
	var a = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64;
	var b_high = 0;
	var b_low = 60;
	var al = a.low & 65535;
	var ah = a.low >>> 16;
	var bl = b_low & 65535;
	var bh = b_low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = p00 + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		++high;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		++high;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b_high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b_low) | 0) | 0;
	$r = new haxe__$Int64__$_$_$Int64(high,low);
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64 = (function($this) {
	var $r;
	var a = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64;
	var b_high = 0;
	var b_low = 24;
	var al = a.low & 65535;
	var ah = a.low >>> 16;
	var bl = b_low & 65535;
	var bh = b_low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = p00 + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		++high;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		++high;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b_high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b_low) | 0) | 0;
	$r = new haxe__$Int64__$_$_$Int64(high,low);
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPerYear = 365;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer4Years = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPerYear * 4 + 1;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer100Years = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer4Years * 25 - 1;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer400Years = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer100Years * 4 + 1;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysTo1970 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer400Years * 4 + thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer100Years * 3 + thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer4Years * 17 + thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPerYear;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.unixEpochTicks = (function($this) {
	var $r;
	var a = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64;
	var x = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysTo1970;
	var b_high = x >> 31;
	var b_low = x;
	var al = a.low & 65535;
	var ah = a.low >>> 16;
	var bl = b_low & 65535;
	var bh = b_low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = p00 + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		++high;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		++high;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b_high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b_low) | 0) | 0;
	$r = new haxe__$Int64__$_$_$Int64(high,low);
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR = 0;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY_OF_YEAR = 1;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH = 2;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY = 3;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth365 = [0,31,59,90,120,151,181,212,243,273,304,334,365];
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth366 = [0,31,60,91,121,152,182,213,244,274,305,335,366];
thx_Dates.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Dates.compare);
thx_Floats.TOLERANCE = 10e-5;
thx_Floats.EPSILON = 1e-9;
thx_Floats.pattern_parse = new EReg("^(\\+|-)?(:?\\d+(\\.\\d+)?(e-?\\d+)?|nan|NaN|NAN)$","");
thx_Floats.pattern_inf = new EReg("^\\+?(inf|Inf|INF)$","");
thx_Floats.pattern_neg_inf = new EReg("^-(inf|Inf|INF)$","");
thx_Floats.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Floats.compare);
thx_Floats.monoid = { zero : 0.0, append : function(a,b) {
	return a + b;
}};
thx_Int64s.one = new haxe__$Int64__$_$_$Int64(0,1);
thx_Int64s.two = new haxe__$Int64__$_$_$Int64(0,2);
thx_Int64s.zero = new haxe__$Int64__$_$_$Int64(0,0);
thx_Int64s.ten = new haxe__$Int64__$_$_$Int64(0,10);
thx_Int64s.maxValue = new haxe__$Int64__$_$_$Int64(2147483647,-1);
thx_Int64s.minValue = new haxe__$Int64__$_$_$Int64(-2147483648,1);
thx_Int64s.min = new haxe__$Int64__$_$_$Int64(-2147483648,0);
thx_Ints.pattern_parse = new EReg("^[ \t\r\n]*[+-]?(\\d+|0x[0-9A-F]+)","i");
thx_Ints.BASE = "0123456789abcdefghijklmnopqrstuvwxyz";
thx_Ints.order = function(i0,i1) {
	if(i0 > i1) {
		return thx_OrderingImpl.GT;
	} else if(i0 == i1) {
		return thx_OrderingImpl.EQ;
	} else {
		return thx_OrderingImpl.LT;
	}
};
thx_Ints.monoid = { zero : 0, append : function(a,b) {
	return a + b;
}};
thx_Orderings.monoid = { zero : thx_OrderingImpl.EQ, append : function(o0,o1) {
	switch(o0._hx_index) {
	case 0:
		return thx_OrderingImpl.LT;
	case 1:
		return thx_OrderingImpl.GT;
	case 2:
		return o1;
	}
}};
thx_Strings.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Strings.compare);
thx_Strings.HASCODE_MAX = 2147483647;
thx_Strings.HASCODE_MUL = 31;
thx_Strings.monoid = { zero : "", append : function(a,b) {
	return a + b;
}};
thx_Strings.UCWORDS = new EReg("[^a-zA-Z]([a-z])","g");
thx_Strings.IS_BREAKINGWHITESPACE = new EReg("[^\t\n\r ]","");
thx_Strings.IS_ALPHA = new EReg("[^a-zA-Z]","");
thx_Strings.UCWORDSWS = new EReg("[ \t\r\n][a-z]","g");
thx_Strings.ALPHANUM = new EReg("^[a-z0-9]+$","i");
thx_Strings.DIGITS = new EReg("^[0-9]+$","");
thx_Strings.STRIPTAGS = new EReg("</?[a-z]+[^>]*>","gi");
thx_Strings.WSG = new EReg("[ \t\r\n]+","g");
thx_Strings.SPLIT_LINES = new EReg("\r\n|\n\r|\n|\r","g");
thx_Strings.CANONICALIZE_LINES = new EReg("\r\n|\n\r|\r","g");
thx__$Time_Time_$Impl_$.zero = new haxe__$Int64__$_$_$Int64(0,0);
thx__$Time_Time_$Impl_$.oneDay = new haxe__$Int64__$_$_$Int64(0,24);
thx_Timer.FRAME_RATE = Math.round(16.6666666666666679);
thx_fp__$Map_Map_$Impl_$.delta = 5;
thx_fp__$Map_Map_$Impl_$.ratio = 2;
utest_TestHandler.POLLING_TIME = 10;
utest_AccessoryName.SETUP_NAME = "setup";
utest_AccessoryName.SETUP_CLASS_NAME = "setupClass";
utest_AccessoryName.TEARDOWN_NAME = "teardown";
utest_AccessoryName.TEARDOWN_CLASS_NAME = "teardownClass";
RunAll.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=tests.js.map